{"version":3,"sources":["img/user-solid.svg","img/matter-white.svg","utils/setAuthToken.js","reducers/login/index.js","actions/navMenuActions.js","reducers/navMenu/index.js","actions/addToCart.js","actions/product.js","reducers/product/index.js","actions/filterActions.js","reducers/filters/index.js","actions/productDetails.js","reducers/productDetails/index.js","actions/categoryCarousel.js","reducers/categoryCarousel/index.js","reducers/cart/index.js","actions/cart.js","reducers/addToCart/index.js","actions/search.js","reducers/search/index.js","actions/adminDashboard/admNavMenuActions.js","reducers/adminDashboard/admNavMenuStates.js","actions/adminDashboard/admProductsActions.js","reducers/adminDashboard/admProductsStates.js","actions/adminDashboard/admColorActions.js","reducers/adminDashboard/admColorStates.js","actions/adminDashboard/admSizeActions.js","reducers/adminDashboard/admSizeStates.js","reducers/index.js","store.js","actions/login.js","validation/index.js","components/atomic/customRequiredInput.js","components/TopBlockAuth/LoginForm/FormLogin.js","components/TopBlockAuth/LoginForm/index.js","components/TopBlockAuth/RegistrationForm/FormRegistration.js","components/TopBlockAuth/RegistrationForm/index.js","components/TopBlockAuth/RegistrationOk/index.js","components/Search/index.js","components/TopBlockAuth/index.js","components/Header/NavMenu/index.js","components/Header/index.js","components/Footer/index.js","components/ProductsCarousel/index.js","components/Subscribe/index.js","components/ProductCard/index.js","components/ProductListing/index.js","components/Preloader/index.js","components/CategoryCarousel/index.js","components/ScrollBtn/index.js","components/SearchResultItem/index.js","components/SearchDropDownList/index.js","components/MainPage/index.js","components/ProductPage/PhotoGallery/index.js","components/ProductPage/ProductInfo/ProductColors/index.js","components/atomic/ProductCounter/index.js","components/ProductPage/ProductInfo/ProductSizes/index.js","components/atomic/BtnAddToCart/index.js","components/ProductPage/ProductInfo/index.js","components/BreadCrumbs/index.js","components/ProductPage/index.js","components/atomic/customCorrectEmail.js","components/Profile/PersonalContent/FormPersonalContent.js","components/Profile/PersonalContent/index.js","components/Profile/DeliveryInfo/index.js","components/Profile/ChangePassword/FormChangePassword.js","components/Profile/ChangePassword/index.js","components/Profile/PaymentDetails/index.js","components/Profile/OrdersHistory/index.js","components/Profile/index.js","components/Unsubscribe/index.js","components/Cart/FinalOrder/index.js","components/Cart/index.js","components/Checkout/PlaceOrder/index.js","components/Checkout/FormDeliveryCheckout.js","components/Checkout/FormPaymentCheckout.js","components/Checkout/Modals/SuccessOrder/index.js","components/atomic/FormLogin.js","components/Checkout/Modals/UnsuccessOrder/FormCheckoutByEmail.js","components/Checkout/Modals/UnsuccessOrder/index.js","components/Checkout/Modals/FinishAfterLogin/index.js","components/Checkout/index.js","components/FilteredProductList/Filters/CategoryFilter/index.js","components/FilteredProductList/Filters/ColorFilter/index.js","components/FilteredProductList/Filters/SizeFilter/index.js","components/FilteredProductList/Filters/PriceFilter/index.js","components/FilteredProductList/Filters/index.js","components/EmptyState/index.js","components/FilteredProductList/index.js","components/StaticPages/AboutUs.js","components/StaticPages/OurPolicy.js","components/StaticPages/Careers.js","components/Dashboard/index.js","components/AdminDashboard/AdmNavMenu/index.js","components/AdminDashboard/AdmProducts/index.js","components/AdminDashboard/AdmColors/index.js","components/AdminDashboard/AdmSizes/index.js","components/AdminDashboard/index.js","components/AdminDashboard/AdmCarousel/index.js","components/AdminDashboard/AdmUsers/index.js","components/AdminDashboard/AdmFooter/index.js","components/TopBlockAuth/RedirectLogin/index.js","components/VerifyLogin/index.js","App.js","serviceWorker.js","index.js","img/matter.svg"],"names":["module","exports","__webpack_require__","p","setAuthToken","token","axios","defaults","headers","common","initialState","isLogged","historyPath","loggedData","id","firstName","secondName","email","isAdmin","deliveryData","country","zipcode","city","street","phone","paymentInfo","cardNumber","nameOnCard","expiryMonth","expiryYear","windowsStatus","formLoginOpen","formRegisterOpen","formRegistrationOk","loginDetails","successRegister","invalidLogin","existEmail","errorStatus","errorProfileExistEmail","errorProfileWrongPassword","login","state","arguments","length","undefined","action","type","SET_LOGGED","Object","objectSpread","SAVE_HISTORY_PATH","payload","link","SET_JWT_CURRENT_USER","LOGOUT_JWT_CURRENT_USER","SEND_NEW_USER","OPEN_LOGIN_FORM","CLOSE_LOGIN_FORM","OPEN_LOGIN_DETAILS","CLOSE_LOGIN_DETAILS","OPEN_REG_FORM","CLOSE_REG_FORM","OPEN_REG_OK_FORM","CLOSE_REG_OK_FORM","EXIST_USER","PROFILE_EXIST_EMAIL","PROFILE_INCORRECT_PASSWORD_CHANGE","PROFILE_CORRECT_PASSWORD_CHANGE","PROFILE_CORRECT_PERSONAL_CHANGE","userinfo","_id","INCORRECT_LOGIN","CORRECT_LOGIN","LOGOUT","name","RESET_WINDOW_STATUS","SEND_NAV_REQUEST","GET_NAV_MENU","OPEN_SUB_MENU","CLOSE_SUB_MENU","isMenuFetching","navMenuItems","navMenuWindowStatus","currentOnMouseOverCategory","navMenu","SET_INITIAL_STATE_ADD_CART","SET_COLOR","SET_SIZE","SET_AMOUNT","SET_IMG","SEND_PRODUCT_REQUEST","GET_PRODUCT_LISTING","SEND_PRODUCT_POP_REQUEST","GET_PRODUCT_POP_LISTING","SAVE_PRODUCT_DETAILS","productListing","productPopularListing","isProductListing","isProductPopularListing","activeColor","product","FETCH_FILTER_REQUESTED","FETCH_FILTER_SUCCEEDED","FETCH_PRODUCT_REQUESTED","FETCH_PRODUCT_SUCCEEDED","FETCH_ADD_PRODUCT_SUCCEEDED","SELECT_FILTERS","SELECT_SIZE","SELECT_PRICE","SET_DEFAULT_PAGE","SET_NUMBER_OF_PAGES","SET_PAGE","CLEAR_PRODUCTS_LIST","clearProductList","dispatch","selectFilters","currentFilters","newFilters","subCategory","furtherSubCategory","colorName","size","filters","assign","post","category","minPrice","price","min","maxPrice","max","pageNo","then","info","products","data","newProducts","JSON","parse","stringify","amountPages","amount","catch","err","console","log","selectSize","selectPrice","isFilterFetching","isProductFetching","colorFilters","sizeFilters","sizeOptions","currentSizeOption","selected","colors","newArray","map","elem","forEach","push","FETCH_PRODUCT_DETAIL_REQUEST","FETCH_PRODUCT_DETAIL_SUCCEED","FETCH_PRODUCT_DETAIL_FAIL","getProductDetails","routeDetails","get","concat","params","result","isAvailable","reasonNotAvailable","model","currentPrice","priceFormDB","productOpened","productFeatures","imageUrls","sizes","productDetails","FETCH_CATEGORY_CAROUSEL_REQUESTED","FETCH_CATEGORY_CAROUSEL_SUCCEEDED","categoriesList","isCategoriesFetching","categoryCarousel","amountInBasket","idUser","userMail","idCartInDB","orderNo","arrayProduct","arrayCheckout","windows","successOrder","unsuccessOrder","finishAfterLogin","checkedDelivery","deliveryMethods","duration","setLocalStorage","arr","localStorage","setItem","countAmount","array","count","saveInDB","dataCart","sendObj","res","success","store","SET_ID_CART_FROM_DB","updateInDB","updateIsFinished","obj","dataOrder","mail","textOrder","getListProductInHtml","sendOrder","SET_ORDER_NO","OPEN_MODAL_SUCCESS_ORDER","SET_DEFAULT_FINISHED_CART","updateCartIsFinished","cart","SET_ID_LOGGED_USER","SET_DATA_CART_FROM_DB","infoDB","DELETE_ITEM_TO_CART","CART_FROM_LOCALSTORAGE_TO_DB","CLEAR_CART_ON_LOGOUT","ADD_ITEM_TO_CART","arrProd","index","item","CHANGE_CHECK_AMOUT_OF_ITEM","changeCheckArrayAmountProd","newArr","SET_CART_FROM_LOCALSTORAGE","arrLS","UPDATE_STORE_AFTER_CHECK_IN_DB","changeAfterCheck","CHANGE_DELIVERY_METHOD","method","SET_FINISHED_CART","CLOSE_MODAL_SUCCESS_ORDER","OPEN_MODAL_UNSUCCESS_ORDER","CLOSE_MODAL_UNSUCCESS_ORDER","SET_INVALID_LOGIN","SUCCESSFULL_SEND_ORDER_BY_EMAIL","OPEN_MODAL_FINISH_ORDER_AFTER_LOGIN","CLOSE_MODAL_FINISH_ORDER_AFTER_LOGIN","availableAmount","urlPhoto","addToCart","color","url","FETCH_SEARCH_REQUESTED","FETCH_SEARCH_SUCCEEDED","TYPE_SEARCH_VALUE","FOCUS_SEARCH_INPUT","BLUR_SEARCH_INPUT","CLEAR_SEARCH_INPUT","CLOSE_SEARCH_RESULTS","VALIDATE_SEARCH_VALUE","searchStart","searchSuccess","search","call","value","cancel","CancelToken","source","query","cancelToken","response","thrown","isCancel","makeRequestCreator","focus","searchString","nonValid","closeResults","isSearchFetching","CHANGE_SELECTED_ITEM_ACTIVE_STATUS","ADD_NEW_CATEGORY","ADD_NEW_SUB_CATEGORY","ADD_NEW_FURTHER_SUB_CATEGORY","FETCH_NAV_MENU_REQUESTED","FETCH_NAV_MENU_SUCCEEDED","FETCH_NAV_MENU_FAILED","getAdmNavMenuItems","categoryList","navMenuItemsArr","resultMessage","admNavMenu","rand","uniqueRandom","GET_CATEGORY_NAME","GET_SUB_CATEGORY_NAME","GET_FURTHER_SUB_CATEGORY_NAME","SET_SUBCATEGORY_OPTIONS","SET_FURTHER_SUBCATEGORY_OPTIONS","GET_PRODUCT_MODEL_NAME","GET_WITHDRAWN_STATUS","GET_ACTIVE_STATUS","GET_CURRENT_PRICE","GET_PREVIOUS_PRICE","UPDATE_PRODUCT_FEATURES","SET_COLOR_OPTIONS","SET_SIZE_OPTIONS","RESET_MODAL_STATUS","RESET_PRODUCT_FORM","SET_ERROR_MSG","GENERATE_NEW_ITEM_NO","COLOR_COLLECTION_UPDATE_MESSAGE","SIZE_COLLECTION_UPDATE_MESSAGE","FETCH_NEW_PRODUCT_REQUESTED","FETCH_NEW_PRODUCT_SUCCEEDED","FETCH_NEW_PRODUCT_FAILED","FETCH_NEW_PRODUCT_PHOTOS_SUCCEEDED","FETCH_NEW_PRODUCT_PHOTOS_FAILED","getProductFeatures","all","spread","colorNameOptions","label","sort","a","b","colorStyles","cssHexCode","colorCollection","hasDublicates","arrayOfObjects","propName","subPropName","some","i","indexOf","urltoFile","_ref","asyncToGenerator","regenerator_default","mark","_callee","filename","mimeType","file","wrap","_context","prev","next","fetch","arrayBuffer","buf","File","sent","abrupt","stop","this","_x","_x2","_x3","apply","itemNo","productModelName","subCategoryOptions","furtherSubCategoryOptions","withdrawnFromSale","active","previousPrice","colorOptions","previewImages","blobUrls","filesRejected","quantity","resetModalStatus","validation","colorDublicate","imageNamesDuplicate","sizeDublicate","fetchingNewProduct","productMessage","photosMessage","colorCollectionUpdateMessage","sizeCollectionUpdateMessage","admProducts","GET_NEW_COLOR_HEX","GET_NEW_COLOR_NAME","NEW_COLOR_MESSAGE","NEW_COLOR_MODAL_STATUS","FETCH_NEW_COLOR_REQUESTED","FETCH_NEW_COLOR_SUCCEEDED","FETCH_NEW_COLOR_FAILED","FETCH_EXISTING_COLOR_REQUESTED","FETCH_EXISTING_COLOR_SUCCEEDED","existingColors","isExistingColorsFetching","newColorName","newCssHexCode","newColorMessage","existingColorObject","newColorObject","newColorModalStatus","finalMessage","isAllColorsFetching","admColors","GET_NEW_SIZE_NAME","FETCH_NEW_SIZE_REQUESTED","FETCH_NEW_SIZE_SUCCEEDED","FETCH_NEW_SIZE_FAILED","FETCH_EXISTING_SIZE_REQUESTED","FETCH_EXISTING_SIZE_SUCCEEDED","GET_NUPDATED_SIZE_NAME","FETCH_UPDATING_SIZE_REQUESTED","FETCH_UPDATING_SIZE_SUCCEEDED","FETCH_UPDATING_SIZE_FAILED","newSizeName","isNewSizeFetching","checkNewSizeResult","isExistingSizesFetching","existingSizes","updatingSizes","sizeUpdateResults","isSizeUpdating","preUpdateValue","updatedSizeValue","errorMsg","admSizes","rootReducer","combineReducers","form","formReducer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","sendCheckout","toFixed","checkLoginCartOnStart","jwtToken","decoded","jwt_decode","setLoggedUser","_doc","userId","readyData","currentTime","Date","now","exp","unsetLoggedUser","location","href","savedCart","checkSavedCart","removeItem","goToProfile","history","correctEmail","input","RegExp","test","cvc","dateExp","allInputs","date","requiredInput","matchPasswords","newPass","matchPasswordsReg","password","customRequiredInput","props","className","classError","placeholder","meta","react_default","createElement","react","error","touched","FormLogin","handleSubmit","onSubmit","Field","component","validate","Component","reduxForm","LoginForm","values","sendLogin","_this","checkLogin","classCheckEmail","data-btn","LoginForm_FormLogin","connect","loginForm","openLoginForm","closeLoginForm","openRegForm","closeRegForm","FormRegistration","classExistEmail","RegistrationForm","newForm","password2","addNewUser","RegistrationForm_FormRegistration","regForm","RegistrationOk","Fragment","Search","_this$props","clearSearchInput","focusSearchInput","validateSearchValue","style","width","onChange","e","target","onFocus","onKeyPress","onClick","React","key","preventDefault","TopBlockAuth","closeModal","setState","modalFormOpen","clickOnLogin","clickOnRegistration","handleLoginForm","dataset","btn","stopPropagation","handleRegistrationForm","handleRegistrationOk","handleDropDownProfile","_this2","notLogged","isCartNotEmpty","amountCart","components_Search","src","userLogo","alt","openLoginDetails","NavLink","to","react_fontawesome_index_es","icon","faCogs","TopBlockAuth_LoginForm","TopBlockAuth_RegistrationForm","TopBlockAuth_RegistrationOk","closeLoginDetails","logout","withRouter","NavMenu","initiateCategoryFilters","newCategory","newSubCategory","newFurtherSubCategory","getNavMenuItems","menuList","onMouseOver","openSubMenu","categoryName","closeSubMenu","Link","categoryUrl","subMenuList","subCategoryList","subfurtherSubCategory","furtherSubCategoryList","furtherSubCategoryUrl","subCategoryName","furtherSubCategoryName","subCategoryUrl","charAt","toUpperCase","slice","subMenuSection","onMouseLeave","miniPreloader","Header","logo","Header_NavMenu","components_TopBlockAuth","Footer","content","footerContent","linksList","links","path","activeClassName","title","ProductsCarousel","dbCarousel","_this3","itemsCarousel","desc","imageUrl","productUrl","react_responsive_carousel_lib","autoPlay","interval","transitionTime","stopOnHover","showIndicators","infiniteLoop","showStatus","useKeyboardArrows","Subscribe","handleChange","sendMail","subMail","ProductCard","split","word","join","saveProductDetails","ProductListing","getProductPopular","counterItems","listProduct","productItem","children","components_ProductCard","Preloader","CategoryCarousel","getCategoryItem","listCategories","categoryImg","components_Preloader","ScrollBtn","intervalId","pageYOffset","clearInterval","scroll","scrollStepInPx","setInterval","scrollStep","delayInMs","scrollToTop","SearchResultItem","closeSearchResults","resetColor","searchedProductList","productColors","backgroundColor","productSizes","uniqueProductSizes","toConsumableArray","Set","categoryMatches","AutosuggestHighlightMatch","categoryMatched","AutosuggestHighlightParse","part","highlight","text","subCategoryMatches","subCategoryMatched","furtherSubCategoryMatches","furtherSubCategoryMatched","modelMatches","modelMatched","itemNoMatches","itemNoMatched","sizeMatches","sizeMatched","SearchDropDownList","components_SearchResultItem","MainPage","components_ScrollBtn_ScrollBtn","components_SearchDropDownList","components_ProductsCarousel","components_ProductListing","components_CategoryCarousel","components_Subscribe","PhotoGallery","prevProps","prevState","setColorAddCart","setUrlAddCart","photoGallery","photoGalleryFiltered","filter","mainPhotoObj","mainPhotoSrc","ReactImageMagnify","smallImage","isFluidWidth","largeImage","height","ProductColors","quantityAll","Number","reduce","activeElement","changeColor","ProductCounter","event","setAmountAddCart","increaseCount","maxcount","existValue","decreaseCount","inputValue","maxCount","onInput","ProductSizes","productCount","chosenSize","choseSizes","setSizeAddCart","atomic_ProductCounter","BtnAddToCart","sendToCart","isExist","infoCart","addProductToCart","ProductInfo","Helmet","rel","ProductColors_ProductColors","ProductInfo_ProductSizes","atomic_BtnAddToCart","BreadCrumbs","changeCategoryFilters","_this$props$categoryA","categoryAway","subCategories","cat","subCat","furtherSubCatList","furtherSubCat","mainCategory","modelName","ProductPage","thumbs","setInitialColor","match","_this$props$productIt","components_BreadCrumbs","ProductPage_PhotoGallery","ProductPage_ProductInfo","customCorrectEmail","FormPersonalContent","pristine","submitting","invalid","disabled","initialValues","PersonalContent","sendObject","personalInfo","profileChangePersonal","classIsLogged","classNotLogged","isNewEmailUser","PersonalContent_FormPersonalContent","status","DeliveryInfo","onStateChange","defineProperty","FormChangePassword","ChangePassword","currPass","newPassword","profileChangePassword","isCorrectPassword","ChangePassword_FormChangePassword","PaymentDetails","OrdersHistory","arrOrders","arrMonths","dateOrder","dd","getDate","mm","getMonth","yy","getFullYear","listProducts","Profile","pathname","setHistoryLink","Route","exact","Unsubscribe","submitted","unsubscribeMail","FinalOrder","totalPrice","dataBasket","Cart","isBlock","isRequest","isNaN","arrayCheckProducts","checkItem","checkArrayAvailableItems","falseBlock","falseRequest","addAmount","newAmount","setTimeout","minusAmount","deleteItem","splice","nextProps","nextState","isUpdate","productList","keyItem","classIsAvailable","classIsNotAvailable","classWasChangedPrice","classWasntChangedPrice","faTimes","Cart_FinalOrder","changeArrayAmount","arrData","updatedArray","checkAvailableItem","PlaceOrder","deliveryPrice","enableBtn","setFinishedCart","FormDeliveryCheckout","FormPaymentCheckout","checkCorrectPayment","SuccessOrder","modalSuccessOrder","modalSuccessBackdrop","closeSuccessOrder","FormCheckoutByEmail","UnsuccessOrder","handleSubmitLogin","checkLoginBeforeCheckout","handleSubmitEmail","sendOrderByEmail","modalUnsuccessOrderFailLogin","atomic_FormLogin","UnsuccessOrder_FormCheckoutByEmail","closeUnsuccessOrder","FinishAfterLogin","modalFinishAfterLogin","Checkout","showDelivery","showPayment","finishOrder","clickShowDelivery","handleDeliverySubmit","handlePaymentSubmit","handleLoginUnsuccessForm","arrayProducts","arrayDelivery","checked","handleDeliveryRadio","htmlFor","showDeliveryClass","showPaymentClass","Checkout_FormDeliveryCheckout","Checkout_FormPaymentCheckout","Checkout_PlaceOrder","Modals_SuccessOrder","Modals_UnsuccessOrder","Modals_FinishAfterLogin","radio","CategoryFilter","urlParams","categoryFilters","ColorFilter","componentDidMount","getFilterElems","handleColorRadio","currentColorName","colorItems","unshift","SizeFilter","sizeFilterChange","selectedOption","currentCategoriesLength","currentCategories","includes","relevantSizeOptions","categories","splitedCat","react_select_esm","options","PriceFilter","_this$props$urlParams","onPriceFilter","js_default","formatLabel","maxValue","minValue","step","allowSameValues","draggableTrack","onChangeComplete","selectedPrice","Filters","filterReset","Filters_CategoryFilter","Filters_PriceFilter","Filters_ColorFilter","Filters_SizeFilter","EmptyState","isFilterResultEmpty","returnToMainPage","FilteredProductList","addNumberPage","currentValue","_this$props$match$par","getFilteredProducts","filteredProductList","isSizePresent","filterEmptyState","EmptyState_EmptyState","FilteredProductList_Filters","react_infinite_scroller_default","pageStart","loadMore","hasMore","threshold","setNewPage","AboutUs","pageTitle","pageContent","OurPolicy","class","Careers","Dashboard","handleCloseForms","checkoutWindows","closeRegistrationOk","blurSearchInput","components_Header","Switch","components_Footer","AdmNavMenu","chosenCategory","chosenSubCategory","newCategotyName","newSubCategotyName","newFurtherSubCategotyName","resetState","handleNewItemsChange","errors","handleCategoryRadio","handleSubCategoryRadio","isCategoryCurrent","toLowerCase","changeSelectedItemActiveStatus","isSubCategoryCurrent","furtherSubCategories","addNewCategory","addNewSubCategory","addNewFurtherSubCategory","saveUpdatedNavMenu","newState","String","Math","random","callbackGetAdmNavMenuItems","updatedMenu","navigationMenuItems","AdmProducts","getCategory","getSubCategory","getFurtherSubCategory","getProductModelName","getwithdrawnStatus","getActiveStatus","getCurrentPrice","getPreviousPrice","handleProductColors","addColor","addSize","getImages","onFilesRejected","deleteDropzoneImage","deleteSize","deleteColor","handleProductSizes","handleProductQuantity","resetModal","resetForm","generateNewItemNo","sendNewProductToServer","categoryOptions","productFeaturesList","colorIndex","currentColor","currentColorCssHexCode","dublicates","img","imgName","imgNamesArr","previewImagesContent","image","preview","data-index","data-action","sizeItemList","sizeIndex","option","dist_es","multiple","onDrop","files","onDropRejected","accept","acceptClassName","rejectClassName","maxSize","faImages","encType","required","isDisabled","fSubCat","colorOption","colorCssHexCode","updatedProductFeatures","newValidation","newImages","incomingImages","lastModified","lastModifiedDate","webkitRelativePath","blobUrl","URL","createObjectURL","fileName","imgs","getAttribute","previousElementSibling","j","newValidationProductFeatures","sizeOption","quantuty","validationObject","validateForm","Array","isArray","prop","subItem","subProp","isInvalid","newProduct","_ref2","_callee2","imageUrlStaticPart","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","formData","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_iterator4","_step4","blobFile","newProductColors","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","_color","nonUniqueSizes","newProductUniqueSizes","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_iterator3","_step3","_context2","message","Symbol","iterator","done","FormData","append","t0","return","finish","content-type","t1","updatedColor","t2","updatedSize","t3","_x4","AdmColors","getExistingColorsFromDb","getNewColorName","getNewColorHex","checkNewColorInDb","handleNewColorModal","addOrUpdateColorInDb","updateColorsInAllProducts","existingColorsList","react_color_lib","keys","colorPickerObject","hex","trim","replace","colorInfo","existingColor","callbackGetUpdatedColors","callbackGetProductFeatures","callbackUpdateColorsInAllProducts","preUpdatedProducts","updatedProducts","AdmSizes","getExistingSizes","getNewSizeName","saveNewSizeInDb","getUpdatedSize","updateSizeInDb","updateSizesInAllProducts","existingSizeValues","updatingSizeInputs","categoriesInSizes","multiArr","sizeCat","uniqueCatsString","sizeName","cbGetExistingSizes","newSize","existingSize","allSizes","sizeId","newSizes","newSizeValue","callbackGetExistingSizes","callbackUpdateSizesInAllProducts","previousSizeName","AdminDashboard","RedirectLogin","historyLink","checkRedirectLogin","VerifyLogin","App","Boolean","hostname","ReactDOM","render","es","BrowserRouter","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.01886790.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/user-solid.a617dfb6.svg\";","module.exports = __webpack_public_path__ + \"static/media/matter-white.0f8c6492.svg\";","import axios from \"axios\";\n\nconst setAuthToken = token => {\n    if (token) {\n        // Apply to every request\n        axios.defaults.headers.common[\"Authorization\"] = token;\n    } else {\n        // Delete auth header\n        delete axios.defaults.headers.common[\"Authorization\"];\n    }\n};\n\nexport default setAuthToken;","import {\n    SET_LOGGED, SEND_NEW_USER, OPEN_LOGIN_FORM, CLOSE_LOGIN_FORM,\n    OPEN_REG_FORM, CLOSE_REG_FORM, EXIST_USER, RESET_WINDOW_STATUS, INCORRECT_LOGIN,\n    CORRECT_LOGIN, OPEN_LOGIN_DETAILS, CLOSE_LOGIN_DETAILS, LOGOUT, PROFILE_EXIST_EMAIL,\n    PROFILE_CORRECT_PERSONAL_CHANGE, PROFILE_CORRECT_PASSWORD_CHANGE,\n    PROFILE_INCORRECT_PASSWORD_CHANGE, SET_JWT_CURRENT_USER, LOGOUT_JWT_CURRENT_USER,\n    SAVE_HISTORY_PATH, OPEN_REG_OK_FORM, CLOSE_REG_OK_FORM\n} from '../../actions/login'\n\nconst initialState = {\n    isLogged: false,\n    historyPath: '',\n    loggedData: {\n        id: '',\n        firstName: '',\n        secondName: '',\n        email: '',\n        isAdmin: false,\n        deliveryData: {\n            country: '',\n            zipcode: '',\n            city: '',\n            street: '',\n            phone: ''\n\n        },\n        paymentInfo: {\n            cardNumber: '',\n            nameOnCard: '',\n            expiryMonth: '',\n            expiryYear: ''\n        }\n    },\n    windowsStatus: {\n        formLoginOpen: false,\n        formRegisterOpen: false,\n        formRegistrationOk: false,\n        loginDetails: false,\n        successRegister: false,\n        invalidLogin: false,\n        existEmail: false,\n    },\n    errorStatus: {\n        errorProfileExistEmail: false,\n        errorProfileWrongPassword: false\n\n    }\n}\n\nfunction login(state = initialState, action) {\n\n    switch (action.type) {\n        case SET_LOGGED:\n            return {...state}\n\n        case SAVE_HISTORY_PATH:\n            return {\n                ...state,\n                historyPath: action.payload.link,\n            }\n\n        case SET_JWT_CURRENT_USER:\n            return {\n                ...state,\n                isLogged: true,\n                loggedData: {...action.payload},\n                windowsStatus: {\n                    formLoginOpen: false,\n                    formRegisterOpen: false,\n                    formRegistrationOk: false,\n                    loginDetails: false,\n                    successRegister: false,\n                    invalidLogin: false,\n                    existEmail: false,\n                },\n\n            }\n        case LOGOUT_JWT_CURRENT_USER:\n            return {\n                ...state,\n                isLogged: false,\n                loggedData: {\n                    id: '',\n                    firstName: '',\n                    secondName: '',\n                    email: '',\n                    isAdmin: false,\n                    deliveryData: {\n                        country: '',\n                        zipcode: '',\n                        city: '',\n                        street: '',\n                        phone: ''\n\n                    },\n                    paymentInfo: {\n                        cardNumber: '',\n                        nameOnCard: '',\n                        expiryMonth: '',\n                        expiryYear: ''\n                    }\n                },\n                windowsStatus: {\n                    formLoginOpen: false,\n                    formRegisterOpen: false,\n                    formRegistrationOk: false,\n                    loginDetails: false,\n                    successRegister: false,\n                    invalidLogin: false,\n                    existEmail: false,\n                },\n            }\n\n        case SEND_NEW_USER:\n            return {...state}\n\n        case OPEN_LOGIN_FORM:\n            return {\n                ...state,\n                windowsStatus: {\n                    ...state.windowsStatus,\n                    formLoginOpen: true,\n                }\n            }\n        case CLOSE_LOGIN_FORM:\n            return {\n                ...state,\n                windowsStatus: {\n                    ...state.windowsStatus,\n                    formLoginOpen: false,\n                }\n            }\n        case OPEN_LOGIN_DETAILS:\n            return {\n                ...state,\n                windowsStatus: {\n                    ...state.windowsStatus,\n                    loginDetails: true,\n                }\n            }\n        case CLOSE_LOGIN_DETAILS:\n            return {\n                ...state,\n                windowsStatus: {\n                    ...state.windowsStatus,\n                    loginDetails: false,\n                }\n            }\n        case OPEN_REG_FORM:\n            return {\n                ...state,\n                windowsStatus: {\n                    ...state.windowsStatus,\n                    formRegisterOpen: true,\n                }\n            }\n        case CLOSE_REG_FORM:\n            return {\n                ...state,\n                windowsStatus: {\n                    ...state.windowsStatus,\n                    formRegisterOpen: false,\n                    // formRegistrationOk: true,\n                }\n            }\n\n        case OPEN_REG_OK_FORM:\n            return {\n                ...state,\n                windowsStatus: {\n                    ...state.windowsStatus,\n                    formRegisterOpen: false,\n                    formRegistrationOk: true,\n                }\n            }\n        case CLOSE_REG_OK_FORM:\n            return {\n                ...state,\n                windowsStatus: {\n                    ...state.windowsStatus,\n                    formRegistrationOk: false,\n                }\n            }\n\n        case EXIST_USER:\n            return {\n                ...state,\n                windowsStatus: {\n                    ...state.windowsStatus,\n                    existEmail: true,\n                }\n            }\n        case PROFILE_EXIST_EMAIL:\n            return {\n                ...state,\n                errorStatus: {\n                    ...state.errorStatus,\n                    errorProfileExistEmail: true,\n                }\n            }\n\n\n\n        case PROFILE_INCORRECT_PASSWORD_CHANGE:\n            return {\n                ...state,\n                errorStatus: {\n                    ...state.errorStatus,\n                    errorProfileWrongPassword: true,\n                }\n            }\n        case PROFILE_CORRECT_PASSWORD_CHANGE:\n            return {\n                ...state,\n                errorStatus: {\n                    ...state.errorStatus,\n                    errorProfileWrongPassword: false,\n                }\n            }\n\n\n\n        case PROFILE_CORRECT_PERSONAL_CHANGE:\n            return {\n                ...state,\n                windowsStatus: {\n                    formLoginOpen: false,\n                    formRegisterOpen: false,\n                    successRegister: false,\n                    formRegistrationOk: false,\n                    invalidLogin: false,\n                    existEmail: false,\n                },\n                isLogged: true,\n                loggedData: {\n                    id: action.payload.userinfo._id,\n                    firstName: action.payload.userinfo.firstName,\n                    secondName: action.payload.userinfo.secondName,\n                    email: action.payload.userinfo.email,\n                    isAdmin: action.payload.userinfo.isAdmin,\n                    deliveryData: {...action.payload.userinfo.deliveryData},\n                    paymentInfo: {...action.payload.userinfo.paymentInfo},\n                },\n                errorStatus: {\n                    ...state.errorStatus,\n                    errorProfileExistEmail: false,\n\n                }\n            }\n\n\n\n        case INCORRECT_LOGIN:\n            return {\n                ...state,\n                windowsStatus: {\n                    ...state.windowsStatus,\n                    invalidLogin: true,\n                }\n            }\n        case CORRECT_LOGIN:\n            return {\n                ...state,\n                windowsStatus: {\n                    formLoginOpen: false,\n                    formRegisterOpen: false,\n                    formRegistrationOk: false,\n                    successRegister: false,\n                    invalidLogin: false,\n                    existEmail: false,\n                },\n                isLogged: true,\n                loggedData: {\n                    id: action.payload.userinfo._id,\n                    firstName: action.payload.userinfo.firstName,\n                    secondName: action.payload.userinfo.secondName,\n                    email: action.payload.userinfo.email,\n                    isAdmin: action.payload.userinfo.isAdmin,\n                    deliveryData: {...action.payload.userinfo.deliveryData},\n                    paymentInfo: {...action.payload.userinfo.paymentInfo},\n                },\n                errorStatus: {\n                    ...state.errorStatus,\n                    errorProfileExistEmail: false,\n\n                }\n\n            }\n\n        case LOGOUT:\n            return {\n                ...state,\n                windowsStatus: {\n                    formLoginOpen: false,\n                    formRegisterOpen: false,\n                    formRegistrationOk: false,\n                    successRegister: false,\n                    invalidLogin: false,\n                    existEmail: false,\n                },\n                isLogged: false,\n                loggedData: {\n                    id: '',\n                    name: '',\n                    email: '',\n                    isAdmin: false,\n                },\n                errorStatus: {\n                    ...state.errorStatus\n\n                }\n\n            }\n        case RESET_WINDOW_STATUS:\n            return {\n                ...state,\n                windowsStatus: {\n                    formLoginOpen: false,\n                    formRegisterOpen: false,\n                    formRegistrationOk: false,\n                    successRegister: false,\n                    invalidLogin: false,\n                    existEmail: false,\n                }\n            }\n        default:\n            return {...state}\n\n    }\n}\n\nexport default login","import axios from \"axios\";\n\nexport const SEND_NAV_REQUEST = \"SEND_NAV_REQUEST\"; // Preloader while executing asynchronous action\nexport const GET_NAV_MENU = \"GET_NAV_MENU\"; // Get Navigation menu items from server\n\nexport const OPEN_SUB_MENU = \"OPEN_SUB_MENU\";\nexport const CLOSE_SUB_MENU = \"CLOSE_SUB_MENU\";\n\nexport const getNavMenuItems = () => dispatch => {\n  dispatch({\n    type: SEND_NAV_REQUEST\n  });\n\n  axios.get(\"/nav-menu\").then(navMenuItems => {\n    dispatch({\n      type: GET_NAV_MENU,\n      payload: navMenuItems.data[0].categoryList // The Array with the hierarchy Of Navigation menu categories (e.g. women) / subcategories (e.g. clothing) / further subcategories (e.g. pants, dresses)\n    });\n  });\n};\n\nexport const openSubMenu = category => dispatch => {\n  dispatch({\n    type: OPEN_SUB_MENU,\n    payload: category\n  });\n};\n\nexport const closeSubMenu = () => dispatch => {\n  dispatch({\n    type: CLOSE_SUB_MENU\n  });\n};\n","import {\n  GET_NAV_MENU,\n  SEND_NAV_REQUEST,\n  OPEN_SUB_MENU,\n  CLOSE_SUB_MENU\n} from \"../../actions/navMenuActions\";\n\nconst initialState = {\n  isMenuFetching: false,\n  navMenuItems: [],\n  navMenuWindowStatus: false,\n  currentOnMouseOverCategory: null\n};\n\nfunction navMenu(state = initialState, action) {\n  switch (action.type) {\n    case SEND_NAV_REQUEST:\n      return {\n        ...state,\n        isMenuFetching: true\n      };\n    case GET_NAV_MENU:\n      return {\n        ...state,\n        navMenuItems: action.payload,\n        isMenuFetching: false\n      };\n    case OPEN_SUB_MENU:\n      return {\n        ...state,\n        currentOnMouseOverCategory: action.payload,\n        navMenuWindowStatus: true\n      };\n    case CLOSE_SUB_MENU:\n      return {\n        ...state,\n        currentOnMouseOverCategory: null,\n        navMenuWindowStatus: false\n      };\n    default:\n      return { ...state };\n  }\n}\n\nexport default navMenu;\n","export const SET_INITIAL_STATE_ADD_CART = 'SET_INITIAL_STATE_ADD_CART';\nexport const SET_COLOR = 'SET_COLOR';\nexport const SET_SIZE = 'SET_SIZE';\nexport const SET_AMOUNT = 'SET_AMOUNT';\nexport const SET_IMG = 'SET_IMG';","import axios from \"axios\";\nimport { SET_COLOR } from \"../actions/addToCart\";\nexport const SEND_PRODUCT_REQUEST = \"SEND_PRODUCT_REQUEST\";\nexport const GET_PRODUCT_LISTING = \"GET_PRODUCT_LISTING\";\n\nexport const SEND_PRODUCT_POP_REQUEST = \"SEND_PRODUCT_POP_REQUEST\";\nexport const GET_PRODUCT_POP_LISTING = \"GET_PRODUCT_POP_LISTING\";\n\nexport const SAVE_PRODUCT_DETAILS = \"SAVE_PRODUCT_DETAILS\";\n\nexport const getProductPopular = () => dispatch => {\n  dispatch({\n    type: SEND_PRODUCT_POP_REQUEST\n  });\n\n  axios.get(\"/popular-items\").then(productPopularListing => {\n    dispatch({\n      type: GET_PRODUCT_POP_LISTING,\n      payload: productPopularListing.data.map(item => item.product)\n    });\n  });\n};\n\nexport const getProductItem = () => dispatch => {\n  dispatch({\n    type: SEND_PRODUCT_REQUEST\n  });\n\n  axios.get(\"/products\").then(productListing => {\n    dispatch({\n      type: GET_PRODUCT_LISTING,\n      payload: productListing.data\n    });\n  });\n};\n\nexport const saveProductDetails = data => dispatch => {\n  // console.log(data);\n\n  dispatch({\n    type: SET_COLOR,\n    payload: { color: data }\n  });\n\n  dispatch({\n    type: SAVE_PRODUCT_DETAILS,\n    payload: data\n  });\n};\n\nexport const resetColor = () => dispatch => {\n  dispatch({\n    type: SAVE_PRODUCT_DETAILS,\n    payload: \"\"\n  });\n};\n","import {\n  SEND_PRODUCT_REQUEST,\n  GET_PRODUCT_LISTING,\n  SEND_PRODUCT_POP_REQUEST,\n  GET_PRODUCT_POP_LISTING,\n  SAVE_PRODUCT_DETAILS\n} from \"../../actions/product\";\n\nconst initialState = {\n  productListing: [],\n  productPopularListing: [],\n  isProductListing: false,\n  isProductPopularListing: false,\n  activeColor: \"\"\n};\n\nfunction product(state = initialState, action) {\n  switch (action.type) {\n    case SEND_PRODUCT_REQUEST:\n      return {\n        ...state,\n        isProductListing: true\n      };\n    case SAVE_PRODUCT_DETAILS:\n      return {\n        ...state,\n        activeColor: action.payload\n      };\n    case GET_PRODUCT_LISTING:\n      return {\n        ...state,\n        // productListing: action.payload.productListing,\n        productListing: action.payload,\n        isProductListing: false\n      };\n    case SEND_PRODUCT_POP_REQUEST:\n      return {\n        ...state,\n        isProductPopularListing: true\n      };\n    case GET_PRODUCT_POP_LISTING:\n      return {\n        ...state,\n        // productListing: action.payload.productListing,\n        productPopularListing: action.payload,\n        isProductPopularListing: false\n      };\n\n    default:\n      return { ...state };\n  }\n}\n\nexport default product;\n","import axios from \"axios\";\n\nexport const FETCH_FILTER_REQUESTED = \"FETCH_FILTER_REQUESTED\";\nexport const FETCH_FILTER_SUCCEEDED = \"FETCH_FILTER_SUCCEEDED\";\nexport const FETCH_FILTER_FAILED = \"FETCH_FILTER_FAILED\";\n\nexport const FETCH_PRODUCT_REQUESTED = \"FETCH_PRODUCT_REQUESTED\";\nexport const FETCH_PRODUCT_SUCCEEDED = \"FETCH_PRODUCT_SUCCEEDED\";\nexport const FETCH_PRODUCT_FAILED = \"FETCH_PRODUCT_FAILED\";\n\nexport const FETCH_ADD_PRODUCT_SUCCEEDED = \"FETCH_ADD_PRODUCT_SUCCEEDED\";\n\nexport const SELECT_FILTERS = \"SELECT_FILTERS\";\n\nexport const SELECT_SIZE = \"SELECT_SIZE\";\nexport const SELECT_PRICE = \"SELECT_PRICE\";\n\nexport const SET_DEFAULT_PAGE = \"SET_DEFAULT_PAGE\";\nexport const SET_NUMBER_OF_PAGES = \"SET_NUMBER_OF_PAGES\";\nexport const SET_PAGE = \"SET_PAGE\";\n\nexport const CLEAR_PRODUCTS_LIST = \"CLEAR_PRODUCTS_LIST\";\n\nexport const setNewPage = pageNo => dispatch => {\n  dispatch({\n    type: SET_PAGE,\n    payload: { pageNo: pageNo }\n  });\n};\n\nexport const clearProductList = () => dispatch => {\n  dispatch({\n    type: CLEAR_PRODUCTS_LIST\n  });\n};\n\nexport const getFilterElems = () => dispatch => {\n  dispatch({\n    type: FETCH_FILTER_REQUESTED\n  });\n\n  axios.all([axios.get(\"/filters/colors\"), axios.get(\"/filters/sizes\")]).then(\n    axios.spread((colorFilters, sizeFilters) => {\n      let sizes = sizeFilters.data.sort((a, b) => {\n        if (a.value < b.value) {\n          return 1;\n        }\n        if (a.value > b.value) {\n          return -1;\n        }\n        return 0;\n      });\n\n      let sizeOptions = sizes.map(size => {\n        return {\n          value: size.value,\n          label: size.value\n        };\n      });\n\n      sizeOptions.unshift({\n        value: \"all sizes\",\n        label: \"All sizes\"\n      });\n\n      dispatch({\n        type: FETCH_FILTER_SUCCEEDED,\n        colors: colorFilters.data,\n        filters: sizeFilters.data,\n        sizeOptions: sizeOptions\n      });\n    })\n  );\n};\n\nexport const getFilteredProducts = (\n  category,\n  subCategory,\n  furtherSubCategory,\n  colorName,\n  size\n) => dispatch => {\n  dispatch({\n    type: FETCH_PRODUCT_REQUESTED\n  });\n\n  axios\n    .post(\"/products/filtered-products\", {\n      category: category,\n      subCategory: subCategory,\n      furtherSubCategory: furtherSubCategory,\n      colorName: colorName,\n      size: size\n    })\n    .then(info => {\n      let products = info.data.products;\n      let newProducts = JSON.parse(JSON.stringify(products));\n      dispatch({\n        type: FETCH_PRODUCT_SUCCEEDED,\n        payload: newProducts\n      });\n    })\n    .catch(err => console.log(err));\n};\n\nexport const selectFilters = (currentFilters, newFilters) => dispatch => {\n  if (newFilters.subCategory === undefined) {\n    delete currentFilters.subCategory;\n  }\n  if (newFilters.furtherSubCategory === undefined) {\n    delete currentFilters.furtherSubCategory;\n  }\n  if (newFilters.colorName === undefined) {\n    delete currentFilters.colorName;\n  }\n  if (newFilters.size === undefined) {\n    delete currentFilters.size;\n  }\n\n  // function filterObject(obj) {\n  //   const ret = {};\n  //   Object.keys(obj)\n  //     .filter(key => obj[key] !== undefined)\n  //     .forEach(key => (ret[key] = obj[key]));\n  //   console.log(\n  //     \"ret =======================================================================\"\n  //   );\n  //   console.log(ret);\n  //   return ret;\n  // }\n\n  // filterObject(newFilters);\n\n  let filters = Object.assign(currentFilters, newFilters);\n\n  dispatch({\n    type: SELECT_FILTERS,\n    payload: filters\n  });\n\n  dispatch({\n    type: FETCH_PRODUCT_REQUESTED\n  });\n\n  // axios\n  //   .post(\"/products/filtered-products\", {\n  //     category: filters.category,\n  //     subCategory: filters.subCategory,\n  //     furtherSubCategory: filters.furtherSubCategory,\n  //     colorName: filters.colorName,\n  //     size: filters.size,\n  //     minPrice: filters.price.min,\n  //     maxPrice: filters.price.max\n  //   })\n  //   .then(products => {\n  //     let newProducts = JSON.parse(JSON.stringify(products.data));\n  //     dispatch({\n  //       type: FETCH_PRODUCT_SUCCEEDED,\n  //       payload: newProducts\n  //     });\n  //   })\n  //   .catch(err => console.log(err));\n\n  axios\n    .post(\"/products/filtered-products\", {\n      category: filters.category,\n      subCategory: filters.subCategory,\n      furtherSubCategory: filters.furtherSubCategory,\n      colorName: filters.colorName,\n      size: filters.size,\n      minPrice: filters.price.min,\n      maxPrice: filters.price.max,\n      pageNo: filters.pageNo\n    })\n    .then(info => {\n      // console.log('info', info)\n\n      let products = info.data.products;\n\n      let newProducts = JSON.parse(JSON.stringify(products));\n\n      // console.log('------------------')\n      // console.log(\"info.amount\", info.data.amount)\n\n      dispatch({\n        type: FETCH_ADD_PRODUCT_SUCCEEDED,\n        payload: newProducts\n      });\n\n      dispatch({\n        type: SET_NUMBER_OF_PAGES,\n        payload: {\n          amountPages: info.data.amount,\n          pageNo: filters.pageNo\n        }\n      });\n    })\n    .catch(err => console.log(err));\n};\n\nexport const selectSize = size => dispatch => {\n  dispatch({\n    type: SELECT_SIZE,\n    payload: size\n  });\n};\n\nexport const selectPrice = price => dispatch => {\n  dispatch({\n    type: SELECT_PRICE,\n    payload: price\n  });\n};\n","import {\n  FETCH_FILTER_REQUESTED,\n  FETCH_FILTER_SUCCEEDED,\n  FETCH_FILTER_FAILED,\n  FETCH_PRODUCT_REQUESTED,\n  FETCH_PRODUCT_SUCCEEDED,\n  FETCH_ADD_PRODUCT_SUCCEEDED,\n  FETCH_PRODUCT_FAILED,\n  SELECT_FILTERS,\n  SELECT_SIZE,\n  SELECT_PRICE,\n  SET_DEFAULT_PAGE,\n  SET_NUMBER_OF_PAGES,\n  SET_PAGE,\n  CLEAR_PRODUCTS_LIST\n} from \"../../actions/filterActions\";\n\nconst initialState = {\n  isFilterFetching: false,\n  isProductFetching: false,\n  colorFilters: [],\n  sizeFilters: [],\n  sizeOptions: [],\n  currentSizeOption: null,\n  products: [],\n  selected: {\n    price: { min: 5, max: 1000 },\n    pageNo: 1,\n    amountPages: 1\n  }\n};\n\nfunction filters(state = initialState, action) {\n  switch (action.type) {\n    case FETCH_FILTER_REQUESTED:\n      return {\n        ...state,\n        isFilterFetching: true\n      };\n    case FETCH_FILTER_SUCCEEDED:\n      return {\n        ...state,\n        colorFilters: action.colors,\n        sizeFilters: action.filters,\n        sizeOptions: action.sizeOptions,\n        isFilterFetching: false\n      };\n    case FETCH_PRODUCT_REQUESTED:\n      return {\n        ...state,\n        isProductFetching: true\n      };\n    case FETCH_PRODUCT_SUCCEEDED:\n      return {\n        ...state,\n        products: action.payload,\n        isProductFetching: false\n      };\n\n    case FETCH_ADD_PRODUCT_SUCCEEDED:\n      let newArray = [];\n      newArray = state.products.map(elem => {\n        return elem;\n      });\n\n      action.payload.forEach(elem => {\n        newArray.push(elem);\n      });\n\n      return {\n        ...state,\n        products: newArray,\n        isProductFetching: false\n      };\n    case SELECT_FILTERS:\n      return {\n        ...state,\n        selected: {\n          ...state.selected,\n          ...action.payload\n        }\n      };\n    case SELECT_SIZE:\n      return {\n        ...state,\n        currentSizeOption: action.payload\n      };\n    case SELECT_PRICE:\n      return {\n        ...state,\n        selected: {\n          ...state.selected,\n          price: action.payload\n        }\n      };\n\n    case SET_DEFAULT_PAGE:\n      return {\n        ...state,\n        selected: {\n          ...state.selected,\n          pageNo: 1,\n          amountPages: 1\n        }\n      };\n\n    case SET_NUMBER_OF_PAGES:\n      return {\n        ...state,\n        selected: {\n          ...state.selected,\n          amountPages: action.payload.amountPages,\n          pageNo: action.payload.pageNo\n        }\n      };\n\n    case SET_PAGE:\n      return {\n        ...state,\n        selected: {\n          ...state.selected,\n          pageNo: action.payload.pageNo\n        }\n      };\n\n    case CLEAR_PRODUCTS_LIST:\n      return {\n        ...state,\n        products: [],\n        selected: {\n          ...state.selected,\n          pageNo: 1,\n          amountPages: 1\n        }\n      };\n\n    default:\n      return { ...state };\n  }\n}\n\nexport default filters;\n","import axios from \"axios\";\nimport {SET_INITIAL_STATE_ADD_CART} from \"./addToCart\";\n\nexport const FETCH_PRODUCT_DETAIL_REQUEST = \"FETCH_PRODUCT_DETAIL_REQUEST\";\nexport const FETCH_PRODUCT_DETAIL_SUCCEED = \"FETCH_PRODUCT_DETAIL_SUCCEED\";\nexport const FETCH_PRODUCT_DETAIL_FAIL = \"FETCH_PRODUCT_DETAIL_FAIL\";\n\nexport const getProductDetails = routeDetails => dispatch => {\n    dispatch({\n        type: FETCH_PRODUCT_DETAIL_REQUEST\n    });\n\n    const {category, subCategory, furtherSubCategory, id} = routeDetails;\n\n    axios\n        .get(`/products/${category}/${subCategory}/${furtherSubCategory}/${id}`, {\n            params: {\n                id: id\n            }\n        })\n        .then(result => {\n\n            let data = {\n                id: result.data[0]._id,\n                isAvailable: true,\n                reasonNotAvailable: \"\",\n                model: result.data[0].model,\n                amount: 1,\n                price: result.data[0].currentPrice,\n                priceFormDB: result.data[0].currentPrice,\n            }\n\n            dispatch({\n                type: SET_INITIAL_STATE_ADD_CART,\n                payload: {data: data}\n            });\n\n            dispatch({\n                type: FETCH_PRODUCT_DETAIL_SUCCEED,\n                payload: result.data[0]\n            });\n        });\n};\n","import {\n  FETCH_PRODUCT_DETAIL_REQUEST,\n  FETCH_PRODUCT_DETAIL_SUCCEED,\n  FETCH_PRODUCT_DETAIL_FAIL\n} from \"../../actions/productDetails\";\n\nconst initialState = {\n  productOpened: {\n    productFeatures: [{ colorName: \"\", imageUrls: [], sizes: [{}] }]\n  }\n};\n\nfunction productDetails(state = initialState, action) {\n  switch (action.type) {\n    case FETCH_PRODUCT_DETAIL_REQUEST:\n      return {\n        ...state\n      };\n    case FETCH_PRODUCT_DETAIL_SUCCEED:\n      return {\n        ...state,\n        productOpened: action.payload\n      };\n    case FETCH_PRODUCT_DETAIL_FAIL:\n      return {\n        ...state\n      };\n    default:\n      return { ...state };\n  }\n}\n\nexport default productDetails;\n","import axios from \"axios\";\nexport const FETCH_CATEGORY_CAROUSEL_REQUESTED = \"FETCH_CATEGORY_CAROUSEL_REQUESTED\";\nexport const FETCH_CATEGORY_CAROUSEL_SUCCEEDED = \"FETCH_CATEGORY_CAROUSEL_SUCCEEDED\";\n\n\nexport const getCategoryItem = () => dispatch =>{\n    dispatch({\n        type: FETCH_CATEGORY_CAROUSEL_REQUESTED\n    });\n\n    axios.get(\"/categoryCarousels\").then(categoriesList => {\n        dispatch({\n            type: FETCH_CATEGORY_CAROUSEL_SUCCEEDED,\n            payload: categoriesList.data\n        })\n    })\n};","import {\n    FETCH_CATEGORY_CAROUSEL_REQUESTED,\n    FETCH_CATEGORY_CAROUSEL_SUCCEEDED\n} from \"../../actions/categoryCarousel\";\n\nconst initialState = {\n    categoriesList: [],\n    isCategoriesFetching: false\n};\n\nfunction categoryCarousel(state = initialState, action) {\n    switch (action.type) {\n        case FETCH_CATEGORY_CAROUSEL_REQUESTED:\n            return {\n                ...state,\n                isCategoriesFetching: true\n            }\n        case FETCH_CATEGORY_CAROUSEL_SUCCEEDED:\n            return{\n                ...state,\n                categoriesList: action.payload,\n                isCategoriesFetching: false\n            }\n\n\n\n        default:\n            return{...state}\n    }\n}\n\nexport default categoryCarousel;","import {\n    ADD_ITEM_TO_CART, CHANGE_AMOUT_OF_ITEM, SET_CART_FROM_LOCALSTORAGE,\n    SET_ID_LOGGED_USER, SET_ID_CART_FROM_DB, SET_DATA_CART_FROM_DB,\n    CLEAR_CART_ON_LOGOUT, CART_FROM_LOCALSTORAGE_TO_DB, DELETE_ITEM_TO_CART,\n    CHANGE_ARRAY_AMOUT_OF_ITEM, UPDATE_STORE_AFTER_CHECK_IN_DB, CHANGE_CHECK_AMOUT_OF_ITEM,\n    CHANGE_DELIVERY_METHOD, SET_FINISHED_CART, SET_DEFAULT_FINISHED_CART,\n    addNewCart, updateCart, updateCartIsFinished, sendOrder, CLOSE_MODAL_SUCCESS_ORDER,\n    OPEN_MODAL_SUCCESS_ORDER, CLOSE_MODAL_UNSUCCESS_ORDER, OPEN_MODAL_UNSUCCESS_ORDER,\n    SET_INVALID_LOGIN, SUCCESSFULL_SEND_ORDER_BY_EMAIL, CLOSE_MODAL_FINISH_ORDER_AFTER_LOGIN,\n    OPEN_MODAL_FINISH_ORDER_AFTER_LOGIN, SET_ORDER_NO\n} from '../../actions/cart'\n\n\nconst initialState = {\n\n    amountInBasket: 0,\n    idUser: '',\n    userMail: '',\n    idCartInDB: '',\n    orderNo: '',\n    arrayProduct: [],\n    arrayCheckout: [],\n    windows: {\n        successOrder: false,\n        unsuccessOrder: false,\n        invalidLogin: false,\n        finishAfterLogin: false\n    },\n    checkedDelivery: \"standart\",\n    deliveryMethods: [\n        {\n            name: \"economical\",\n            duration: 14,\n            price: 0\n        },\n        {\n            name: \"standart\",\n            duration: 7,\n            price: 5\n        },\n        {\n            name: \"express\",\n            duration: 3,\n            price: 10\n        },\n\n    ]\n}\n\nfunction setLocalStorage(arr) {\n    localStorage.setItem(\"savedCart\", JSON.stringify(arr));\n}\n\nfunction countAmount(array) {\n\n    let count = 0;\n    if (array) {\n        array.forEach((elem) => {\n            count = count + elem.amount;\n        })\n    }\n\n\n    return count\n}\n\nfunction saveInDB(id, arr) {\n    let sendObj = {\n        idUser: id,\n        arrayProduct: JSON.stringify(arr)\n    };\n    addNewCart(sendObj);\n\n}\n\n\nfunction updateInDB(id, arr) {\n\n    let sendObj = {\n        idCartInDB: id,\n        arrayProduct: JSON.stringify(arr)\n    };\n\n    updateCart(sendObj);\n}\n\n\nfunction updateIsFinished(data) {\n\n    updateCartIsFinished(data);\n}\n\nfunction cart(state = initialState, action) {\n\n    switch (action.type) {\n\n        case SET_ID_LOGGED_USER:\n\n            return {\n                ...state,\n                userMail: action.payload.mail,\n                idUser: action.payload.idUser,\n            }\n\n        case SET_ID_CART_FROM_DB:\n\n            return {\n                ...state,\n\n                idCartInDB: action.payload.idCartInDB\n            }\n\n        case SET_DATA_CART_FROM_DB:\n\n            return {\n                ...state,\n                idCartInDB: action.payload.infoDB._id,\n                idUser: action.payload.infoDB.idUser,\n                arrayProduct: action.payload.infoDB.arrayProduct,\n                amountInBasket: countAmount(action.payload.infoDB.arrayProduct),\n            }\n\n        case DELETE_ITEM_TO_CART:\n\n            if (state.idUser) {\n                if (state.idCartInDB) {\n                    updateInDB(state.idCartInDB, action.payload.array);\n                } else {\n                    saveInDB(state.idUser, action.payload.array);\n                }\n            } else {\n                setLocalStorage(action.payload.array);\n            }\n\n\n            return {\n                ...state,\n                arrayProduct: action.payload.array,\n                amountInBasket: countAmount(action.payload.array),\n            }\n\n        case CART_FROM_LOCALSTORAGE_TO_DB:\n\n            return {\n                ...state,\n                idCartInDB: action.payload.infoDB._id,\n                idUser: action.payload.infoDB.idUser,\n                arrayProduct: action.payload.infoDB.arrayProduct,\n                amountInBasket: countAmount(action.payload.infoDB.arrayProduct),\n            }\n\n        case CLEAR_CART_ON_LOGOUT:\n\n            return {\n                ...state,\n                amountInBasket: 0,\n                idUser: '',\n                idCartInDB: '',\n                userMail: '',\n                orderNo: '',\n                windows: {\n                    successOrder: false,\n                    unsuccessOrder: false,\n                },\n                arrayProduct: [],\n                arrayCheckout: [],\n            }\n\n        case ADD_ITEM_TO_CART:\n            let arrProd = [];\n            state.arrayProduct.forEach((elem, index) => {\n                arrProd[index] = {...elem}\n            });\n\n            arrProd.push(action.payload.item);\n\n            if (state.idUser) {\n                if (state.idCartInDB) {\n                    updateInDB(state.idCartInDB, arrProd);\n                } else {\n                    saveInDB(state.idUser, arrProd);\n                }\n            } else {\n                setLocalStorage(arrProd);\n            }\n\n            return {\n                ...state,\n                arrayProduct: arrProd,\n                amountInBasket: countAmount(arrProd),\n\n            }\n\n        case CHANGE_CHECK_AMOUT_OF_ITEM:\n\n\n            let changeCheckArrayAmountProd = action.payload.newArr.map((elem) => {\n                return elem;\n            });\n\n            if (state.idUser) {\n                if (state.idCartInDB) {\n                    updateInDB(state.idCartInDB, changeCheckArrayAmountProd);\n                } else {\n                    saveInDB(state.idUser, changeCheckArrayAmountProd);\n                }\n            } else {\n                setLocalStorage(changeCheckArrayAmountProd);\n            }\n            return {\n                ...state,\n                arrayProduct: changeCheckArrayAmountProd,\n                amountInBasket: countAmount(changeCheckArrayAmountProd),\n            }\n\n        case SET_CART_FROM_LOCALSTORAGE:\n\n            return {\n                ...state,\n                arrayProduct: action.payload.arrLS,\n                amountInBasket: countAmount(action.payload.arrLS),\n            }\n\n        case UPDATE_STORE_AFTER_CHECK_IN_DB:\n            let changeAfterCheck = [];\n            state.arrayProduct.forEach((elem, index) => {\n                changeAfterCheck[index] = {\n                    ...elem,\n                    id: action.payload.newArr[index].id,\n                    isAvailable: action.payload.newArr[index].isAvailable,\n                    reasonNotAvailable: action.payload.newArr[index].reasonNotAvailable,\n                    colorName: action.payload.newArr[index].colorName,\n                    size: action.payload.newArr[index].size,\n                    amount: action.payload.newArr[index].amount,\n                    priceFormDB: action.payload.newArr[index].priceFormDB,\n\n                }\n            });\n\n            if (state.idUser) {\n                if (state.idCartInDB) {\n                    updateInDB(state.idCartInDB, changeAfterCheck);\n                } else {\n                    saveInDB(state.idUser, changeAfterCheck);\n                }\n            } else {\n                setLocalStorage(changeAfterCheck);\n            }\n\n            return {\n                ...state,\n                arrayProduct: changeAfterCheck,\n                amountInBasket: countAmount(changeAfterCheck),\n            }\n\n        case CHANGE_DELIVERY_METHOD:\n\n            return {\n                ...state,\n                checkedDelivery: action.payload.method,\n            }\n\n        case SET_FINISHED_CART:\n\n            // console.log('SET_FINISHED_CART');\n\n\n            updateIsFinished(state);\n\n            // updateIsFinished(state.idCartInDB);\n            // sendOrder(state);\n\n            // console.log('SET_FINISHED_CART 111');\n\n            return {\n                ...state\n            }\n        case SET_DEFAULT_FINISHED_CART:\n\n            return {\n                ...state,\n                amountInBasket: 0,\n                idCartInDB: '',\n                arrayProduct: [],\n            }\n\n        case OPEN_MODAL_SUCCESS_ORDER:\n\n            return {\n                ...state,\n                windows: {\n                    successOrder: true,\n                    unsuccessOrder: false,\n                    invalidLogin: false,\n                    finishAfterLogin: false\n                }\n            }\n        case CLOSE_MODAL_SUCCESS_ORDER:\n\n            return {\n                ...state,\n                orderNo: '',\n                arrayProduct: [],\n                windows: {\n                    successOrder: false,\n                    unsuccessOrder: false,\n                    invalidLogin: false,\n                    finishAfterLogin: false\n                }\n            }\n\n        case SET_ORDER_NO:\n\n            return {\n                ...state,\n                orderNo: action.payload.orderNo,\n            }\n\n        case OPEN_MODAL_UNSUCCESS_ORDER:\n\n            return {\n                ...state,\n                windows: {\n                    successOrder: false,\n                    unsuccessOrder: true,\n                    invalidLogin: false,\n                    finishAfterLogin: false\n                }\n            }\n        case CLOSE_MODAL_UNSUCCESS_ORDER:\n\n            return {\n                ...state,\n                windows: {\n                    successOrder: false,\n                    unsuccessOrder: false,\n                    invalidLogin: false,\n                    finishAfterLogin: false\n                }\n            }\n        case SET_INVALID_LOGIN:\n\n            return {\n                ...state,\n                windows: {\n                    successOrder: false,\n                    unsuccessOrder: true,\n                    invalidLogin: true,\n                    finishAfterLogin: false\n                }\n\n            }\n\n        case SUCCESSFULL_SEND_ORDER_BY_EMAIL:\n\n            return {\n                ...state,\n                orderNo: action.payload.orderNo,\n                windows: {\n                    successOrder: true,\n                    unsuccessOrder: false,\n                    invalidLogin: false,\n                    finishAfterLogin: false\n                }\n            }\n\n        case OPEN_MODAL_FINISH_ORDER_AFTER_LOGIN:\n\n            return {\n                ...state,\n                windows: {\n                    successOrder: false,\n                    unsuccessOrder: false,\n                    invalidLogin: false,\n                    finishAfterLogin: true\n                }\n            }\n\n        case CLOSE_MODAL_FINISH_ORDER_AFTER_LOGIN:\n\n            return {\n                ...state,\n                windows: {\n                    successOrder: false,\n                    unsuccessOrder: false,\n                    invalidLogin: false,\n                    finishAfterLogin: false\n                }\n            }\n\n        default:\n            return {...state}\n    }\n\n}\n\nexport default cart","import axios from 'axios';\nimport store from \"../store\";\nimport {CLOSE_LOGIN_DETAILS} from \"./login\";\n\nexport const ADD_ITEM_TO_CART = 'ADD_ITEM_TO_CART';\nexport const DELETE_ITEM_TO_CART = 'DELETE_ITEM_TO_CART';\nexport const CHANGE_AMOUT_OF_ITEM = 'CHANGE_AMOUT_OF_ITEM';\nexport const CHANGE_ARRAY_AMOUT_OF_ITEM = 'CHANGE_ARRAY_AMOUT_OF_ITEM';\n\nexport const SET_CART_FROM_LOCALSTORAGE = 'SET_CART_FROM_LOCALSTORAGE';\n\nexport const CART_FROM_LOCALSTORAGE_TO_DB = 'CART_FROM_LOCALSTORAGE_TO_DB';\n\nexport const SET_ID_LOGGED_USER = 'SET_ID_LOGGED_USER';\n\nexport const SET_ID_CART_FROM_DB = 'SET_ID_CART_FROM_DB';\n\nexport const SET_DATA_CART_FROM_DB = 'SET_DATA_CART_FROM_DB';\n\nexport const CLEAR_CART_ON_LOGOUT = 'CLEAR_CART_ON_LOGOUT';\n\nexport const UPDATE_STORE_AFTER_CHECK_IN_DB = 'UPDATE_STORE_AFTER_CHECK_IN_DB';\n\nexport const CHANGE_CHECK_AMOUT_OF_ITEM = 'CHANGE_CHECK_AMOUT_OF_ITEM';\n\nexport const CHANGE_DELIVERY_METHOD = 'CHANGE_DELIVERY_METHOD';\n\nexport const SET_FINISHED_CART = 'SET_FINISHED_CART';\nexport const SET_DEFAULT_FINISHED_CART = 'SET_DEFAULT_FINISHED_CART';\nexport const SET_ORDER_NO = 'SET_ORDER_NO';\n\n\nexport const OPEN_MODAL_SUCCESS_ORDER = 'OPEN_MODAL_SUCCESS_ORDER';\nexport const CLOSE_MODAL_SUCCESS_ORDER = 'CLOSE_MODAL_SUCCESS_ORDER';\n\n\nexport const OPEN_MODAL_UNSUCCESS_ORDER = 'OPEN_MODAL_UNSUCCESS_ORDER';\nexport const CLOSE_MODAL_UNSUCCESS_ORDER = 'CLOSE_MODAL_UNSUCCESS_ORDER';\n\nexport const OPEN_MODAL_FINISH_ORDER_AFTER_LOGIN = 'OPEN_MODAL_FINISH_ORDER_AFTER_LOGIN';\nexport const CLOSE_MODAL_FINISH_ORDER_AFTER_LOGIN = 'CLOSE_MODAL_FINISH_ORDER_AFTER_LOGIN';\n\nexport const SUCCESSFULL_SEND_ORDER_BY_EMAIL = 'SUCCESSFULL_SEND_ORDER_BY_EMAIL';\n\nexport const SET_INVALID_LOGIN = 'SET_INVALID_LOGIN';\n\n\n//Request from FRONT - is logged or not.\n\nexport function sendCheckout() {\n\n    return dispatch => {\n        axios.get('/users/checkout')\n            .then(() => {\n                    dispatch({type: SET_FINISHED_CART});\n                }\n            )\n            .catch(err => {\n                dispatch({type: OPEN_MODAL_UNSUCCESS_ORDER});\n            })\n\n    }\n}\n\nexport function updateCartIsFinished(dataCart) {\n\n    let obj = {\n        idCartInDB: dataCart.idCartInDB\n    }\n\n    axios.post('/updateCartIsFinished', obj)\n        .then(res => res.data)\n        .then(data => {\n                // console.log('data.orderNo', data.orderNo)\n                // console.log('data', data)\n                sendOrder(dataCart, data.orderNo);\n                store.dispatch({type: SET_ORDER_NO, payload: {orderNo: data.orderNo}});\n                store.dispatch({type: OPEN_MODAL_SUCCESS_ORDER});\n                store.dispatch({type: SET_DEFAULT_FINISHED_CART});\n            }\n        )\n        .catch(err => console.log(err))\n\n}\n\n\nfunction getListProductInHtml(dataOrder) {\n    let textOrder = `<ul style=\"margin: 5px; border: 1px solid #eee;\">`;\n\n    dataOrder.arrayProduct.forEach((elem) => {\n        textOrder += `\n                    <li style=\"display: flex; flex-direction: row; justify-content: space-between; align-items: center;\">\n                        <div style=\"width: calc(100% - 110px);\">\n                            <div>\n                                <div>\n                                    <p style=\"font-weight: 600; font-size: 20px; margin-bottom: 10px; margin-top: 15px;\">\n                                        ${elem.model}\n                                    </p>\n                                    <p style=\"text-transform: uppercase; margin-bottom: 10px;\">\n                                        Color - ${elem.colorName}\n                                    </p>\n                                    <p style=\"text-transform: uppercase; margin-bottom: 20px;\">\n                                        Size - ${elem.size}\n                                    </p>\n                                </div>\n                            </div>\n                            <div style=\"display: flex; flex-direction: row; justify-content: space-between; align-items: center;\n                            border-top: 1px solid #eee; margin-right: 30px; padding-top: 10px; padding-bottom: 10px;\">\n                                <p>${elem.priceFormDB} x ${elem.amount}</p>\n                                <p style=\"font-weight: 600;\">\n                                    $${(elem.amount * elem.priceFormDB).toFixed(2)}\n                                </p>\n                            </div>\n                        </div>\n                    </li>\n        `\n    });\n\n    textOrder += `</ul>`;\n\n    return textOrder;\n\n\n}\n\nexport function sendOrderByEmail(dataOrder) {\n\n    return dispatch => {\n        let mail = dataOrder.userMail;\n\n        let textOrder = getListProductInHtml(dataOrder);\n\n\n        axios.post('/sendOrderByEmail', {mail: mail, textOrder: textOrder, dataOrder: dataOrder})\n            .then(res => res.data)\n            .then(data => {\n                    // console.log('hi from mail');\n\n                    if (data.success) {\n                        dispatch({type: CLEAR_CART_ON_LOGOUT});\n                        dispatch({type: SUCCESSFULL_SEND_ORDER_BY_EMAIL, payload: {orderNo: data.orderNo}});\n                        localStorage.removeItem(\"savedCart\");\n                    }\n\n\n                }\n            )\n            .catch(err => console.log(err))\n\n    }\n}\n\nfunction sendOrder(dataOrder, orderNo) {\n\n    let mail = dataOrder.userMail;\n\n    let textOrder = getListProductInHtml(dataOrder);\n\n\n    axios.post('/sendOrder', {mail: mail, textOrder: textOrder, orderNo: orderNo})\n        .then(res => res.data)\n        .then(data => {\n                // store.dispatch({type: SET_DEFAULT_FINISHED_CART});\n            }\n        )\n        .catch(err => console.log(err))\n\n}\n\n\nexport function checkAvailableItem(arrData) {\n\n    return dispatch => {\n\n        // console.log('hi axios')\n\n\n        axios.post('/checkAvailableItem', {arrData: arrData})\n            .then(res => res.data)\n            .then(data => {\n\n                    setTimeout(dispatch({type: CHANGE_CHECK_AMOUT_OF_ITEM, payload: {newArr: data.updatedArray}}), 500)\n\n                }\n            )\n            .catch(err => {\n            })\n\n    }\n}\n\n\nexport function getCart(userId) {\n\n\n    axios.post('/getCart', userId)\n        .then(res => res.data)\n        .then(data => {\n                let readyData = JSON.parse(data.infoDB);\n\n                if (data.success) {\n                    store.dispatch({type: SET_DATA_CART_FROM_DB, payload: {infoDB: readyData}})\n                }\n            }\n        )\n        .catch(err => console.log(err))\n}\n\n\nexport function addNewCart(dataCart) {\n\n    axios.post('/addCart', dataCart)\n        .then(res => res.data)\n        .then(data => {\n\n                if (data.success) {\n                    store.dispatch({type: SET_ID_CART_FROM_DB, payload: {idCartInDB: data.idCartInDB}})\n                }\n            }\n        )\n        .catch(err => console.log(err))\n\n}\n\n\nexport function updateCart(dataCart) {\n\n    axios.post('/updateCart', dataCart)\n        .then(res => res.data)\n        .then(data => {\n                console.log(data.success)\n            }\n        )\n        .catch(err => console.log(err))\n\n}\n","import {\n    SET_INITIAL_STATE_ADD_CART, SET_COLOR, SET_SIZE, SET_AMOUNT, SET_IMG\n} from '../../actions/addToCart'\n\n\nconst initialState = {\n    id: \"\",\n    isAvailable: true,\n    reasonNotAvailable: \"\",\n    model: \"\",\n    colorName: \"\",\n    size: \"\",\n    amount: 1,\n    availableAmount: 0,\n    price: 0,\n    priceFormDB: 0,\n    urlPhoto: \"\"\n}\n\n\nfunction addToCart(state = initialState, action) {\n\n    switch (action.type) {\n\n        case SET_INITIAL_STATE_ADD_CART:\n            return {\n                ...state,\n                ...action.payload.data\n            }\n\n        case SET_COLOR:\n            return {\n                ...state,\n                colorName: action.payload.color\n            }\n        case SET_IMG:\n            return {\n                ...state,\n                urlPhoto: action.payload.url\n            }\n        case SET_SIZE:\n            return {\n                ...state,\n                size: action.payload.size\n            }\n        case SET_AMOUNT:\n            return {\n                ...state,\n                amount: action.payload.amount\n            }\n        default:\n            return {...state}\n    }\n}\n\n\nexport default addToCart","import axios from \"axios\";\n\nexport const FETCH_SEARCH_REQUESTED = \"FETCH_SEARCH_REQUESTED\";\nexport const FETCH_SEARCH_SUCCEEDED = \"FETCH_SEARCH_SUCCEEDED\";\nexport const FETCH_SEARCH_FAILED = \"FETCH_SEARCH_FAILED\";\nexport const TYPE_SEARCH_VALUE = \"TYPE_SEARCH_VALUE\";\nexport const FOCUS_SEARCH_INPUT = \"FOCUS_SEARCH_INPUT\";\nexport const BLUR_SEARCH_INPUT = \"BLUR_SEARCH_INPUT\";\nexport const CLEAR_SEARCH_INPUT = \"CLEAR_SEARCH_INPUT\";\nexport const CLOSE_SEARCH_RESULTS = \"CLOSE_SEARCH_RESULTS\";\nexport const VALIDATE_SEARCH_VALUE = \"VALIDATE_SEARCH_VALUE\";\n\n// Handling situations when search input is focused (to change input width)\nexport const focusSearchInput = () => dispatch => {\n  dispatch({\n    type: FOCUS_SEARCH_INPUT\n  });\n};\n\n// Handling situations when search input is blured (to change input width)\n\nexport const blurSearchInput = e => dispatch => {\n  if (e.target.name === \"search\") {\n    e.preventDefault();\n  } else if (e.target.className === \"clearable__clear\") {\n    dispatch({\n      type: CLEAR_SEARCH_INPUT\n    });\n    dispatch({\n      type: BLUR_SEARCH_INPUT\n    });\n  } else {\n    dispatch({\n      type: BLUR_SEARCH_INPUT\n    });\n  }\n};\n\n// Handling situations when close button clicked in input (to clear input value)\nexport const clearSearchInput = () => dispatch => {\n  dispatch({\n    type: CLEAR_SEARCH_INPUT\n  });\n};\n\n// Handling situations when search input is filling by unallowed characters (to show error)\nexport const validateSearchValue = e => dispatch => {\n  const re = /[0-9a-zA-Z- ]+/g;\n  if (!re.test(e.key)) {\n    e.preventDefault();\n    dispatch({\n      type: VALIDATE_SEARCH_VALUE,\n      payload: true\n    });\n  } else {\n    dispatch({\n      type: VALIDATE_SEARCH_VALUE,\n      payload: false\n    });\n  }\n};\n\n// Handling situations when item in search results is clicked (to hide results and redirect to product details page)\nexport const closeSearchResults = () => dispatch => {\n  dispatch({\n    type: CLOSE_SEARCH_RESULTS\n  });\n};\n\n//Showing preloader while async request is going on\nexport const searchStart = () => {\n  return {\n    type: FETCH_SEARCH_REQUESTED\n  };\n};\n\n//Showing error if async request finished by error\nexport const searchFail = () => {\n  return {\n    type: FETCH_SEARCH_FAILED\n  };\n};\n\n//Showing results when async request is finished successfully\nexport const searchSuccess = data => {\n  return {\n    type: FETCH_SEARCH_SUCCEEDED,\n    payload: data\n  };\n};\n\n// This function makes search requests.\n// If the previous request is not finished when current request\n// is called this function calcells the previous one.\nfunction makeRequestCreator() {\n  let call;\n\n  return value => dispatch => {\n    dispatch({\n      type: TYPE_SEARCH_VALUE,\n      payload: value\n    });\n    if (call) {\n      call.cancel();\n    }\n    dispatch(searchStart());\n    call = axios.CancelToken.source();\n    return axios\n      .post(\n        \"/search/search-products\",\n        { query: value },\n        {\n          cancelToken: call.token\n        }\n      )\n      .then(response => {\n        dispatch(searchSuccess(response.data));\n      })\n      .catch(thrown => {\n        // dispatch(searchFail());\n        if (axios.isCancel(thrown)) {\n          console.log(\"request is canceled\", thrown);\n        } else {\n          console.log(thrown);\n        }\n      });\n  };\n}\n\nexport const search = makeRequestCreator();\n","import {\n  FETCH_SEARCH_REQUESTED,\n  FETCH_SEARCH_SUCCEEDED,\n  TYPE_SEARCH_VALUE,\n  FOCUS_SEARCH_INPUT,\n  BLUR_SEARCH_INPUT,\n  CLEAR_SEARCH_INPUT,\n  VALIDATE_SEARCH_VALUE,\n  CLOSE_SEARCH_RESULTS\n} from \"../../actions/search\";\n\nconst initialState = {\n  focus: false,\n  searchString: \"\",\n  nonValid: false,\n  closeResults: false,\n  isSearchFetching: false,\n  products: []\n};\n\nfunction search(state = initialState, action) {\n  switch (action.type) {\n    case TYPE_SEARCH_VALUE:\n      return {\n        ...state,\n        searchString: action.payload\n      };\n    case FOCUS_SEARCH_INPUT:\n      return {\n        ...state,\n        focus: true\n      };\n    case BLUR_SEARCH_INPUT:\n      return {\n        ...state,\n        focus: false,\n        nonValid: false\n      };\n    case VALIDATE_SEARCH_VALUE:\n      return {\n        ...state,\n        nonValid: action.payload\n      };\n    case FETCH_SEARCH_REQUESTED:\n      return {\n        ...state,\n        isSearchFetching: true\n      };\n    case FETCH_SEARCH_SUCCEEDED:\n      return {\n        ...state,\n        isSearchFetching: false,\n        closeResults: false,\n        products: action.payload\n      };\n    case CLOSE_SEARCH_RESULTS:\n      return {\n        ...state,\n        closeResults: true,\n        searchString: \"\",\n        products: []\n      };\n    case CLEAR_SEARCH_INPUT:\n      return {\n        ...state,\n        searchString: \"\"\n      };\n    default:\n      return { ...state };\n  }\n}\n\nexport default search;\n","import axios from \"axios\";\n\nexport const SEND_NAV_REQUEST = \"SEND_NAV_REQUEST\"; // Preloader while executing asynchronous action\nexport const GET_NAV_MENU = \"GET_NAV_MENU\"; // Get Navigation menu items from server\nexport const CHANGE_SELECTED_ITEM_ACTIVE_STATUS =\n  \"CHANGE_SELECTED_ITEM_ACTIVE_STATUS\";\nexport const ADD_NEW_CATEGORY = \"ADD_NEW_CATEGORY\";\nexport const ADD_NEW_SUB_CATEGORY = \"ADD_NEW_SUB_CATEGORY\";\nexport const ADD_NEW_FURTHER_SUB_CATEGORY = \"ADD_NEW_FURTHER_SUB_CATEGORY\";\n\nexport const FETCH_NAV_MENU_REQUESTED = \"FETCH_NAV_MENU_REQUESTED\";\nexport const FETCH_NAV_MENU_SUCCEEDED = \"FETCH_NAV_MENU_SUCCEEDED\";\nexport const FETCH_NAV_MENU_FAILED = \"FETCH_NAV_MENU_FAILED\";\n\n// Get nav-menu items from mongoDB for initializing store\nexport const getAdmNavMenuItems = () => dispatch => {\n  dispatch({\n    type: SEND_NAV_REQUEST\n  });\n\n  axios.get(\"/nav-menu\").then(navMenuItems => {\n    let categoryList = navMenuItems.data[0].categoryList;\n    let navMenuItemsArr = JSON.parse(JSON.stringify(categoryList));\n\n    dispatch({\n      type: GET_NAV_MENU,\n      payload: navMenuItemsArr // The Array with the hierarchy Of Navigation menu categories (e.g. women) / subcategories (e.g. clothing) / further subcategories (e.g. pants, dresses)\n    });\n  });\n};\n\n// Change the parameter \"active\" for chosen nav-menu item in store\nexport const changeSelectedItemActiveStatus = (\n  e,\n  navMenuItems,\n  id\n) => dispatch => {\n  navMenuItems.forEach(category => {\n    if (category._id === id) {\n      category.active = e.target.checked;\n    } else {\n      category.subCategoryList.forEach(subCategory => {\n        if (subCategory._id === id) {\n          subCategory.active = e.target.checked;\n        } else {\n          subCategory.furtherSubCategoryList.forEach(furtherSubCategory => {\n            if (furtherSubCategory._id === id) {\n              furtherSubCategory.active = e.target.checked;\n            }\n          });\n        }\n      });\n    }\n  });\n\n  let newState = JSON.parse(JSON.stringify(navMenuItems));\n\n  dispatch({\n    type: CHANGE_SELECTED_ITEM_ACTIVE_STATUS,\n    payload: newState\n  });\n};\n\n// Add new category in nav-menu in store\nexport const addNewCategory = (categoryName, state) => dispatch => {\n  if (categoryName.length < 3) {\n    return null;\n  }\n\n  let newCategory = {\n    active: true,\n    subCategoryList: [],\n    _id: String(Math.random() * (100000 - 1) + 1),\n    categoryName: categoryName,\n    categoryUrl: `/${categoryName}`\n  };\n\n  state.push(newCategory);\n\n  let newState = JSON.parse(JSON.stringify(state));\n\n  dispatch({\n    type: ADD_NEW_CATEGORY,\n    payload: newState\n  });\n};\n\n// Add new sub-category in nav-menu in store\nexport const addNewSubCategory = (\n  categoryName,\n  subCategoryName,\n  state\n) => dispatch => {\n  if (subCategoryName.length < 3) {\n    return null;\n  }\n\n  let newSubCategory = {\n    active: true,\n    furtherSubCategoryList: [],\n    _id: String(Math.random() * (100000 - 1) + 1),\n    subCategoryName: subCategoryName,\n    subCategoryUrl: `/${categoryName}/${subCategoryName}`\n  };\n\n  state.forEach(category => {\n    if (category.categoryName === categoryName) {\n      category.subCategoryList.push(newSubCategory);\n    }\n  });\n\n  let newState = JSON.parse(JSON.stringify(state));\n\n  dispatch({\n    type: ADD_NEW_SUB_CATEGORY,\n    payload: newState\n  });\n};\n\n// Add new sub-sub-category in nav-menu in store\nexport const addNewFurtherSubCategory = (\n  categoryName,\n  subCategoryName,\n  furtherSubCategoryName,\n  state\n) => dispatch => {\n  if (furtherSubCategoryName.length < 3) {\n    return null;\n  }\n\n  let newFurtherSubCategory = {\n    active: true,\n    _id: String(Math.random() * (100000 - 1) + 1),\n    furtherSubCategoryName: furtherSubCategoryName,\n    furtherSubCategoryUrl: `/${categoryName}/${subCategoryName}/${furtherSubCategoryName}`\n  };\n\n  state.forEach(category => {\n    if (category.categoryName === categoryName) {\n      category.subCategoryList.forEach(subCategory => {\n        if (subCategory.subCategoryName === subCategoryName) {\n          subCategory.furtherSubCategoryList.push(newFurtherSubCategory);\n        }\n      });\n    }\n  });\n\n  let newState = JSON.parse(JSON.stringify(state));\n\n  dispatch({\n    type: ADD_NEW_FURTHER_SUB_CATEGORY,\n    payload: newState\n  });\n};\n\n// Save changes into mongoDB\nexport const saveUpdatedNavMenu = (\n  state,\n  callbackGetAdmNavMenuItems\n) => dispatch => {\n  dispatch({\n    type: FETCH_NAV_MENU_REQUESTED\n  });\n\n  state.forEach(category => {\n    delete category._id;\n    category.subCategoryList.forEach(subCategory => {\n      delete subCategory._id;\n      subCategory.furtherSubCategoryList.forEach(furtherSubCategory => {\n        delete furtherSubCategory._id;\n      });\n    });\n  });\n\n  let updatedMenu = JSON.parse(JSON.stringify(state));\n\n  axios\n    .post(\"/navigation-menu/add-list\", { navigationMenuItems: updatedMenu })\n    .then(response => {\n      dispatch({\n        type: FETCH_NAV_MENU_SUCCEEDED,\n        payload: \"Navigation Menu is successfully updated.\"\n      });\n\n      callbackGetAdmNavMenuItems();\n    })\n    .catch(err => {\n      dispatch({\n        type: FETCH_NAV_MENU_FAILED,\n        payload: \"An error occured. Please, check DB.\"\n      });\n    });\n};\n","import {\n  GET_NAV_MENU,\n  SEND_NAV_REQUEST,\n  CHANGE_SELECTED_ITEM_ACTIVE_STATUS,\n  ADD_NEW_CATEGORY,\n  ADD_NEW_SUB_CATEGORY,\n  ADD_NEW_FURTHER_SUB_CATEGORY,\n  FETCH_NAV_MENU_REQUESTED,\n  FETCH_NAV_MENU_SUCCEEDED,\n  FETCH_NAV_MENU_FAILED\n} from \"../../actions/adminDashboard/admNavMenuActions\";\n\nconst initialState = {\n  isMenuFetching: false,\n  navMenuItems: [],\n  resultMessage: \"\"\n};\n\nfunction admNavMenu(state = initialState, action) {\n  switch (action.type) {\n    case SEND_NAV_REQUEST:\n      return {\n        ...state,\n        isMenuFetching: true,\n        resultMessage: \"\"\n      };\n    case GET_NAV_MENU:\n      return {\n        ...state,\n        navMenuItems: action.payload,\n        isMenuFetching: false\n      };\n    case CHANGE_SELECTED_ITEM_ACTIVE_STATUS:\n      return {\n        ...state,\n        navMenuItems: action.payload\n      };\n    case ADD_NEW_CATEGORY:\n      return {\n        ...state,\n        navMenuItems: action.payload\n      };\n    case ADD_NEW_SUB_CATEGORY:\n      return {\n        ...state,\n        navMenuItems: action.payload\n      };\n    case ADD_NEW_FURTHER_SUB_CATEGORY:\n      return {\n        ...state,\n        navMenuItems: action.payload\n      };\n    case FETCH_NAV_MENU_REQUESTED:\n      return {\n        ...state,\n        isMenuFetching: true,\n        resultMessage: \"\"\n      };\n\n    case FETCH_NAV_MENU_SUCCEEDED:\n      return {\n        ...state,\n        resultMessage: action.payload,\n        isMenuFetching: false\n      };\n    case FETCH_NAV_MENU_FAILED:\n      return {\n        ...state,\n        resultMessage: action.payload,\n        isMenuFetching: false\n      };\n\n    default:\n      return { ...state };\n  }\n}\n\nexport default admNavMenu;\n","import axios from \"axios\";\nimport uniqueRandom from \"unique-random\";\nconst rand = uniqueRandom(0, 999999);\n\nexport const GET_CATEGORY_NAME = \"GET_CATEGORY_NAME\";\nexport const GET_SUB_CATEGORY_NAME = \"GET_SUB_CATEGORY_NAME\";\nexport const GET_FURTHER_SUB_CATEGORY_NAME = \"GET_FURTHER_SUB_CATEGORY_NAME\";\nexport const SET_SUBCATEGORY_OPTIONS = \"SET_SUBCATEGORY_OPTIONS\";\nexport const SET_FURTHER_SUBCATEGORY_OPTIONS =\n  \"SET_FURTHER_SUBCATEGORY_OPTIONS\";\nexport const GET_PRODUCT_MODEL_NAME = \"GET_PRODUCT_MODEL_NAME\";\nexport const GET_WITHDRAWN_STATUS = \"GET_WITHDRAWN_STATUS\";\nexport const GET_ACTIVE_STATUS = \"GET_ACTIVE_STATUS\";\nexport const GET_CURRENT_PRICE = \"GET_CURRENT_PRICE\";\nexport const GET_PREVIOUS_PRICE = \"GET_PREVIOUS_PRICE\";\nexport const UPDATE_PRODUCT_FEATURES = \"UPDATE_PRODUCT_FEATURES\";\nexport const SET_COLOR_OPTIONS = \"SET_COLOR_OPTIONS\";\nexport const SET_SIZE_OPTIONS = \"SET_SIZE_OPTIONS\";\nexport const RESET_MODAL_STATUS = \"RESET_MODAL_STATUS\";\nexport const RESET_PRODUCT_FORM = \"RESET_PRODUCT_FORM\";\nexport const SET_ERROR_MSG = \"SET_ERROR_MSG\";\nexport const GENERATE_NEW_ITEM_NO = \"GENERATE_NEW_ITEM_NO\";\nexport const COLOR_COLLECTION_UPDATE_MESSAGE =\n  \"COLOR_COLLECTION_UPDATE_MESSAGE\";\nexport const SIZE_COLLECTION_UPDATE_MESSAGE = \"SIZE_COLLECTION_UPDATE_MESSAGE\";\n\nexport const FETCH_NEW_PRODUCT_REQUESTED = \"FETCH_NEW_PRODUCT_REQUESTED\";\nexport const FETCH_NEW_PRODUCT_SUCCEEDED = \"FETCH_NEW_PRODUCT_SUCCEEDED\";\nexport const FETCH_NEW_PRODUCT_FAILED = \"FETCH_NEW_PRODUCT_FAILED\";\n\nexport const FETCH_NEW_PRODUCT_PHOTOS_SUCCEEDED =\n  \"FETCH_NEW_PRODUCT_PHOTOS_SUCCEEDED\";\nexport const FETCH_NEW_PRODUCT_PHOTOS_FAILED =\n  \"FETCH_NEW_PRODUCT_PHOTOS_FAILED\";\n\n//Handling category chose in Select\nexport const getCategory = (option, navMenuItems, validation) => dispatch => {\n  dispatch({\n    type: GET_CATEGORY_NAME,\n    payload: option\n  });\n\n  dispatch({\n    type: GET_SUB_CATEGORY_NAME,\n    payload: \"\"\n  });\n\n  dispatch({\n    type: GET_FURTHER_SUB_CATEGORY_NAME,\n    payload: \"\"\n  });\n\n  //Creating sub-category options for select input, which should be relevent to chosen category\n  let subCategoryOptions = navMenuItems\n    .map((cat, i) => {\n      if (cat.categoryName === option.value) {\n        return cat.subCategoryList.map(subCat => {\n          return {\n            value: subCat.subCategoryName,\n            label: subCat.subCategoryName\n          };\n        });\n      }\n      return null;\n    })\n    .filter(item => {\n      return item !== null;\n    });\n\n  let result = subCategoryOptions[0];\n\n  dispatch({\n    type: SET_SUBCATEGORY_OPTIONS,\n    payload: result\n  });\n\n  if (option.value) {\n    validation.category = \"\";\n  }\n\n  dispatch({\n    type: SET_ERROR_MSG,\n    payload: validation\n  });\n};\n\n//Handling sub-gategory chose in Select\nexport const getSubCategory = (\n  option,\n  navMenuItems,\n  category,\n  validation\n) => dispatch => {\n  dispatch({\n    type: GET_SUB_CATEGORY_NAME,\n    payload: option\n  });\n\n  dispatch({\n    type: GET_FURTHER_SUB_CATEGORY_NAME,\n    payload: \"\"\n  });\n\n  //Creating sub-sub-category options for select input, which should be relevent to chosen category and sub-category\n  let furtherSubCategoryOptions = navMenuItems\n    .map(cat => {\n      if (cat.categoryName === category.value) {\n        return cat.subCategoryList\n          .map(subCat => {\n            if (subCat.subCategoryName === option.value) {\n              return subCat.furtherSubCategoryList.map(fSubCat => {\n                return {\n                  value: fSubCat.furtherSubCategoryName,\n                  label: fSubCat.furtherSubCategoryName\n                };\n              });\n            }\n          })\n          .filter(item => {\n            return item !== null && item !== undefined;\n          });\n      }\n      return null;\n    })\n    .filter(item => {\n      return item !== null && item !== undefined;\n    });\n\n  let result = furtherSubCategoryOptions[0][0];\n\n  dispatch({\n    type: SET_FURTHER_SUBCATEGORY_OPTIONS,\n    payload: result\n  });\n\n  if (option.value) {\n    validation.subCategory = \"\";\n  }\n\n  dispatch({\n    type: SET_ERROR_MSG,\n    payload: validation\n  });\n};\n\n//Handling sub-sub-gategory chose in Select\nexport const getFurtherSubCategory = (option, validation) => dispatch => {\n  dispatch({\n    type: GET_FURTHER_SUB_CATEGORY_NAME,\n    payload: option\n  });\n\n  if (option.value) {\n    validation.furtherSubCategory = \"\";\n  }\n\n  dispatch({\n    type: SET_ERROR_MSG,\n    payload: validation\n  });\n};\n\n//Handling entering product model name in input\nexport const getProductModelName = (model, validation) => dispatch => {\n  dispatch({\n    type: GET_PRODUCT_MODEL_NAME,\n    payload: model\n  });\n\n  if (model.length >= 5 && model.length <= 50) {\n    validation.productModelName = \"\";\n  } else {\n    validation.productModelName =\n      \"Product model name length must be between 5 and 50 characters\";\n  }\n\n  dispatch({\n    type: SET_ERROR_MSG,\n    payload: validation\n  });\n};\n\n//Handling filling product withdrawnStatus in checkbox\nexport const getwithdrawnStatus = status => dispatch => {\n  dispatch({\n    type: GET_WITHDRAWN_STATUS,\n    payload: status\n  });\n};\n\n//Handling filling product activeStatus in checkbox\nexport const getActiveStatus = status => dispatch => {\n  dispatch({\n    type: GET_ACTIVE_STATUS,\n    payload: status\n  });\n};\n\n//Handling entering product CurrentPrice in input\nexport const getCurrentPrice = (\n  price,\n  validation,\n  previousPrice\n) => dispatch => {\n  dispatch({\n    type: GET_CURRENT_PRICE,\n    payload: Number(price)\n  });\n\n  if (price > 0) {\n    validation.currentPrice = \"\";\n  } else {\n    validation.currentPrice =\n      \"Current-price field is required and should be > 0\";\n  }\n\n  dispatch({\n    type: SET_ERROR_MSG,\n    payload: validation\n  });\n};\n\n//Handling entering product PreviousPrice in input\nexport const getPreviousPrice = (\n  price,\n  validation,\n  currentPrice\n) => dispatch => {\n  dispatch({\n    type: GET_PREVIOUS_PRICE,\n    payload: Number(price)\n  });\n\n  if ((price > 0 && price > currentPrice) || price === 0) {\n    validation.previousPrice = \"\";\n  } else {\n    validation.previousPrice =\n      \"Previous price-price field should be > current price\";\n  }\n\n  dispatch({\n    type: SET_ERROR_MSG,\n    payload: validation\n  });\n};\n\n//Taking existing colors and sizes from DB to show in Select options for Colors/ Sizes\nexport const getProductFeatures = () => dispatch => {\n  axios.all([axios.get(\"/filters/colors\"), axios.get(\"/filters/sizes\")]).then(\n    axios.spread((colors, sizes) => {\n      // Get colors and create options for Select\n      let productColors = colors.data.map(color => {\n        return {\n          value: color.colorName,\n          label: color.colorName\n        };\n      });\n\n      // Sort color values by alphabet\n      let colorNameOptions = productColors.sort((a, b) => {\n        if (a.value < b.value) {\n          return -1;\n        }\n        if (a.value > b.value) {\n          return 1;\n        }\n        return 0;\n      });\n\n      // Get cssHexCodes for showing colors in interface (not only words)\n      let colorStyles = colors.data.map(color => {\n        return {\n          cssHexCode: color.cssHexCode,\n          colorName: color.colorName\n        };\n      });\n\n      let productSizes = sizes.data.map(size => {\n        return {\n          value: size.value,\n          label: size.value\n        };\n      });\n\n      let sizeOptions = productSizes.sort((a, b) => {\n        if (a.value < b.value) {\n          return 1;\n        }\n        if (a.value > b.value) {\n          return -1;\n        }\n        return 0;\n      });\n\n      dispatch({\n        type: SET_COLOR_OPTIONS,\n        colors: colorNameOptions,\n        colorCollection: colorStyles\n      });\n\n      dispatch({\n        type: SET_SIZE_OPTIONS,\n        payload: sizeOptions\n      });\n    })\n  );\n};\n\n//Handling actions, when user chose product color\nexport const handleProductColors = (\n  colorOption,\n  productFeatures,\n  colorIndex,\n  colorStyles,\n  validation\n) => dispatch => {\n  let colorCssHexCode = colorStyles.filter(item => {\n    return item.colorName === colorOption.value;\n  })[0][\"cssHexCode\"];\n\n  productFeatures[colorIndex].colorName = colorOption;\n  productFeatures[colorIndex].color = colorCssHexCode;\n\n  let updatedProductFeatures = JSON.parse(JSON.stringify(productFeatures));\n\n  dispatch({\n    type: UPDATE_PRODUCT_FEATURES,\n    payload: updatedProductFeatures\n  });\n\n  if (!hasDublicates(productFeatures, \"colorName\", \"value\")) {\n    validation.colorDublicate = \"\";\n  } else if (hasDublicates(productFeatures, \"colorName\", \"value\")) {\n    validation.colorDublicate =\n      \"You have color dublicates in product, colors must be unique\";\n  }\n\n  updatedProductFeatures.forEach((color, i) => {\n    if (color.colorName.value) {\n      validation.productFeatures[i].colorName = \"\";\n    }\n  });\n\n  dispatch({\n    type: SET_ERROR_MSG,\n    payload: validation\n  });\n};\n\n//Handling actions, when user add new color for product\nexport const addColor = (productFeatures, validation) => dispatch => {\n  let newColor = {\n    color: \"#ffffff\",\n    colorName: \"white\",\n    imageUrls: [],\n    previewImages: [],\n    filesRejected: false,\n    sizes: [\n      {\n        size: \"\",\n        quantity: 0\n      }\n    ]\n  };\n\n  productFeatures.push(newColor);\n\n  let updatedProductFeatures = JSON.parse(JSON.stringify(productFeatures));\n\n  dispatch({\n    type: UPDATE_PRODUCT_FEATURES,\n    payload: updatedProductFeatures\n  });\n\n  let newColorValidation = {\n    colorName: \"\",\n    previewImages: \"\",\n    imageNamesDuplicate: \"\",\n    sizes: [\n      {\n        size: \"\",\n        quantity: \"\"\n      }\n    ],\n    sizeDublicate: \"\"\n  };\n\n  validation.productFeatures.push(newColorValidation);\n\n  let newValidation = JSON.parse(JSON.stringify(validation));\n\n  dispatch({\n    type: SET_ERROR_MSG,\n    payload: newValidation\n  });\n};\n\n// Handling actions, when user add images to our Dropzone\nexport const getImages = (\n  newImages,\n  productFeatures,\n  colorIndex,\n  validation\n) => dispatch => {\n  // Information about files to show them in preview in our Dropzone component\n  let incomingImages = newImages.map(img => {\n    return {\n      lastModified: img.lastModified,\n      lastModifiedDate: img.lastModifiedDate,\n      name: img.name,\n      preview: img.preview,\n      size: img.size,\n      type: img.type,\n      webkitRelativePath: img.webkitRelativePath\n    };\n  });\n\n  // Saving files (blob-objects) in urls to fill our redux store with them, because it is not possible to store file-objects (blob) in store? only plain objects.\n  // Then we could be able to convert them to files again for sending to our server when submit form\n  const blobUrls = newImages.map(img => {\n    return {\n      blobUrl: window.URL.createObjectURL(img),\n      fileName: img.name,\n      mimeType: img.type\n    };\n  });\n\n  let imgs = productFeatures[colorIndex].previewImages.concat(incomingImages);\n  productFeatures[colorIndex].previewImages = imgs; // We save images for preview in productFeatures.previewImages\n  productFeatures[colorIndex].filesRejected = false;\n  productFeatures[colorIndex].blobUrls = blobUrls; // We urls (links) that will be available files in productFeatures.previewImages\n  let updatedProductFeatures = JSON.parse(JSON.stringify(productFeatures)); // Deep object copy\n\n  dispatch({\n    type: UPDATE_PRODUCT_FEATURES,\n    payload: updatedProductFeatures\n  });\n\n  updatedProductFeatures.forEach((color, i) => {\n    if (color.previewImages.length > 0) {\n      validation.productFeatures[i].previewImages = \"\";\n    }\n\n    if (!hasDublicates(color.previewImages, null, \"name\")) {\n      validation.productFeatures[i].imageNamesDuplicate = \"\";\n    } else if (hasDublicates(color.previewImages, null, \"name\")) {\n      validation.productFeatures[i].imageNamesDuplicate =\n        \"You have duplicates in your image names, must be unique\";\n    }\n  });\n\n  dispatch({\n    type: SET_ERROR_MSG,\n    payload: validation\n  });\n};\n\n//Handling actions, when files, added by user into Dropzone, are rejected because of unacceptable file-size or format\nexport const onFilesRejected = (productFeatures, colorIndex) => dispatch => {\n  productFeatures[colorIndex].filesRejected = true;\n  let updatedProductFeatures = JSON.parse(JSON.stringify(productFeatures));\n\n  dispatch({\n    type: UPDATE_PRODUCT_FEATURES,\n    payload: updatedProductFeatures\n  });\n};\n\n//Handling actions, when user deletes image, added in Dropzone\nexport const deleteDropzoneImage = (\n  e,\n  productFeatures,\n  colorIndex,\n  validation\n) => dispatch => {\n  if (e.target.getAttribute(\"data-action\") === \"delete-image\") {\n    e.preventDefault();\n\n    let index = +e.target.previousElementSibling.dataset.index;\n\n    let newImages = productFeatures[colorIndex].previewImages.filter(\n      (image, i) => {\n        return i !== index;\n      }\n    );\n\n    productFeatures[colorIndex].previewImages = newImages;\n\n    let updatedProductFeatures = JSON.parse(JSON.stringify(productFeatures));\n\n    dispatch({\n      type: UPDATE_PRODUCT_FEATURES,\n      payload: updatedProductFeatures\n    });\n\n    updatedProductFeatures.forEach((color, i) => {\n      if (color.previewImages.length < 1) {\n        validation.productFeatures[i].previewImages =\n          \"You must upload at least 1 image for adding product\";\n      } else {\n        validation.productFeatures[i].previewImages = \"\";\n      }\n\n      if (!hasDublicates(color.previewImages, null, \"name\")) {\n        validation.productFeatures[i].imageNamesDuplicate = \"\";\n      } else if (hasDublicates(color.previewImages, null, \"name\")) {\n        validation.productFeatures[i].imageNamesDuplicate =\n          \"You have duplicates in your image names, must be unique\";\n      }\n    });\n\n    dispatch({\n      type: SET_ERROR_MSG,\n      payload: validation\n    });\n  }\n};\n\n//Handling actions, when user deletes added color to product\nexport const deleteColor = (\n  productFeatures,\n  colorIndex,\n  validation\n) => dispatch => {\n  let updatedProductFeatures = productFeatures.filter((color, i) => {\n    return i !== Number(colorIndex);\n  });\n\n  dispatch({\n    type: UPDATE_PRODUCT_FEATURES,\n    payload: updatedProductFeatures\n  });\n\n  let newValidationProductFeatures = validation.productFeatures.filter(\n    (color, i) => {\n      return i !== Number(colorIndex);\n    }\n  );\n\n  validation.productFeatures = newValidationProductFeatures;\n\n  if (!hasDublicates(updatedProductFeatures, \"colorName\", \"value\")) {\n    validation.colorDublicate = \"\";\n  } else if (hasDublicates(productFeatures, \"colorName\", \"value\")) {\n    validation.colorDublicate =\n      \"You have color dublicates in product, colors must be unique\";\n  }\n\n  dispatch({\n    type: SET_ERROR_MSG,\n    payload: validation\n  });\n};\n\n//Handling actions, when user chose product size\nexport const handleProductSizes = (\n  sizeOption,\n  productFeatures,\n  colorIndex,\n  sizeIndex,\n  validation\n) => dispatch => {\n  productFeatures[colorIndex].sizes[sizeIndex].size = sizeOption;\n\n  let updatedProductFeatures = JSON.parse(JSON.stringify(productFeatures));\n\n  dispatch({\n    type: UPDATE_PRODUCT_FEATURES,\n    payload: updatedProductFeatures\n  });\n\n  updatedProductFeatures.forEach((color, i) => {\n    if (!hasDublicates(color.sizes, \"size\", \"value\")) {\n      validation.productFeatures[i].sizeDublicate = \"\";\n    } else if (hasDublicates(color.sizes, \"size\", \"value\")) {\n      validation.productFeatures[i].sizeDublicate =\n        \"Sizes has dublicate values, must be unique\";\n    }\n\n    color.sizes.forEach((size, j) => {\n      if (size.size.value) {\n        validation.productFeatures[i].sizes[j].size = \"\";\n      }\n    });\n  });\n\n  let newValidation = JSON.parse(JSON.stringify(validation));\n\n  dispatch({\n    type: SET_ERROR_MSG,\n    payload: newValidation\n  });\n};\n\n//Handling actions, when user fills product quantity\nexport const handleProductQuantity = (\n  quantuty,\n  productFeatures,\n  colorIndex,\n  sizeIndex\n) => dispatch => {\n  productFeatures[colorIndex].sizes[sizeIndex].quantity = quantuty;\n\n  let updatedProductFeatures = JSON.parse(JSON.stringify(productFeatures));\n\n  dispatch({\n    type: UPDATE_PRODUCT_FEATURES,\n    payload: updatedProductFeatures\n  });\n};\n\n//Handling actions, when user adds nes size for product\nexport const addSize = (\n  productFeatures,\n  colorIndex,\n  validation\n) => dispatch => {\n  let newSize = {\n    size: \"\",\n    quantity: 0\n  };\n\n  productFeatures[colorIndex].sizes.push(newSize);\n\n  let updatedProductFeatures = JSON.parse(JSON.stringify(productFeatures));\n\n  dispatch({\n    type: UPDATE_PRODUCT_FEATURES,\n    payload: updatedProductFeatures\n  });\n\n  let newSizeValidation = {\n    size: \"\",\n    quantity: \"\"\n  };\n\n  validation.productFeatures[colorIndex].sizes.push(newSizeValidation);\n\n  let newValidation = JSON.parse(JSON.stringify(validation));\n\n  dispatch({\n    type: SET_ERROR_MSG,\n    payload: newValidation\n  });\n};\n\n//Handling actions, when user deletes added size for product\nexport const deleteSize = (\n  productFeatures,\n  colorIndex,\n  sizeIndex,\n  validation\n) => dispatch => {\n  productFeatures.forEach((color, i) => {\n    if (i === Number(colorIndex)) {\n      color.sizes = color.sizes.filter((size, j) => {\n        return j !== Number(sizeIndex);\n      });\n    }\n  });\n\n  let updatedProductFeatures = JSON.parse(JSON.stringify(productFeatures));\n\n  dispatch({\n    type: UPDATE_PRODUCT_FEATURES,\n    payload: updatedProductFeatures\n  });\n\n  validation.productFeatures.forEach((color, i) => {\n    if (i === Number(colorIndex)) {\n      color.sizes = color.sizes.filter((size, j) => {\n        return j !== Number(sizeIndex);\n      });\n    }\n  });\n\n  updatedProductFeatures.forEach((color, i) => {\n    if (!hasDublicates(color.sizes, \"size\", \"value\")) {\n      validation.productFeatures[i].sizeDublicate = \"\";\n    } else if (hasDublicates(color.sizes, \"size\", \"value\")) {\n      validation.productFeatures[i].sizeDublicate =\n        \"Sizes has dublicate values, must be unique\";\n    }\n  });\n\n  dispatch({\n    type: SET_ERROR_MSG,\n    payload: validation\n  });\n};\n\n// Handling situations, when user undo reseting the form in warning modal window\nexport const resetModal = status => dispatch => {\n  dispatch({\n    type: RESET_MODAL_STATUS,\n    payload: status\n  });\n};\n\n// Handling situations, when user reset the form (delet all filled information, returning form to its initial state)\nexport const resetForm = state => dispatch => {\n  let initialState = {\n    itemNo: rand(),\n    category: \"\",\n    subCategory: \"\",\n    furtherSubCategory: \"\",\n    productModelName: \"\",\n    subCategoryOptions: [],\n    furtherSubCategoryOptions: [],\n    withdrawnFromSale: false,\n    active: true,\n    currentPrice: 0,\n    previousPrice: 0,\n    colorOptions: state.colorOptions,\n    sizeOptions: state.sizeOptions,\n    colorStyles: state.colorStyles,\n    productFeatures: [\n      {\n        color: \"#ffffff\",\n        colorName: \"white\",\n        imageUrls: [],\n        previewImages: [],\n        filesRejected: false,\n        sizes: [\n          {\n            size: \"\",\n            quantity: 0\n          }\n        ]\n      }\n    ],\n    resetModalStatus: false,\n    validation: {\n      category: \"\",\n      subCategory: \"\",\n      furtherSubCategory: \"\",\n      productModelName: \"\",\n      currentPrice: \"\",\n      previousPrice: \"\",\n      colorDublicate: \"\",\n      productFeatures: [\n        {\n          colorName: \"\",\n          previewImages: \"\",\n          imageNamesDuplicate: \"\",\n          sizes: [\n            {\n              size: \"\",\n              quantity: \"\"\n            }\n          ],\n          sizeDublicate: \"\"\n        }\n      ]\n    },\n    fetchingNewProduct: false,\n    productMessage: \"\",\n    photosMessage: \"\",\n    colorCollectionUpdateMessage: \"\",\n    sizeCollectionUpdateMessage: \"\"\n  };\n\n  let newState = JSON.parse(JSON.stringify(initialState));\n\n  dispatch({\n    type: RESET_PRODUCT_FORM,\n    payload: newState\n  });\n};\n\nexport const generateNewItemNo = () => dispatch => {\n  dispatch({\n    type: GENERATE_NEW_ITEM_NO\n  });\n};\n\n// Function for cheking if one of the form fields is invalid (if invalid - function returns true)\n// export const isInvalid = obj => {\n//   for (let propertyName in obj) {\n//     if (\n//       typeof obj[propertyName] != \"object\" &&\n//       obj[propertyName] !== null &&\n//       !Array.isArray(obj[propertyName])\n//     ) {\n//       if (obj[propertyName]) {\n//         console.log(obj[propertyName]);\n//         return true;\n//       }\n//     } else {\n//       console.log(\"Nested : \");\n//       console.log(obj[propertyName]);\n//       isInvalid(obj[propertyName]);\n//     }\n\n//     return false;\n//   }\n// };\n\n//НУЖНА ПОМОЩЬ ПЕРЕПИСАТЬ ЭТУ ЖУТКУЮ ФУНКЦИЮ, ПРОБОВАЛ РЕКУРСИЮ, НО ЧТО-ТО НЕ ВЫХОДИТ, ЛОГИКУ ГДЕ-ТО ТЕРЯЮ (одну попытку выше оставил, остальные удалил)\nconst isInvalid = obj => {\n  let error = false;\n\n  for (let key in obj) {\n    if (\n      typeof obj[key] != \"object\" &&\n      obj[key] !== null &&\n      !Array.isArray(obj[key])\n    ) {\n      if (obj[key]) {\n        error = true;\n      }\n    } else if (Array.isArray(obj[key])) {\n      obj[key].forEach(item => {\n        for (let prop in item) {\n          if (\n            typeof item[prop] != \"object\" &&\n            item[prop] !== null &&\n            !Array.isArray(item[prop])\n          ) {\n            if (item[prop]) {\n              error = true;\n            }\n          } else {\n            item[prop].forEach(subItem => {\n              for (let subProp in subItem) {\n                if (subItem[subProp]) {\n                  error = true;\n                }\n              }\n            });\n          }\n        }\n      });\n    }\n  }\n\n  return error;\n};\n\n// Function for cheking if array of object with nested object has dublicate value (same sizes)\nfunction hasDublicates(arrayOfObjects, propName, subPropName) {\n  if (!propName) {\n    let arrayOfProperties = arrayOfObjects.map(item => {\n      return item[subPropName];\n    });\n\n    let isDublicate = arrayOfProperties.some((item, i, arr) => {\n      return arr.indexOf(item) !== i;\n    });\n\n    return isDublicate;\n  } else {\n    let arrayOfProperties = arrayOfObjects.map(item => {\n      return item[propName][subPropName];\n    });\n    let isDublicate = arrayOfProperties.some((item, i, arr) => {\n      return arr.indexOf(item) !== i;\n    });\n\n    return isDublicate;\n  }\n}\n\n// Validating all fields in form\nexport const validateForm = (state, validation, furtherSubCategoryOptions) => {\n  if (!state.category) {\n    validation.category = \"Category field is required\";\n  }\n\n  if (!state.subCategory) {\n    validation.subCategory = \"Sub-category field is required\";\n  }\n\n  if (furtherSubCategoryOptions.length > 0 && !state.furtherSubCategory) {\n    validation.furtherSubCategory = \"Sub-sub-category field is required\";\n  }\n\n  if (!state.productModelName) {\n    validation.productModelName = \"Product model name field is required\";\n  }\n\n  if (\n    state.productModelName &&\n    (state.productModelName.length < 5 || state.productModelName.length > 50)\n  ) {\n    validation.productModelName =\n      \"Product model name length must be between 5 and 50 characters\";\n  }\n\n  if (!state.currentPrice || state.currentPrice === 0) {\n    validation.currentPrice =\n      \"Current-price field is required and should be > 0\";\n  }\n\n  if (state.previousPrice > 0 && state.previousPrice < state.currentPrice) {\n    validation.previousPrice =\n      \"Previous price-price field should be > current price\";\n  }\n\n  if (hasDublicates(state.productFeatures, \"colorName\", \"value\")) {\n    validation.colorDublicate =\n      \"You have color dublicates in product, colors must be unique\";\n  }\n\n  state.productFeatures.forEach((color, i) => {\n    if (!color.colorName.value) {\n      validation.productFeatures[i].colorName = \"Color field is required\";\n    }\n\n    if (color.previewImages.length < 1) {\n      validation.productFeatures[i].previewImages =\n        \"You must upload at least 1 image for adding product\";\n    }\n\n    if (hasDublicates(color.sizes, \"size\", \"value\")) {\n      validation.productFeatures[i].sizeDublicate =\n        \"Sizes has dublicate values, must be unique\";\n    }\n\n    if (hasDublicates(color.previewImages, null, \"name\")) {\n      validation.productFeatures[i].imageNamesDuplicate =\n        \"You have duplicates in your image names, must be unique\";\n    }\n\n    color.sizes.forEach((size, j) => {\n      if (!size.size.value) {\n        validation.productFeatures[i].sizes[j].size = \"Size field is required\";\n      }\n    });\n  });\n\n  let newValidation = JSON.parse(JSON.stringify(validation));\n\n  return newValidation;\n};\n\n// Function for cextracting files, that are available in redux-store by blob-url (we save them to redux store by executing function getImages)\nconst urltoFile = async (url, filename, mimeType) => {\n  let file = await fetch(url)\n    .then(function(res) {\n      return res.arrayBuffer();\n    })\n    .then(function(buf) {\n      return new File([buf], filename, { type: mimeType });\n    });\n  return file;\n};\n\n// Sending information about our new product and photos to server to process data and save new product to database\nexport const sendNewProductToServer = (\n  state,\n  validation,\n  furtherSubCategoryOptions\n) => dispatch => {\n  let validationObject = validateForm(\n    state,\n    validation,\n    furtherSubCategoryOptions\n  );\n\n  dispatch({\n    type: SET_ERROR_MSG,\n    payload: validationObject\n  });\n\n  // If the form is invalid - do not send product to server\n  if (isInvalid(validationObject)) {\n    return;\n  } else {\n    // If the form is valid - send product to DB\n    dispatch({\n      type: FETCH_NEW_PRODUCT_REQUESTED\n    });\n\n    let newProduct = {\n      withdrawnFromSale: state.withdrawnFromSale,\n      active: state.active,\n      itemNo: state.itemNo,\n      category: state.category.value,\n      subCategory: state.subCategory.value,\n      furtherSubCategory: state.furtherSubCategory.value,\n      model: state.productModelName,\n      currentPrice: Number(state.currentPrice),\n      previousPrice: Number(state.previousPrice),\n      productFeatures: state.productFeatures\n    };\n\n    axios\n      .post(\"/products/admin-panel/add-products\", newProduct)\n      .then(async response => {\n        dispatch({\n          type: FETCH_NEW_PRODUCT_SUCCEEDED,\n          payload: response.data.message\n        });\n\n        // If our product object are successfully saved in DB, we receive response.data.success = true and can save photos to DB\n        if (response.data.success) {\n          // Creating statis part of image urls (this part are the same for every image that belong to product)\n          let imageUrlStaticPart = `./client/public/img/products/${\n            state.furtherSubCategory.value\n              ? state.category.value +\n                \"/\" +\n                state.subCategory.value +\n                \"/\" +\n                state.furtherSubCategory.value\n              : state.subCategory.value\n              ? state.category.value + \"/\" + state.subCategory.value\n              : state.category.value\n          }/${state.itemNo}`;\n\n          // Iterating or productFeatures in \"for of\" loop to use conveniently async - await functions, because in for / forEach loop it is hard to handle async - await\n          for (let color of state.productFeatures) {\n            const formData = new FormData();\n\n            for (let file of color.blobUrls) {\n              //Taking every blob-url, creating new files with function \"urltoFile\" that has been declared above, writing file to variable \"blobFile\" using async-await\n              let blobFile = await urltoFile(\n                file.blobUrl,\n                file.fileName,\n                file.mimeType\n              );\n              formData.append(`photos`, blobFile);\n            }\n\n            axios\n              .post(\"/products/admin-panel/upload-product-images\", formData, {\n                // With files we are sending to server the path, where the files have to be saved (using multer)\n                headers: {\n                  path: `${imageUrlStaticPart}/${color.color.slice(1)}/`, // Static part of image url + colorCssHexCode without \"#\"\n                  \"content-type\": \"multipart/form-data\"\n                }\n              })\n              .then(response => {\n                dispatch({\n                  type: FETCH_NEW_PRODUCT_PHOTOS_SUCCEEDED,\n                  payload: response.data.message\n                });\n              })\n              .catch(error => {\n                dispatch({\n                  type: FETCH_NEW_PRODUCT_PHOTOS_FAILED,\n                  payload:\n                    \"Something wrong with receiving photos at server. Please, check the path folder\"\n                });\n              });\n          }\n\n          // Updating information about products in color collection\n          let newProductColors = newProduct.productFeatures.map(color => {\n            return {\n              cssHexCode: color.color,\n              colorName: color.colorName.value\n            };\n          });\n\n          for (let color of newProductColors) {\n            axios\n              .post(\"/filters/colors/add-color\", color)\n              .then(updatedColor => {\n                dispatch({\n                  type: COLOR_COLLECTION_UPDATE_MESSAGE,\n                  payload:\n                    \"Collor collection is successfully updated by information about new product\"\n                });\n              })\n              .catch(err => {\n                dispatch({\n                  type: COLOR_COLLECTION_UPDATE_MESSAGE,\n                  payload:\n                    \"Something wrong with updating collor collection by information about new product\"\n                });\n              });\n          }\n\n          // Updating information about products in size collection\n          let nonUniqueSizes = [];\n          newProduct.productFeatures.forEach(color => {\n            color.sizes.forEach(size => {\n              nonUniqueSizes.push(size.size.value);\n            });\n          });\n\n          let newProductUniqueSizes = [...new Set(nonUniqueSizes)];\n\n          for (let size of newProductUniqueSizes) {\n            axios\n              .post(\"/filters/sizes/add-size\", { value: size })\n              .then(updatedSize => {\n                dispatch({\n                  type: SIZE_COLLECTION_UPDATE_MESSAGE,\n                  payload:\n                    \"Size collection is successfully updated by information about new product\"\n                });\n              })\n              .catch(err => {\n                dispatch({\n                  type: SIZE_COLLECTION_UPDATE_MESSAGE,\n                  payload:\n                    \"Something wrong with updating size collection by information about new product\"\n                });\n              });\n          }\n        } else {\n          dispatch({\n            type: FETCH_NEW_PRODUCT_PHOTOS_FAILED,\n            payload: \"\"\n          });\n        }\n      })\n      .catch(error => {\n        dispatch({\n          type: FETCH_NEW_PRODUCT_FAILED,\n          payload: \"Something wrong with saving product in DB. Check DB.\"\n        });\n      });\n  }\n};\n","import {\n  GET_CATEGORY_NAME,\n  GET_SUB_CATEGORY_NAME,\n  GET_FURTHER_SUB_CATEGORY_NAME,\n  SET_SUBCATEGORY_OPTIONS,\n  SET_FURTHER_SUBCATEGORY_OPTIONS,\n  GET_PRODUCT_MODEL_NAME,\n  GET_WITHDRAWN_STATUS,\n  GET_ACTIVE_STATUS,\n  GET_CURRENT_PRICE,\n  GET_PREVIOUS_PRICE,\n  UPDATE_PRODUCT_FEATURES,\n  SET_COLOR_OPTIONS,\n  SET_SIZE_OPTIONS,\n  RESET_MODAL_STATUS,\n  RESET_PRODUCT_FORM,\n  SET_ERROR_MSG,\n  GENERATE_NEW_ITEM_NO,\n  FETCH_NEW_PRODUCT_REQUESTED,\n  FETCH_NEW_PRODUCT_SUCCEEDED,\n  FETCH_NEW_PRODUCT_FAILED,\n  FETCH_NEW_PRODUCT_PHOTOS_SUCCEEDED,\n  FETCH_NEW_PRODUCT_PHOTOS_FAILED,\n  COLOR_COLLECTION_UPDATE_MESSAGE,\n  SIZE_COLLECTION_UPDATE_MESSAGE\n} from \"../../actions/adminDashboard/admProductsActions\";\nimport uniqueRandom from \"unique-random\";\nconst rand = uniqueRandom(0, 999999);\n\nconst initialState = {\n  itemNo: rand(),\n  category: \"\",\n  subCategory: \"\",\n  furtherSubCategory: \"\",\n  productModelName: \"\",\n  subCategoryOptions: [],\n  furtherSubCategoryOptions: [],\n  withdrawnFromSale: false,\n  active: true,\n  currentPrice: 0,\n  previousPrice: 0,\n  colorOptions: [],\n  sizeOptions: [],\n  colorStyles: [],\n  productFeatures: [\n    {\n      color: \"#ffffff\",\n      colorName: \"white\",\n      imageUrls: [],\n      previewImages: [],\n      blobUrls: [],\n      filesRejected: false,\n      sizes: [\n        {\n          size: \"\",\n          quantity: 0\n        }\n      ]\n    }\n  ],\n  resetModalStatus: false,\n  validation: {\n    category: \"\",\n    subCategory: \"\",\n    furtherSubCategory: \"\",\n    productModelName: \"\",\n    currentPrice: \"\",\n    previousPrice: \"\",\n    colorDublicate: \"\",\n    productFeatures: [\n      {\n        colorName: \"\",\n        previewImages: \"\",\n        imageNamesDuplicate: \"\",\n        sizes: [\n          {\n            size: \"\",\n            quantity: \"\"\n          }\n        ],\n        sizeDublicate: \"\"\n      }\n    ]\n  },\n  fetchingNewProduct: false,\n  productMessage: \"\",\n  photosMessage: \"\",\n  colorCollectionUpdateMessage: \"\",\n  sizeCollectionUpdateMessage: \"\"\n};\n\nfunction admProducts(state = initialState, action) {\n  switch (action.type) {\n    case GET_CATEGORY_NAME:\n      return {\n        ...state,\n        category: action.payload\n      };\n    case GET_SUB_CATEGORY_NAME:\n      return {\n        ...state,\n        subCategory: action.payload\n      };\n    case GET_FURTHER_SUB_CATEGORY_NAME:\n      return {\n        ...state,\n        furtherSubCategory: action.payload\n      };\n    case SET_SUBCATEGORY_OPTIONS:\n      return {\n        ...state,\n        subCategoryOptions: action.payload\n      };\n    case SET_FURTHER_SUBCATEGORY_OPTIONS:\n      return {\n        ...state,\n        furtherSubCategoryOptions: action.payload\n      };\n    case GET_PRODUCT_MODEL_NAME:\n      return {\n        ...state,\n        productModelName: action.payload\n      };\n    case GET_WITHDRAWN_STATUS:\n      return {\n        ...state,\n        withdrawnFromSale: action.payload\n      };\n    case GET_ACTIVE_STATUS:\n      return {\n        ...state,\n        active: action.payload\n      };\n    case GET_CURRENT_PRICE:\n      return {\n        ...state,\n        currentPrice: action.payload\n      };\n    case GET_PREVIOUS_PRICE:\n      return {\n        ...state,\n        previousPrice: action.payload\n      };\n    case SET_COLOR_OPTIONS:\n      return {\n        ...state,\n        colorOptions: action.colors,\n        colorStyles: action.colorCollection\n      };\n    case SET_SIZE_OPTIONS:\n      return {\n        ...state,\n        sizeOptions: action.payload\n      };\n    case UPDATE_PRODUCT_FEATURES:\n      return {\n        ...state,\n        productFeatures: action.payload\n      };\n    case RESET_MODAL_STATUS:\n      return {\n        ...state,\n        resetModalStatus: action.payload\n      };\n    case RESET_PRODUCT_FORM:\n      return {\n        ...action.payload\n      };\n    case SET_ERROR_MSG:\n      return {\n        ...state,\n        validation: action.payload\n      };\n    case GENERATE_NEW_ITEM_NO:\n      return {\n        ...state,\n        itemNo: rand()\n      };\n    case FETCH_NEW_PRODUCT_REQUESTED:\n      return {\n        ...state,\n        fetchingNewProduct: true\n      };\n    case FETCH_NEW_PRODUCT_SUCCEEDED:\n      return {\n        ...state,\n        fetchingNewProduct: false,\n        productMessage: action.payload\n      };\n    case FETCH_NEW_PRODUCT_FAILED:\n      return {\n        ...state,\n        fetchingNewProduct: false,\n        productMessage: action.payload\n      };\n    case FETCH_NEW_PRODUCT_PHOTOS_SUCCEEDED:\n      return {\n        ...state,\n        fetchingNewProduct: false,\n        photosMessage: action.payload\n      };\n    case FETCH_NEW_PRODUCT_PHOTOS_FAILED:\n      return {\n        ...state,\n        fetchingNewProduct: false,\n        photosMessage: action.payload\n      };\n    case COLOR_COLLECTION_UPDATE_MESSAGE:\n      return {\n        ...state,\n        colorCollectionUpdateMessage: action.payload\n      };\n    case SIZE_COLLECTION_UPDATE_MESSAGE:\n      return {\n        ...state,\n        sizeCollectionUpdateMessage: action.payload\n      };\n    default:\n      return { ...state };\n  }\n}\n\nexport default admProducts;\n","import axios from \"axios\";\n\nexport const GET_NEW_COLOR_HEX = \"GET_NEW_COLOR_HEX\";\nexport const GET_NEW_COLOR_NAME = \"GET_NEW_COLOR_NAME\";\nexport const NEW_COLOR_MESSAGE = \"NEW_COLOR_MESSAGE\";\nexport const NEW_COLOR_MODAL_STATUS = \"NEW_COLOR_MODAL_STATUS\";\n\nexport const FETCH_NEW_COLOR_REQUESTED = \"FETCH_NEW_COLOR_REQUESTED\";\nexport const FETCH_NEW_COLOR_SUCCEEDED = \"FETCH_NEW_COLOR_SUCCEEDED\";\nexport const FETCH_NEW_COLOR_FAILED = \"FETCH_NEW_COLOR_FAILED\";\n\nexport const FETCH_EXISTING_COLOR_REQUESTED = \"FETCH_EXISTING_COLOR_REQUESTED\";\nexport const FETCH_EXISTING_COLOR_SUCCEEDED = \"FETCH_EXISTING_COLOR_SUCCEEDED\";\nexport const FETCH_EXISTING_COLOR_FAILED = \"FETCH_EXISTING_COLOR_FAILED\";\n\n// Handle chosing color in react-color (color-picker)\nexport const getNewColorHex = colorPickerObject => dispatch => {\n  dispatch({\n    type: GET_NEW_COLOR_HEX,\n    payload: colorPickerObject.hex\n  });\n};\n\n// Handle entering color name into input\nexport const getNewColorName = colorName => dispatch => {\n  dispatch({\n    type: GET_NEW_COLOR_NAME,\n    payload: colorName\n  });\n};\n\n// Handling situations, when modal window about updating color in DB should be showed\nexport const handleNewColorModal = status => dispatch => {\n  dispatch({\n    type: NEW_COLOR_MODAL_STATUS,\n    payload: status\n  });\n};\n\n// Function for checking if the color is already exists in DB\nexport const checkNewColorInDb = (newColorName, newCssHexCode) => dispatch => {\n  // Preloader\n  dispatch({\n    type: FETCH_NEW_COLOR_REQUESTED,\n    payload: true\n  });\n\n  //Request to server\n  axios\n    .post(\"/filters/colors/check-color\", {\n      colorName: newColorName\n        .toLowerCase()\n        .trim()\n        .replace(/\\s\\s+/g, \" \"),\n      cssHexCode: newCssHexCode\n    })\n    .then(colorInfo => {\n      if (colorInfo.data.message) {\n        // If color exists, show modal about existing color and update / cancel buttons\n        dispatch({\n          type: NEW_COLOR_MESSAGE,\n          newColorMessage: colorInfo.data.message,\n          existingColorObject: colorInfo.data.existingColor[0],\n          isExistingColorsFetching: false\n        });\n      } else {\n        // If color does not exists, show modal with save / cancel buttons\n        dispatch({\n          type: NEW_COLOR_MESSAGE,\n          newColorMessage: colorInfo.data.message,\n          existingColorObject: {},\n          isExistingColorsFetching: false\n        });\n      }\n    });\n};\n\n// Update in all products information about colors\nexport const updateColorsInAllProducts = (\n  newColorName,\n  newCssHexCode\n) => dispatch => {\n  let color = newColorName\n    .toLowerCase()\n    .trim()\n    .replace(/\\s\\s+/g, \" \");\n\n  let query = {\n    colorName: color,\n    cssHexCode: newCssHexCode\n  };\n\n  axios\n    // Taking product objects as they must be transformed to (pre-update-version)\n    .post(\"/colors/get-pre-updated-products\", query)\n    .then(preUpdatedProducts => {\n      if (preUpdatedProducts.data.message) {\n        // Save new product versions to DB (with new colors), requesting to server in loop throwing every product, than must be updated\n        for (let product of preUpdatedProducts.data.updatedProducts) {\n          axios\n            .post(\"/colors/update-colors-in-products\", { product })\n            .then(updatedProducts => {\n              console.log(updatedProducts);\n            });\n        }\n      }\n    });\n};\n\n/*Handling situations, for:\n1. If color does-not exist - save new color to DB.\n2. If color exists - update existing color in DB and update all products (color in products), callback - callbackUpdateColorsInAllProducts().\n*/\nexport const addOrUpdateColorInDb = (\n  newColorName,\n  newCssHexCode,\n  callbackGetUpdatedColors,\n  callbackGetProductFeatures,\n  callbackUpdateColorsInAllProducts\n) => dispatch => {\n  // Preloader\n  dispatch({\n    type: FETCH_NEW_COLOR_REQUESTED,\n    payload: true\n  });\n\n  // Save/update color\n  axios\n    .post(\"/filters/colors/add-color\", {\n      colorName: newColorName\n        .toLowerCase()\n        .trim()\n        .replace(/\\s\\s+/g, \" \"),\n      cssHexCode: newCssHexCode\n    })\n    .then(color => {\n      console.log(color);\n      dispatch({\n        type: FETCH_NEW_COLOR_SUCCEEDED,\n        finalMessage: \"Information in DB successfully updated\",\n        newColorObject: color.data,\n        newColorModalStatus: false\n      });\n\n      callbackGetUpdatedColors(); // Update block with existing colors at interface\n      callbackUpdateColorsInAllProducts(newColorName, newCssHexCode); // Update colors in products\n      setTimeout(callbackGetProductFeatures, 2000);\n    })\n    .catch(error => {\n      console.log(error);\n      dispatch({\n        type: FETCH_NEW_COLOR_FAILED,\n        finalMessage: \"An error occured, check DB\",\n        newColorModalStatus: false\n      });\n    });\n};\n\n// Get all existing colors to shoe them in interface\nexport const getExistingColorsFromDb = () => dispatch => {\n  dispatch({\n    type: FETCH_EXISTING_COLOR_REQUESTED\n  });\n\n  axios.get(\"/filters/colors\").then(colors => {\n    let colorNameOptions = colors.data.sort((a, b) => {\n      if (a.colorName < b.colorName) {\n        return -1;\n      }\n      if (a.colorName > b.colorName) {\n        return 1;\n      }\n      return 0;\n    });\n\n    dispatch({\n      type: FETCH_EXISTING_COLOR_SUCCEEDED,\n      payload: colorNameOptions\n    });\n  });\n};\n","import {\n  GET_NEW_COLOR_HEX,\n  GET_NEW_COLOR_NAME,\n  NEW_COLOR_MODAL_STATUS,\n  FETCH_NEW_COLOR_REQUESTED,\n  FETCH_NEW_COLOR_SUCCEEDED,\n  FETCH_NEW_COLOR_FAILED,\n  NEW_COLOR_MESSAGE,\n  FETCH_EXISTING_COLOR_REQUESTED,\n  FETCH_EXISTING_COLOR_SUCCEEDED\n} from \"../../actions/adminDashboard/admColorActions\";\n\nconst initialState = {\n  existingColors: [],\n  isExistingColorsFetching: false,\n  newColorName: \"\",\n  newCssHexCode: \"\",\n  newColorMessage: false,\n  existingColorObject: {},\n  newColorObject: {},\n  newColorModalStatus: false,\n  finalMessage: \"\",\n  isAllColorsFetching: false\n};\n\nfunction admColors(state = initialState, action) {\n  switch (action.type) {\n    case GET_NEW_COLOR_HEX:\n      return {\n        ...state,\n        newCssHexCode: action.payload\n      };\n    case GET_NEW_COLOR_NAME:\n      return {\n        ...state,\n        newColorName: action.payload,\n        finalMessage: \"\"\n      };\n    case NEW_COLOR_MESSAGE:\n      return {\n        ...state,\n        newColorMessage: action.newColorMessage,\n        existingColorObject: action.existingColorObject,\n        isExistingColorsFetching: action.isExistingColorsFetching\n      };\n    case NEW_COLOR_MODAL_STATUS:\n      return {\n        ...state,\n        newColorModalStatus: action.payload\n      };\n    case FETCH_NEW_COLOR_REQUESTED:\n      return {\n        ...state,\n        isExistingColorsFetching: action.payload,\n        finalMessage: \"\"\n      };\n    case FETCH_NEW_COLOR_SUCCEEDED:\n      return {\n        ...state,\n        finalMessage: action.finalMessage,\n        newColorObject: action.newColorObject,\n        newColorModalStatus: action.newColorModalStatus,\n        isExistingColorsFetching: false\n      };\n    case FETCH_NEW_COLOR_FAILED:\n      return {\n        ...state,\n        finalMessage: action.finalMessage,\n        newColorModalStatus: action.newColorModalStatus,\n        isExistingColorsFetching: false\n      };\n    case FETCH_EXISTING_COLOR_REQUESTED:\n      return {\n        ...state,\n        isAllColorsFetching: true\n      };\n    case FETCH_EXISTING_COLOR_SUCCEEDED:\n      return {\n        ...state,\n        isAllColorsFetching: false,\n        existingColors: action.payload\n      };\n\n    default:\n      return { ...state };\n  }\n}\n\nexport default admColors;\n","import axios from \"axios\";\n\nexport const GET_NEW_SIZE_NAME = \"GET_NEW_SIZE_NAME\";\n\nexport const FETCH_NEW_SIZE_REQUESTED = \"FETCH_NEW_SIZE_REQUESTED\";\nexport const FETCH_NEW_SIZE_SUCCEEDED = \"FETCH_NEW_SIZE_SUCCEEDED\";\nexport const FETCH_NEW_SIZE_FAILED = \"FETCH_NEW_SIZE_FAILED\";\n\nexport const FETCH_EXISTING_SIZE_REQUESTED = \"FETCH_EXISTING_SIZE_REQUESTED\";\nexport const FETCH_EXISTING_SIZE_SUCCEEDED = \"FETCH_EXISTING_SIZE_SUCCEEDED\";\nexport const FETCH_EXISTING_SIZE_FAILED = \"FETCH_EXISTING_SIZE_FAILED\";\n\nexport const GET_NUPDATED_SIZE_NAME = \"GET_NUPDATED_SIZE_NAME\";\n\nexport const FETCH_UPDATING_SIZE_REQUESTED = \"FETCH_UPDATING_SIZE_REQUESTED\";\nexport const FETCH_UPDATING_SIZE_SUCCEEDED = \"FETCH_UPDATING_SIZE_SUCCEEDED\";\nexport const FETCH_UPDATING_SIZE_FAILED = \"FETCH_UPDATING_SIZE_FAILED\";\n\n// New size input value\nexport const getNewSizeName = sizeName => dispatch => {\n  dispatch({\n    type: GET_NEW_SIZE_NAME,\n    payload: sizeName\n  });\n};\n\n//Save new size to DB\nexport const saveNewSizeInDb = (sizeName, cbGetExistingSizes) => dispatch => {\n  let newSize = sizeName.trim().replace(/\\s\\s+/g, \" \");\n  // Preloader\n  dispatch({\n    type: FETCH_NEW_SIZE_REQUESTED\n  });\n\n  axios\n    .post(\"/filters/sizes/check-size\", { newSize: newSize })\n    .then(size => {\n      // If new size already exists in DB\n      if (size.data.message) {\n        dispatch({\n          type: FETCH_NEW_SIZE_FAILED,\n          payload: `Size vith value \"${\n            size.data.existingSize.value\n          }\" is already exists`\n        });\n      } else {\n        axios\n          .post(\"/filters/sizes/add-size\", { value: newSize })\n          .then(size => {\n            //New size added to DB\n            dispatch({\n              type: FETCH_NEW_SIZE_SUCCEEDED,\n              payload: `Size vith value \"${\n                size.data.value\n              }\" is successfully added to DB`\n            });\n\n            // Update view of existing sizes after saving new size\n            cbGetExistingSizes();\n          })\n          .catch(error => {\n            dispatch({\n              type: FETCH_NEW_SIZE_FAILED,\n              payload: `An error is occured. Please, check DB.`\n            });\n          });\n      }\n    })\n    .catch(error => {\n      dispatch({\n        type: FETCH_NEW_SIZE_FAILED,\n        payload: `An error is occured. Please, check DB.`\n      });\n    });\n};\n\n// Get existing sizes from DB\nexport const getExistingSizes = () => dispatch => {\n  dispatch({\n    type: FETCH_EXISTING_SIZE_REQUESTED\n  });\n\n  axios.get(\"/filters/sizes\").then(sizes => {\n    let existingSizes = sizes.data.sort((a, b) => {\n      if (a.value < b.value) {\n        return 1;\n      }\n      if (a.value > b.value) {\n        return -1;\n      }\n      return 0;\n    });\n\n    let updatingSizes = sizes.data\n      .map(size => {\n        return {\n          _id: size._id,\n          value: size.value\n        };\n      })\n      .sort((a, b) => {\n        if (a.value < b.value) {\n          return 1;\n        }\n        if (a.value > b.value) {\n          return -1;\n        }\n        return 0;\n      });\n\n    dispatch({\n      type: FETCH_EXISTING_SIZE_SUCCEEDED,\n      payload: existingSizes,\n      updatingSizes: updatingSizes\n    });\n  });\n};\n\n// Updating size inputs\nexport const getUpdatedSize = (allSizes, sizeId, updatedSize) => dispatch => {\n  let newSizes = allSizes.map(size => {\n    if (size._id === sizeId) {\n      size.value = updatedSize;\n    }\n\n    return size;\n  });\n\n  dispatch({\n    type: GET_NUPDATED_SIZE_NAME,\n    payload: newSizes\n  });\n};\n\n// Update in all products information about sizes\nexport const updateSizesInAllProducts = (\n  previousSizeName,\n  newSizeValue\n) => dispatch => {\n  let newSize = newSizeValue.trim().replace(/\\s\\s+/g, \" \");\n\n  let query = {\n    previousSizeName: previousSizeName,\n    newSizeName: newSize\n  };\n\n  axios\n    // Taking product objects as they must be transformed to (pre-update-version)\n    .post(\"/sizes/get-pre-updated-products\", query)\n    .then(preUpdatedProducts => {\n      if (preUpdatedProducts.data.message) {\n        // Save new product versions to DB (with new sizes), requesting to server in loop throwing every product, than must be updated\n        for (let product of preUpdatedProducts.data.updatedProducts) {\n          axios\n            .post(\"/sizes/update-sizes-in-products\", { product })\n            .then(updatedProducts => {})\n            .catch(error => {\n              dispatch({\n                type: FETCH_UPDATING_SIZE_FAILED,\n                payload: `An error is occured. Please, check DB.`\n              });\n            });\n        }\n      }\n    });\n};\n\n// Update size in DB\nexport const updateSizeInDb = (\n  sizeId,\n  newSizeValue,\n  existingSizes,\n  callbackGetExistingSizes,\n  callbackUpdateSizesInAllProducts\n) => dispatch => {\n  let newSize = newSizeValue.trim().replace(/\\s\\s+/g, \" \");\n\n  let previousSizeName = existingSizes.filter(size => {\n    return size._id === sizeId;\n  })[0].value;\n\n  // Preloader\n  dispatch({\n    type: FETCH_UPDATING_SIZE_REQUESTED,\n    payload: newSizeValue\n  });\n\n  axios\n    .post(\"/filters/sizes/check-size\", { newSize: newSize })\n    .then(size => {\n      // If new size already exists in DB\n      if (size.data.message) {\n        dispatch({\n          type: FETCH_UPDATING_SIZE_SUCCEEDED,\n          payload: `Size vith value \"${\n            size.data.existingSize.value\n          }\" is already exists, enter another value`,\n          updatedSizeValue: size.data.existingSize.value\n        });\n      } else {\n        axios\n          .post(\"/filters/sizes/update-size\", {\n            sizeId: sizeId,\n            newSize: newSize\n          })\n          .then(size => {\n            //Size updated in DB\n            dispatch({\n              type: FETCH_UPDATING_SIZE_SUCCEEDED,\n              payload: `Size is successfully updated from value \"${previousSizeName}\" to value \"${\n                size.data.value\n              }\"`,\n              updatedSizeValue: size.data.value\n            });\n\n            callbackUpdateSizesInAllProducts(previousSizeName, newSize);\n\n            setTimeout(callbackGetExistingSizes, 4000);\n          })\n          .catch(error => {\n            dispatch({\n              type: FETCH_UPDATING_SIZE_FAILED,\n              payload: `An error is occured. Please, check DB.`\n            });\n          });\n      }\n    })\n    .catch(error => {\n      dispatch({\n        type: FETCH_UPDATING_SIZE_FAILED,\n        payload: `An error is occured. Please, check DB.`\n      });\n    });\n};\n","import {\n  GET_NEW_SIZE_NAME,\n  FETCH_NEW_SIZE_REQUESTED,\n  FETCH_NEW_SIZE_SUCCEEDED,\n  FETCH_NEW_SIZE_FAILED,\n  GET_NUPDATED_SIZE_NAME,\n  FETCH_EXISTING_SIZE_REQUESTED,\n  FETCH_EXISTING_SIZE_SUCCEEDED,\n  FETCH_EXISTING_SIZE_FAILED,\n  FETCH_UPDATING_SIZE_REQUESTED,\n  FETCH_UPDATING_SIZE_SUCCEEDED,\n  FETCH_UPDATING_SIZE_FAILED\n} from \"../../actions/adminDashboard/admSizeActions\";\n\nconst initialState = {\n  newSizeName: \"\",\n  isNewSizeFetching: false,\n  checkNewSizeResult: \"\",\n  isExistingSizesFetching: false,\n  existingSizes: [],\n  updatingSizes: [],\n  sizeUpdateResults: \"\",\n  isSizeUpdating: false,\n  preUpdateValue: \"\",\n  updatedSizeValue: \"\",\n  errorMsg: \"\"\n};\n\nfunction admSizes(state = initialState, action) {\n  switch (action.type) {\n    case GET_NEW_SIZE_NAME:\n      return {\n        ...state,\n        newSizeName: action.payload\n      };\n    case FETCH_NEW_SIZE_REQUESTED:\n      return {\n        ...state,\n        isNewSizeFetching: true,\n        checkNewSizeResult: \"\"\n      };\n    case FETCH_NEW_SIZE_SUCCEEDED:\n      return {\n        ...state,\n        isNewSizeFetching: false,\n        checkNewSizeResult: action.payload\n      };\n    case FETCH_NEW_SIZE_FAILED:\n      return {\n        ...state,\n        isNewSizeFetching: false,\n        checkNewSizeResult: action.payload\n      };\n    case FETCH_EXISTING_SIZE_REQUESTED:\n      return {\n        ...state,\n        isExistingSizesFetching: true\n      };\n    case FETCH_EXISTING_SIZE_SUCCEEDED:\n      return {\n        ...state,\n        isExistingSizesFetching: false,\n        existingSizes: action.payload,\n        updatingSizes: action.updatingSizes\n      };\n    case GET_NUPDATED_SIZE_NAME:\n      return {\n        ...state,\n        updatingSizes: action.payload\n      };\n    case FETCH_UPDATING_SIZE_REQUESTED:\n      return {\n        ...state,\n        isSizeUpdating: true,\n        preUpdateValue: action.payload,\n        sizeUpdateResults: \"\",\n        errorMsg: \"\",\n        updatedSizeValue: \"\"\n      };\n    case FETCH_UPDATING_SIZE_SUCCEEDED:\n      return {\n        ...state,\n        isSizeUpdating: false,\n        sizeUpdateResults: action.payload,\n        updatedSizeValue: action.updatedSizeValue,\n        preUpdateValue: \"\"\n      };\n    case FETCH_UPDATING_SIZE_FAILED:\n      return {\n        ...state,\n        isSizeUpdating: false,\n        errorMsg: action.payload,\n        preUpdateValue: \"\"\n      };\n\n    default:\n      return { ...state };\n  }\n}\n\nexport default admSizes;\n","import { combineReducers } from \"redux\";\nimport { reducer as formReducer } from \"redux-form\";\nimport login from \"./login\";\nimport navMenu from \"./navMenu\";\nimport product from \"./product\";\nimport filters from \"./filters\";\nimport productDetails from \"./productDetails\";\nimport categoryCarousel from \"./categoryCarousel\";\nimport cart from \"./cart\";\nimport addToCart from \"./addToCart\";\nimport search from \"./search\";\n\n//For Admin Dashboard\nimport admNavMenu from \"./adminDashboard/admNavMenuStates\";\nimport admProducts from \"./adminDashboard/admProductsStates\";\nimport admColors from \"./adminDashboard/admColorStates\";\nimport admSizes from \"./adminDashboard/admSizeStates\";\n\nconst rootReducer = combineReducers({\n  login,\n  navMenu,\n  form: formReducer,\n  product,\n  categoryCarousel,\n  filters,\n  productDetails,\n  cart,\n  addToCart,\n  search,\n  //For Admin Dashboard\n  admNavMenu,\n  admProducts,\n  admColors,\n  admSizes\n});\n\nexport default rootReducer;\n","import {createStore, applyMiddleware, compose} from 'redux'\nimport logger from 'redux-logger'\nimport thunk from 'redux-thunk'\nimport rootReducer from './reducers/index'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = process.env.NODE_ENV === 'development' ? \ncreateStore(rootReducer, composeEnhancers(applyMiddleware(thunk,logger)))\n: createStore(rootReducer, applyMiddleware(thunk));\n\n\n\n\n\n\nexport default store;","import axios from 'axios';\n\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"../utils/setAuthToken\";\n\n\nimport {\n    CLEAR_CART_ON_LOGOUT, SET_DATA_CART_FROM_DB, CART_FROM_LOCALSTORAGE_TO_DB,\n    SET_CART_FROM_LOCALSTORAGE, SET_ID_LOGGED_USER, SET_INVALID_LOGIN, CLOSE_MODAL_UNSUCCESS_ORDER,\n    OPEN_MODAL_FINISH_ORDER_AFTER_LOGIN, getCart\n} from \"./cart\";\nimport store from \"../store\";\n\n\nexport const SET_LOGGED = 'SET_LOGGED';\nexport const LOGOUT = 'LOGOUT';\nexport const SEND_NEW_USER = 'SEND_NEW_USER';\n\nexport const OPEN_LOGIN_FORM = 'OPEN_LOGIN_FORM';\nexport const CLOSE_LOGIN_FORM = 'CLOSE_LOGIN_FORM';\n\nexport const OPEN_REG_FORM = 'OPEN_REG_FORM';\nexport const CLOSE_REG_FORM = 'CLOSE_REG_FORM';\n\nexport const OPEN_REG_OK_FORM = 'OPEN_REG_OK_FORM';\nexport const CLOSE_REG_OK_FORM = 'CLOSE_REG_OK_FORM';\n\nexport const OPEN_LOGIN_DETAILS = 'OPEN_LOGIN_DETAILS';\nexport const CLOSE_LOGIN_DETAILS = 'CLOSE_LOGIN_DETAILS';\n\nexport const EXIST_USER = 'EXIST_USER';\nexport const PROFILE_EXIST_EMAIL = 'PROFILE_EXIST_EMAIL';\n\nexport const CORRECT_LOGIN = 'CORRECT_LOGIN';\nexport const INCORRECT_LOGIN = 'INCORRECT_LOGIN';\n\nexport const PROFILE_CORRECT_PERSONAL_CHANGE = 'PROFILE_CORRECT_PERSONAL_CHANGE';\n\nexport const PROFILE_CORRECT_PASSWORD_CHANGE = 'PROFILE_CORRECT_PASSWORD_CHANGE';\nexport const PROFILE_INCORRECT_PASSWORD_CHANGE = 'PROFILE_INCORRECT_PASSWORD_CHANGE';\n\nexport const RESET_WINDOW_STATUS = 'RESET_WINDOW_STATUS';\n\nexport const SET_JWT_CURRENT_USER = 'SET_JWT_CURRENT_USER';\nexport const LOGOUT_JWT_CURRENT_USER = 'LOGOUT_JWT_CURRENT_USER';\n\nexport const SAVE_HISTORY_PATH = 'SAVE_HISTORY_PATH';\n\n\nexport function checkLoginCartOnStart() {\n    if (localStorage.jwtToken) {\n        //Set the auth token header auth\n        setAuthToken(localStorage.jwtToken);\n        //Decode token and get user info and exp\n        const decoded = jwt_decode(localStorage.jwtToken);\n        //Set user ans is isAuthenticated\n        store.dispatch(setLoggedUser(decoded._doc));\n        store.dispatch({\n            type: SET_ID_LOGGED_USER,\n            payload: {idUser: decoded._doc._id, mail: decoded._doc.email}\n        });\n\n        // store.dispatch(getCart({idUser: decoded._doc._id}));\n        getCart({idUser: decoded._doc._id});\n\n        //Check for expired token\n        const currentTime = Date.now() / 1000;\n        if (decoded.exp < currentTime) {\n            //Logout user\n            store.dispatch(unsetLoggedUser());\n            //Clear the curren profile\n            // store.dispatch(clearCurrentProfile());\n            //Redirect to login\n            window.location.href = \"/\";\n        }\n    } else if (localStorage.savedCart) {\n        store.dispatch({\n            type: SET_CART_FROM_LOCALSTORAGE,\n            payload: {arrLS: JSON.parse(localStorage.savedCart)}\n        });\n    }\n\n\n}\n\n\nfunction checkSavedCart(userId) {\n\n    if (localStorage.savedCart) {\n        let sendObj = {\n            userId: userId.idUser,\n            arrLS: localStorage.savedCart\n        }\n\n        axios.post('/setSavedCart', sendObj)\n            .then(res => res.data)\n            .then(data => {\n                    if (data.success) {\n                        localStorage.removeItem(\"savedCart\");\n                        store.dispatch({type: CART_FROM_LOCALSTORAGE_TO_DB, payload: {infoDB: data.item}})\n                    }\n\n                }\n            )\n\n    } else {\n        axios.post('/getCart', userId)\n            .then(res => res.data)\n            .then(data => {\n\n                    if (data.success) {\n                        let readyData = JSON.parse(data.infoDB);\n                        // console.log('readyData', readyData)\n\n                        store.dispatch({type: SET_DATA_CART_FROM_DB, payload: {infoDB: readyData}})\n                    }\n\n                }\n            )\n            .catch(err => console.log(err))\n    }\n\n}\n\n\nexport const setLoggedUser = decoded => {\n    return {\n        type: SET_JWT_CURRENT_USER,\n        payload: decoded\n    };\n};\n\nexport const unsetLoggedUser = () => dispatch => {\n    // Remove the token from local storage\n    localStorage.removeItem(\"jwtToken\");\n    //Remove auth header for future requests\n    setAuthToken(false);\n    //Set the current user to an empty object\n    // dispatch(setCurrentUser({}));\n    dispatch({\n        type: LOGOUT_JWT_CURRENT_USER,\n    });\n    dispatch({\n        type: CLEAR_CART_ON_LOGOUT,\n    });\n\n\n};\n\n\nexport function goToProfile(history) {\n    return dispatch => {\n        // console.log('history')\n        // console.log(history);\n        axios.get('/users/profile')\n            .then(res => res.data)\n            .then(data => {\n                    dispatch({type: CLOSE_LOGIN_DETAILS})\n                }\n            )\n            .catch(err => {\n                dispatch({type: CLOSE_LOGIN_DETAILS});\n\n                history.push(\"/login\")\n                // window.location.href = \"/login\";\n            })\n\n    }\n}\n\n\nexport function checkLoginBeforeCheckout(loginForm) {\n    return dispatch => {\n        axios.post('/users/login', loginForm)\n            .then(res => res.data)\n            .then(data => {\n                    if (data.success === false) {\n                        dispatch({type: SET_INVALID_LOGIN})\n                    } else {\n\n                        const {token} = data;\n                        localStorage.setItem(\"jwtToken\", token);\n                        //Set token to Auth header\n                        setAuthToken(token);\n                        //Decode token to get user data\n                        const decoded = jwt_decode(token);\n                        //Set current user\n                        dispatch(setLoggedUser(decoded._doc));\n\n                        store.dispatch({\n                            type: SET_ID_LOGGED_USER,\n                            payload: {idUser: decoded._doc._id, mail: decoded._doc.email}\n                        });\n\n                        checkSavedCart({idUser: decoded._doc._id});\n\n                        store.dispatch({type: CLOSE_MODAL_UNSUCCESS_ORDER});\n\n                        store.dispatch({type: OPEN_MODAL_FINISH_ORDER_AFTER_LOGIN});\n\n\n                        // const {token} = data;\n                        // localStorage.setItem(\"jwtToken\", token);\n                        //Set token to Auth header\n                        // setAuthToken(token);\n                        //Decode token to get user data\n                        // const decoded = jwt_decode(token);\n                        //Set current user\n                        // dispatch(setLoggedUser(decoded._doc));\n\n\n                        // history.push(link);\n                        // if login is succesfull then add and change info to store of redux\n                    }\n                }\n            )\n            .catch(err => console.log(err))\n    }\n}\n\n\nexport function checkRedirectLogin(loginForm, history, link) {\n    return dispatch => {\n        axios.post('/users/login', loginForm)\n            .then(res => res.data)\n            .then(data => {\n\n                    if (data.success === false) {\n                        dispatch({type: INCORRECT_LOGIN})\n                    } else {\n\n                        const {token} = data;\n                        localStorage.setItem(\"jwtToken\", token);\n                        //Set token to Auth header\n                        setAuthToken(token);\n                        //Decode token to get user data\n                        const decoded = jwt_decode(token);\n                        //Set current user\n                        dispatch(setLoggedUser(decoded._doc));\n                        history.push(link);\n                        // if login is succesfull then add and change info to store of redux\n                    }\n                }\n            )\n            .catch(err => console.log(err))\n    }\n}\n\n\nexport function checkLogin(loginForm) {\n    return dispatch => {\n        axios.post('/users/login', loginForm)\n            .then(res => res.data)\n            .then(data => {\n\n                    if (data.success === false) {\n                        dispatch({type: INCORRECT_LOGIN})\n                    } else {\n                        const {token} = data;\n                        localStorage.setItem(\"jwtToken\", token);\n                        //Set token to Auth header\n                        setAuthToken(token);\n                        //Decode token to get user data\n                        const decoded = jwt_decode(token);\n                        //Set current user\n                        dispatch(setLoggedUser(decoded._doc));\n\n                        store.dispatch({\n                            type: SET_ID_LOGGED_USER,\n                            payload: {idUser: decoded._doc._id, mail: decoded._doc.email}\n                        });\n\n                        checkSavedCart({idUser: decoded._doc._id});\n\n                        // if login is succesfull then add and change info to store of redux\n                    }\n                }\n            )\n            .catch(err => console.log(err))\n    }\n}\n\n\nexport function addNewUser(regForm) {\n    return dispatch => {\n\n        axios.post('/users/register', regForm)\n            .then(res => res.data)\n            .then(data => {\n\n                    if (data.result === false) {\n                        // if email is already used then show in form Message\n                        dispatch({type: EXIST_USER})\n                    } else if (data.firstName) {\n                        // if registration is successfull - close window\n                        dispatch({type: RESET_WINDOW_STATUS})\n                        dispatch({type: OPEN_REG_OK_FORM})\n                    }\n                }\n            )\n            .catch(err => console.log(err))\n    }\n}\n\n\nexport function profileChangePersonal(regForm) {\n    return dispatch => {\n        axios.post('/users/update-profile/personal-info', regForm)\n            .then(res => res.data)\n            .then(data => {\n                    if (data.status === 'exist-email') {\n                        // if email is already used then show in form Message\n                        dispatch({type: PROFILE_EXIST_EMAIL})\n                    } else {\n                        // if registration is successfull - close window\n                        dispatch({\n                            type: PROFILE_CORRECT_PERSONAL_CHANGE,\n                            payload: {userinfo: data.userinfo}\n                        })\n                    }\n                }\n            )\n            .catch(err => console.log(err))\n    }\n}\n\n\nexport function profileChangePassword(regForm) {\n    return dispatch => {\n        axios.post('/users/update-profile/password', regForm)\n            .then(res => res.data)\n            .then(data => {\n\n                    if (data.status === 'incorrect-password') {\n                        // if email is already used then show in form Message\n                        dispatch({type: PROFILE_INCORRECT_PASSWORD_CHANGE})\n                    } else {\n                        // if registration is successfull - close window\n                        dispatch({\n                            type: PROFILE_CORRECT_PASSWORD_CHANGE,\n                        })\n                    }\n                }\n            )\n            .catch(err => console.log(err))\n    }\n}\n","\n\nexport const correctEmail = (input) => {\n\n    const chkEmail = new RegExp(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\n\n    return (chkEmail.test(input)) ? undefined : `You have to enter correct e-mail (example@com.com)`;\n}\n\nexport const cardNumber = (input) => {\n    const chkCardNumber = new RegExp(/^([0-9]{16})$/)\n    return (chkCardNumber.test(input)) ? undefined : `Please enter correct card number`;\n}\n\nexport const cvc = (input) => {\n    const cvc = new RegExp(/^([0-9]{3})$/)\n    return (cvc.test(input)) ? undefined : `Please enter correct CVC`;\n}\n\nexport const dateExp = (input, allInputs) => {\n    let date = allInputs.expiryMonth + '/' + input;\n\n    console.log('date', date);\n\n    const dateExp = new RegExp(/^(0[1-9]|1[0-2])\\/([0-9]{4})$/);\n    return (dateExp.test(date)) ? undefined : `Please enter correct date - MM/YYYY`;\n}\n\nexport const requiredInput = (input) => {\n\n    return input ? undefined : `You have to fill this field`;\n}\n\n\nexport const matchPasswords = (input, allInputs) => {\n    return input === allInputs.newPass ? undefined :'Your entered passwords isn\\'t matched';\n}\n\nexport const matchPasswordsReg = (input, allInputs) => {\n    return input === allInputs.password ? undefined :'Your entered passwords isn\\'t matched';\n}","import React, { Fragment } from 'react';\n\nconst customRequiredInput = (props) => {\n    const {input, type, className, classError, placeholder, meta} = props;\n\n\n    // const errorClass = meta.error ? 'section-profile-content-input section-profile-content-input-error' : 'section-profile-content-input'\n    return (\n        <Fragment>\n            <input {...input} type={type} placeholder={placeholder} className={className}/>\n            {meta.error && meta.touched && <div className={classError}>{meta.error}</div>}\n        </Fragment>\n    )\n}\nexport default customRequiredInput;","import React, {Component} from 'react';\nimport {Field, reduxForm} from 'redux-form';\nimport {requiredInput} from '../../../validation'\nimport customRequiredInput from '../../atomic/customRequiredInput';\n\nclass FormLogin extends Component {\n    render(){\n        const {handleSubmit} = this.props;\n        return (\n            <form onSubmit={handleSubmit} className='login-menu_form' >\n\n                <div className='field-wrapper' >\n                    <label className='login-form-input-title'>E-mail\n                    <Field name=\"email\" component={customRequiredInput}\n                           className='login-form-input'\n                           classError='input-error-message'\n                           type=\"text\" placeholder=\"Your email...\"\n                           validate={[requiredInput]}\n                    />\n</label>\n                    <label className='login-form-input-title'>Password\n                    <Field name=\"password\" component={customRequiredInput}\n                           className='login-form-input'\n                           classError='input-error-message'\n                           type=\"password\" placeholder=\"Your password...\"\n                           validate={[requiredInput]}\n                    /></label>\n                    {/*<p>Forgotten your password?</p>*/}\n                </div>\n\n                <button name='loginSbm' type=\"submit\" className='login-form_btn' label=\"submit\">Log In</button>\n            </form>\n        );\n    }\n}\n\n\n\n\nexport default reduxForm({form: 'formLogin'})(FormLogin);","import React, {Component} from 'react';\n\nimport {connect} from \"react-redux\";\nimport {checkLogin, CLOSE_LOGIN_FORM, CLOSE_REG_FORM, OPEN_LOGIN_FORM, OPEN_REG_FORM} from \"../../../actions/login\";\n\nimport FormLogin from './FormLogin'\n\nimport './LoginForm.scss';\n\nclass LoginForm extends Component {\n\n\n\n    handleSubmit = (values) => {\n\n        let sendLogin = {\n            email: values.email,\n            password: values.password\n        };\n\n        this.props.checkLogin(sendLogin);\n\n    }\n\n\n    render() {\n\n        let classCheckEmail = (this.props.windowsStatus.invalidLogin) ? 'login-menu_error-msg' : 'd-none';\n\n        return (\n            <div className=\"modal-backdrop\">\n                <div className='login-menu'>\n                    <div data-btn=\"btn-login-up-close\" className=\"login-cancel-btn\">x</div>\n                    <h2 className='login-menu_header'>Log in</h2>\n                    <p className='login-menu_par'>Please enter your account details</p>\n\n\n                    <div className={classCheckEmail}>\n                        Invalid Email or password\n                    </div>\n                    <FormLogin onSubmit={this.handleSubmit}/>\n\n                    <div className='registration-area'>\n                        <div id='header-from-login-to-reg' data-btn=\"btn-login-down-close\" className='login-form_btn register_btn'>Register Here\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    };\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        windowsStatus: state.login.windowsStatus,\n        login: state.login\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n\n        checkLogin: (loginForm) => dispatch(checkLogin(loginForm)),\n        openLoginForm: () => {\n            dispatch({ type: OPEN_LOGIN_FORM });\n        },\n        closeLoginForm: () => {\n            console.log('close login')\n            dispatch({type: CLOSE_LOGIN_FORM})\n        },\n\n        openRegForm: () => {\n            dispatch({type: CLOSE_LOGIN_FORM});\n            dispatch({type: OPEN_REG_FORM})\n        },\n        closeRegForm: () => {\n            dispatch({type: CLOSE_REG_FORM})\n        },\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm)","import React, {Component} from 'react';\nimport {Field, reduxForm} from 'redux-form';\nimport {requiredInput, correctEmail, matchPasswordsReg} from '../../../validation'\nimport customRequiredInput from '../../atomic/customRequiredInput';\nimport {connect} from \"react-redux\";\n\nclass FormRegistration extends Component {\n    render() {\n        const {handleSubmit} = this.props;\n        let classExistEmail = (this.props.windowsStatus.existEmail) ? null : 'd-none';\n        return (\n            <form onSubmit={handleSubmit} className='login-menu_form'>\n\n                <div className='login-menu_form-fields'>\n                    <p className='login-form-input-title'>First Name</p>\n                    <Field name=\"firstName\" component={customRequiredInput}\n                           className='login-form-input'\n                           classError='input-error-message'\n                           type=\"text\" placeholder=\"Your first name...\"\n                           validate={[requiredInput]}\n                    />\n\n                    <p className='login-form-input-title'>Last Name</p>\n                    <Field name=\"secondName\" component={customRequiredInput}\n                           className='login-form-input'\n                           classError='input-error-message'\n                           type=\"text\" placeholder=\"Your last name...\"\n                           validate={[requiredInput]}\n                    />\n                    <div className={classExistEmail}>\n                        This email is already used\n                    </div>\n                    <p className='login-form-input-title'>Email Address</p>\n                    <Field name=\"email\" component={customRequiredInput}\n                           className='login-form-input'\n                           classError='input-error-message'\n                           type=\"email\" placeholder=\"Your email...\"\n                           validate={[requiredInput, correctEmail]}\n                    />\n                    <p className='login-form-input-title'>Password</p>\n                    <Field name=\"password\" component={customRequiredInput}\n                           className='login-form-input'\n                           classError='input-error-message'\n                           type=\"password\" placeholder=\"Your password...\"\n                           validate={[requiredInput]}\n                    />\n                    <p className='login-form-input-title'>Confirm Password</p>\n                    <Field name=\"password2\" component={customRequiredInput}\n                           className='login-form-input'\n                           classError='input-error-message'\n                           type=\"password\" placeholder=\"Your password...\"\n                           validate={[requiredInput, matchPasswordsReg]}\n                    />\n\n\n\n                </div>\n                <button name='registrationSbm' type=\"submit\" className='login-form_btn'\n                        label=\"submit\">Register\n                </button>\n            </form>\n    );\n    }\n    }\n\n\n    const mapStateToProps = (state) => {\n        return {\n        windowsStatus: state.login.windowsStatus,\n    }\n    }\n\n    FormRegistration = reduxForm({\n        form: 'formRegistration'\n    })(FormRegistration);\n\n    export default connect(mapStateToProps)(FormRegistration);","import React, {Component} from 'react';\n\n\nimport {connect} from 'react-redux'\nimport {addNewUser, CLOSE_REG_FORM, OPEN_LOGIN_FORM} from '../../../actions/login'\n\nimport FormRegistration from './FormRegistration'\n\nimport './RegistrationForm.scss';\n\nclass RegistrationForm extends Component {\n\n\n    handleSubmit = (values) => {\n\n        let newForm = {\n\n            firstName: values.firstName,\n            secondName: values.secondName,\n            email: values.email,\n            password: values.password,\n            password2: values.password2,\n        };\n\n        this.props.addNewUser(newForm);\n\n    }\n\n\n\n    render() {\n\n        // let classSecondPass = (this.checkPassValidation()) ? 'registration-input registration-form-input-grey' : 'registration-input registration-form-input-red';\n        let classExistEmail = (this.props.windowsStatus.existEmail) ? null : 'd-none';\n\n        return (\n            <div className=\"modal-backdrop\">\n            <div className='login-menu'>\n                <div data-btn=\"btn-reg-up-close\" className=\"login-cancel-btn\">x</div>\n                <h2 className='login-menu_header'>Registration</h2>\n                <FormRegistration onSubmit={this.handleSubmit}/>\n\n\n                <div className='registration-area'>\n                    <div data-btn=\"btn-reg-down-close\" className='login-form_btn register_btn' >Login Here</div>\n                </div>\n            </div>\n            </div>\n        );\n    };\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        windowsStatus: state.login.windowsStatus,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        closeRegForm: () => {\n            dispatch({type: CLOSE_REG_FORM})\n        },\n        openLoginForm: () => {\n            dispatch({type: CLOSE_REG_FORM});\n            dispatch({type: OPEN_LOGIN_FORM});\n        },\n        addNewUser: (regForm) => dispatch(addNewUser(regForm))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RegistrationForm)","import React, {Component} from 'react'\n\n\nclass RegistrationOk extends Component {\n\n    render() {\n\n        return (\n            <>\n                <div className=\"login-menu login-menu-block\">\n\n                    <h2 className=\"login-menu_header\">Successfull registration</h2>\n                    <p className=\"login-menu_par\">\n                        You were successfully registered on our site. We sent you e-mail with link to verify your account.\n                        Please read email and click to link for finish registration.\n                    </p>\n                    <p className=\"login-menu_par\">\n                        Thank you!\n                    </p>\n\n                    <div data-btn=\"btn-reg-ok-down-close\" className='login-form_btn register_btn'>Ok\n                    </div>\n                </div>\n\n            </>\n        )\n    }\n}\n\nexport default RegistrationOk","// @flow\n\nimport * as React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport {\n  focusSearchInput,\n  validateSearchValue,\n  clearSearchInput,\n  search\n} from \"../../actions/search\";\n\nimport \"./search.scss\";\n\ntype Props = {\n  validateSearchValue: Function,\n  focusSearchInput: Function,\n  products: Array<Object>,\n  isSearchFetching: boolean,\n  nonValid: boolean,\n  clearSearchInput: Function,\n  searchString: Function,\n  search: Function,\n  focus: Function\n};\n\nclass Search extends React.Component<Props> {\n  render() {\n    const {\n      search,\n      searchString,\n      focus,\n      clearSearchInput,\n      nonValid,\n      isSearchFetching,\n      products,\n      focusSearchInput,\n      validateSearchValue\n    } = this.props;\n\n    return (\n      <div className=\"search-input-wrapper\">\n        <div className=\"search-input\">\n          <span className=\"clearable\">\n            <input\n              type=\"text\"\n              style={focus ? { width: \"420px\" } : { width: \"185px\" }}\n              className=\"main-search\"\n              name=\"search\"\n              placeholder=\"Search\"\n              value={searchString}\n              onChange={e => search(e.target.value)}\n              onFocus={focusSearchInput}\n              onKeyPress={e => validateSearchValue(e)}\n            />\n            <i\n              className={\n                searchString.length > 0\n                  ? \"clearable__clear\"\n                  : \"clearable__clear-hide\"\n              }\n              onClick={e => {\n                clearSearchInput(e);\n                search(\"\");\n              }}\n            >\n              &times;\n            </i>\n          </span>\n          {isSearchFetching ? (\n            <div className=\"search-preloader\" />\n          ) : (\n            <div className=\"search-preloader search-preloader-hide\" />\n          )}\n        </div>\n        {nonValid ? (\n          <div className=\"non-valid-search\">\n            Symbols \"&amp;/,*$\" etc. are not allowed. Use space instead\n          </div>\n        ) : products.length < 1 &&\n          searchString.length > 1 &&\n          !isSearchFetching ? (\n          <div className=\"non-valid-search\">\n            No products found matching{\" \"}\n            <span className=\"match-words\">{searchString}</span>\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    searchString: state.search.searchString,\n    focus: state.search.focus,\n    nonValid: state.search.nonValid,\n    isSearchFetching: state.search.isSearchFetching,\n    products: state.search.products\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  {\n    focusSearchInput,\n    validateSearchValue,\n    clearSearchInput,\n    search\n  }\n)(Search);\n","import React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport {NavLink} from \"react-router-dom\";\nimport {withRouter} from \"react-router-dom\";\n\nimport LoginForm from \"./LoginForm\";\nimport RegistrationForm from \"./RegistrationForm\";\nimport RegistrationOk from \"./RegistrationOk\";\nimport userLogo from \"./../../img/user-solid.svg\";\n\nimport {\n    OPEN_LOGIN_FORM,\n    OPEN_LOGIN_DETAILS,\n    CLOSE_LOGIN_DETAILS,\n    CLOSE_LOGIN_FORM, CLOSE_REG_FORM, OPEN_REG_FORM,\n    LOGOUT_JWT_CURRENT_USER, unsetLoggedUser, goToProfile\n} from \"../../actions/login\";\n\nimport Search from \"../Search\";\nimport {faCogs} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport \"./authorization.scss\";\n\nclass TopBlockAuth extends Component {\n    componentDidMount() {\n    }\n    closeModal = () => {\n        this.setState({\n            modalFormOpen: false,\n        })\n    }\n\n    clickOnLogin = () => {\n        this.props.openLoginForm();\n    }\n\n    clickOnRegistration = () => {\n        this.props.openRegForm();\n    }\n\n    handleLoginForm = (e) => {\n\n\n        if (e.target.dataset.btn !== 'btn-login-up-close') {\n            e.stopPropagation();\n        }\n        if (e.target.dataset.btn === 'btn-login-down-close') {\n            this.props.closeLoginForm();\n            this.closeModal();\n            this.clickOnRegistration();\n        }\n    }\n\n    handleRegistrationForm = (e) => {\n        if (e.target.dataset.btn !== 'btn-reg-up-close') {\n            e.stopPropagation();\n        }\n        if (e.target.dataset.btn === 'btn-reg-down-close') {\n            this.props.closeRegForm();\n            this.closeModal();\n            this.clickOnLogin();\n        }\n    }\n\n    handleRegistrationOk = (e) => {\n        if (e.target.dataset.btn !== 'btn-reg-ok-down-close') {\n            e.stopPropagation();\n        }\n    }\n\n    handleDropDownProfile = (e) => {\n    }\n\n    render() {\n\n        let isLogged = this.props.login.isLogged ? null : \"d-none\";\n        let notLogged = !this.props.login.isLogged ? null : \"d-none\";\n        let isCartNotEmpty = this.props.amountCart ? 'product-cart-ico-amount' : \"d-none\";\n\n        return (\n            <div className=\"header-right-block\">\n                <Search/>\n                <div className=\"main-date\">\n                    <div className={notLogged}>\n                        <input\n                            type=\"button\"\n                            className=\"header-top-login-btn\"\n                            value=\"Log in\"\n                            onClick={() => this.clickOnLogin()}/>\n                    </div>\n\n                    <div className={isLogged}>\n                        <div className=\"user-info-mini\">\n                            <span className=\"user-name\">\n                                {this.props.login.loggedData.firstName}\n                            </span>\n                            <div className=\"user-avatar-mini\">\n                                <img\n                                    className=\"user-avatar-mini-img\"\n                                    // src=\"/img/profile_logo.png\"\n                                    //     src=\"/img/logo-test.png\"\n                                    src={userLogo}\n                                    alt=\"icon-account\"\n                                    onClick={() => this.props.openLoginDetails()}\n                                />\n\n                                <div onClick={this.handleDropDownProfile}>\n                                    {this.props.windowsStatus.loginDetails && (\n                                        <div className=\"header-dropdown-login-details\">\n                                            <NavLink\n                                                className=\"header-dropdown-login-details-item\"\n                                                to=\"/users/profile/personalContent\"\n                                                // onClick={() => this.props.goToProfile(this.props.history)}\n                                            >\n                                                Profile\n                                            </NavLink>\n                                            <NavLink\n                                                className=\"header-dropdown-login-details-item\"\n                                                to=\"/users/profile/ordersHistory\"\n                                                // onClick={() => this.props.goToProfile(this.props.history)}\n                                            >\n                                                My Orders\n                                            </NavLink>\n                                            <NavLink\n                                                className=\"header-dropdown-login-details-item\"\n                                                to=\"/\"\n                                                onClick={() => this.props.unsetLoggedUser()}\n                                            >\n                                                Logout\n                                            </NavLink>\n                                        </div>\n                                    )}\n                                </div>\n\n                            </div>\n                        </div>\n                    </div>\n\n\n                    <div className=\"product-cart-ico\">\n                        <NavLink to=\"/cart\">\n                            <img src=\"/img/shopping-cart-solid.svg\" alt=\"icon basket\"/>\n                            <p className={isCartNotEmpty}>{this.props.amountCart}</p>\n                        </NavLink>\n                    </div>\n\n\n                    <div className={`admin-dashboard ${(this.props.login.loggedData.isAdmin) ? null : 'd-none'}`}>\n                        <NavLink className=\"admin-dashboard-link\" to=\"/admin/dashboard\">\n                            <FontAwesomeIcon icon={faCogs}/>\n                        </NavLink>\n                    </div>\n                </div>\n\n                <div id=\"header-modal-form\">\n                    <div onClick={this.handleLoginForm}>\n                        {this.props.windowsStatus.formLoginOpen && (\n                            <LoginForm/>\n                        )}\n                    </div>\n\n                    <div onClick={this.handleRegistrationForm}>\n                        {this.props.windowsStatus.formRegisterOpen && (\n                            <RegistrationForm/>\n                        )}\n                    </div>\n\n                    <div onClick={this.handleRegistrationOk}>\n                        {this.props.windowsStatus.formRegistrationOk && (\n                            <RegistrationOk/>\n                        )}\n                    </div>\n\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        windowsStatus: state.login.windowsStatus,\n        login: state.login,\n        amountCart: state.cart.amountInBasket,\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        openLoginForm: () => {\n            dispatch({type: OPEN_LOGIN_FORM});\n        },\n        closeLoginForm: () => {\n            dispatch({type: CLOSE_LOGIN_FORM})\n        },\n        openLoginDetails: () => {\n            dispatch({type: OPEN_LOGIN_DETAILS});\n        },\n        closeLoginDetails: () => {\n            dispatch({type: CLOSE_LOGIN_DETAILS});\n        },\n        openRegForm: () => {\n            dispatch({type: CLOSE_LOGIN_FORM});\n            dispatch({type: OPEN_REG_FORM})\n        },\n        closeRegForm: () => {\n            dispatch({type: CLOSE_REG_FORM})\n        },\n        logout: () => {\n            dispatch({type: LOGOUT_JWT_CURRENT_USER});\n        },\n        unsetLoggedUser: () => dispatch(unsetLoggedUser()),\n        goToProfile: (history) => dispatch(goToProfile(history))\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withRouter(TopBlockAuth));\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport {\n  getNavMenuItems,\n  openSubMenu,\n  closeSubMenu\n} from \"../../../actions/navMenuActions\";\n\nimport {\n  selectFilters,\n  selectSize,\n  clearProductList\n} from \"../../../actions/filterActions\";\n\nimport \"./nav-menu.scss\";\n\nclass NavMenu extends Component {\n  // Calling action-creator for getting from server object with Navigation Menu Items\n  componentDidMount() {\n    this.props.getNavMenuItems();\n  }\n\n  initiateCategoryFilters = (\n    newCategory,\n    newSubCategory,\n    newFurtherSubCategory\n  ) => {\n    let { currentFilters } = this.props;\n\n    this.props.clearProductList();\n\n    this.props.selectSize(null);\n\n    this.props.selectFilters(currentFilters, {\n      category: newCategory,\n      subCategory: newSubCategory,\n      furtherSubCategory: newFurtherSubCategory,\n      colorName: undefined,\n      size: undefined,\n      price: { min: 5, max: 1000 },\n      pageNo: 1\n    });\n  };\n\n  render() {\n    // Creating the category list (men, women)\n    let menuList = this.props.navMenuItems.map(e => {\n      if (e.active) {\n        return (\n          <li\n            className=\"main-menu-item\"\n            key={e._id}\n            onMouseOver={() => this.props.openSubMenu(e.categoryName)}\n            onClick={() => {\n              this.initiateCategoryFilters(e.categoryName);\n              this.props.closeSubMenu();\n            }}\n          >\n            <Link to={e.categoryUrl} className=\"main-menu-link\">\n              {e.categoryName}\n            </Link>\n          </li>\n        );\n      }\n      return null;\n    });\n\n    // Creating list of subcategories (e.g. clothing) and further subcategories (e.g. shirts, pants)\n    let subMenuList = this.props.navMenuItems.map(category => {\n      if (category.categoryName === this.props.currentOnMouseOverCategory) {\n        return category.subCategoryList.map(subCategory => {\n          // further subcategories (e.g. shirts, pants)\n          let subfurtherSubCategory = subCategory.furtherSubCategoryList.map(\n            furtherSubCategory => {\n              if (furtherSubCategory.active) {\n                return (\n                  <li\n                    className=\"sub-menu-category-item\"\n                    key={furtherSubCategory._id}\n                  >\n                    <Link\n                      to={furtherSubCategory.furtherSubCategoryUrl}\n                      className=\"sub-menu-category-link\"\n                      onClick={() => {\n                        this.initiateCategoryFilters(\n                          category.categoryName,\n                          subCategory.subCategoryName,\n                          furtherSubCategory.furtherSubCategoryName\n                        );\n                        this.props.closeSubMenu();\n                      }}\n                    >\n                      {furtherSubCategory.furtherSubCategoryName}\n                    </Link>\n                  </li>\n                );\n              }\n              return null;\n            }\n          );\n\n          // subcategories (e.g. clothing)\n          if (subCategory.active) {\n            return (\n              <div className=\"sub-menu-left-list\" key={subCategory._id}>\n                <Link\n                  to={subCategory.subCategoryUrl}\n                  className=\"sub-menu-left-title\"\n                  onClick={() => {\n                    this.initiateCategoryFilters(\n                      category.categoryName,\n                      subCategory.subCategoryName\n                    );\n                    this.props.closeSubMenu();\n                  }}\n                >\n                  {subCategory.subCategoryName.charAt(0).toUpperCase() +\n                    subCategory.subCategoryName.slice(1)}\n                </Link>\n                <ul className=\"sub-menu-category-list\">\n                  {subfurtherSubCategory}\n                </ul>\n              </div>\n            );\n          }\n        });\n      }\n      return null; // to return a value at the end of arrow function as it is expected\n    });\n\n    let subMenuSection = (\n      <section\n        className=\"sub-menu-wrapper\"\n        onMouseLeave={this.props.closeSubMenu}\n      >\n        <div className=\"container\">\n          <div className=\"sub-menu-wrapper-inner\">\n            <div className=\"sub-menu-left\">{subMenuList}</div>\n          </div>\n        </div>\n      </section>\n    );\n\n    let miniPreloader = <div className=\"minipreloader\" />;\n\n    // Rendering the whole component\n    return (\n      <>\n        <ul className=\"main-menu-list\">\n          {this.props.isMenuFetching ? miniPreloader : menuList}\n        </ul>\n\n        {this.props.navMenuWindowStatus ? subMenuSection : null}\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    navMenuItems: state.navMenu.navMenuItems,\n    isMenuFetching: state.navMenu.isMenuFetching,\n    navMenuWindowStatus: state.navMenu.navMenuWindowStatus,\n    currentOnMouseOverCategory: state.navMenu.currentOnMouseOverCategory,\n    currentFilters: state.filters.selected\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  {\n    getNavMenuItems,\n    openSubMenu,\n    closeSubMenu,\n    selectFilters,\n    selectSize,\n    clearProductList\n  }\n)(NavMenu);\n","import React, { Component } from \"react\";\n\nimport { NavLink } from \"react-router-dom\";\n\nimport TopBlockAuth from \"../TopBlockAuth\";\nimport NavMenu from \"./NavMenu\";\n\nimport \"./header.scss\";\n\nimport logo from \"../../img/matter.svg\";\n\nclass Header extends Component {\n  render() {\n    return (\n      <header className=\"main-header\">\n        <div className=\"container\">\n          <div className=\"header-content\">\n            <NavLink to=\"/\" className=\"logo\">\n              <img src={logo} alt=\"Matter\" />\n            </NavLink>\n            <NavMenu />\n            <TopBlockAuth />\n          </div>\n        </div>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","import React, {Component} from \"react\";\nimport {Link, NavLink} from \"react-router-dom\";\nimport logo from \"../../img/matter-white.svg\";\nimport axios from \"axios\";\nimport \"./footer.scss\";\n\nclass Footer extends Component {\n    state = {\n        content: []\n    };\n\n    componentDidMount() {\n        axios.get(`/get-footer`).then(res => {\n            this.setState({content: res.data});\n        });\n    }\n\n    render() {\n        const footerContent = this.state.content.map(elem => {\n            const linksList = elem.links.map(link => {\n                return (\n                    <ul className=\"footer-column-list\" >\n                        <li key={elem._id} className=\"footer-column-item\">\n                            <NavLink\n                                to={link.path}\n                                className=\"footer-column-link\"\n                                activeClassName=\"footer-column-link\"\n                            >\n                                {link.title}\n                            </NavLink>\n                        </li>\n                    </ul>\n                );\n            });\n\n            return (\n                <div className=\"footer-menu-column\">\n                    <h3 className=\"footer-menu-column-title\">{elem.title}</h3>\n                    {linksList}\n                </div>\n            );\n        });\n\n        return (\n            <footer className=\"main-footer\">\n                <div className=\"container\">\n                    <div className=\"footer-list\">\n                        <div className=\"footer-column\">\n                            <Link to=\"/\" className=\"footer-logo\">\n                                <img src={logo} alt=\"logo\"/>\n                            </Link>\n                        </div>\n                        <div className=\"footer-menu\">{footerContent}</div>\n                    </div>\n                </div>\n            </footer>\n        );\n    }\n}\n\nexport default Footer;\n","import React, {Component} from \"react\";\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\nimport {Carousel} from \"react-responsive-carousel\";\nimport \"./products-carousel.scss\";\nimport {NavLink} from \"react-router-dom\";\nimport axios from 'axios';\n\nclass ProductsCarousel extends Component {\n    state = {\n        dbCarousel: []\n    };\n\n    componentDidMount() {\n        axios.get(`/carousel`).then(res => {\n            this.setState({dbCarousel: res.data});\n        });\n    }\n\n    render() {\n        let itemsCarousel = this.state.dbCarousel.map(item => {\n            return (\n                <div id={item.desc} key={item._id} className=\"carousel-item\">\n                    <img src={item.imageUrl} alt=\"product\"/>\n                    <div className=\"price\">${item.product.currentPrice}</div>\n                    <div className=\"info\">{item.product.model}</div>\n                    <NavLink key={item.product._id} to={item.product.productUrl} className=\"carousel-btn\"\n                             onClick={() => this.setState.dbCarousel = []}>Show more</NavLink>\n                </div>\n            );\n        });\n\n        return (\n            <Carousel\n                className=\"products-carousel\"\n                autoPlay={true}\n                interval={5000}\n                transitionTime={700}\n                stopOnHover={true}\n                showIndicators={false}\n                infiniteLoop={true}\n                showStatus={false}\n                useKeyboardArrows={true}\n            >\n                {itemsCarousel}\n            </Carousel>\n        );\n    }\n}\n\nexport default ProductsCarousel;\n","// @flow\n\nimport * as React from \"react\";\nimport \"./subscribe.scss\";\nimport axios from \"axios\";\n\ntype Props = {};\n\ntype State = {\n  mail: string\n};\nclass Subscribe extends React.Component<Props, State> {\n  state = {\n    mail: \"\"\n  };\n\n  handleChange = (e: Object) => {\n    this.setState({ mail: e.target.value });\n  };\n\n  sendMail = (e: Object) => {\n    e.preventDefault();\n    const subMail = {\n      mail: this.state.mail\n    };\n    axios.post(\"/subscribe\", { subMail });\n    this.setState({ mail: \"\" });\n  };\n\n  render() {\n    return (\n      <>\n        <section className=\"section-subscribe\">\n          <div className=\"container\">\n            <div className=\"subscribe\">\n              <h2 className=\"subscribe-title\">Subscribe</h2>\n              <div className=\"subscribe-description\">\n                Get the day’s top news stories delivered to your inbox\n              </div>\n              <form onSubmit={this.sendMail} className=\"subscribe-form\">\n                <input\n                  onChange={this.handleChange}\n                  id=\"subscribe-mail\"\n                  type=\"text\"\n                  className=\"subscribe-email\"\n                  placeholder=\"Enter your email here...\"\n                  value={this.state.mail}\n                />\n                <input\n                  id=\"subscribe-btn\"\n                  type=\"submit\"\n                  className=\"subscribe-btn\"\n                  value=\"SUBSCRIBE\"\n                />\n              </form>\n            </div>\n          </div>\n        </section>\n      </>\n    );\n  }\n}\n\nexport default Subscribe;\n","// @flow\n\nimport * as React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { saveProductDetails } from \"../../actions/product\";\n\ntype Props = {\n  productUrl: string,\n  id: string,\n  imageUrl: string,\n  model: string,\n  colorName: string,\n  currentPrice: number,\n  previousPrice: number,\n  saveProductDetails: Function\n};\n\nclass ProductCard extends React.Component<Props> {\n  render() {\n    let {\n      productUrl,\n      id,\n      imageUrl,\n      model,\n      colorName,\n      currentPrice,\n      previousPrice\n    } = this.props;\n\n    model = model\n      .split(\" \")\n      .map(word => {\n        return word.charAt(0).toUpperCase() + word.slice(1);\n      })\n      .join(\" \");\n\n    return (\n      <NavLink\n        to={productUrl}\n        key={id}\n        className=\"product-item\"\n        onClick={() => this.props.saveProductDetails(colorName)}\n      >\n        <img src={imageUrl} alt={model} className=\"product-img\" />\n        <p className=\"product-name\">{`${model} (${colorName})`}</p>\n        <p className=\"product-price\">{`$${currentPrice}`}</p>\n        {previousPrice ? (\n          <span className=\"previous-price\"> {`$${previousPrice}`} </span>\n        ) : null}\n      </NavLink>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    saveProductDetails: data => dispatch(saveProductDetails(data))\n  };\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(ProductCard);\n","import React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport {getProductPopular} from \"../../actions/product\";\nimport \"./ProductListing.scss\";\nimport ProductCard from \"../ProductCard\";\n\n\nclass ProductListing extends Component {\n    componentDidMount() {\n        this.props.getProductPopular();\n    }\n\n    render() {\n\n        let counterItems = 0;\n        let listProduct = [];\n        if (this.props.productPopularListing) {\n            listProduct = this.props.productPopularListing.map(productItem => {\n\n                return productItem.productFeatures.map(productFeatures => {\n                    counterItems++;\n\n                    if (counterItems <= this.props.children){\n                        return (\n                            <ProductCard\n                                productUrl={productItem.productUrl}\n                                key={productItem._id}\n                                imageUrl={productFeatures.imageUrls[0]}\n                                model={productItem.model}\n                                colorName={productFeatures.colorName}\n                                currentPrice={productItem.currentPrice}\n                                previousPrice={productItem.previousPrice}\n                                currentFilters={productItem}\n                            />\n                        )}\n                    return null;\n                })\n            })\n        }\n\n        return (\n            <div className=\"listing-products\">\n                {this.props.isProductPopularListing ? <div>Loading...</div> : listProduct}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        productPopularListing: state.product.productPopularListing,\n        isProductPopularListing: state.product.isProductPopularListing\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        // getProductItem: () => dispatch(getProductItem()),\n        getProductPopular: () => dispatch(getProductPopular()),\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductListing);\n","import React, { Component } from \"react\";\n\nimport \"./preloader.scss\";\n\nclass Preloader extends Component {\n  render() {\n    return <div className=\"universal-preloader\" />;\n  }\n}\n\nexport default Preloader;\n","import React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport {getCategoryItem} from \"../../actions/categoryCarousel\";\nimport {NavLink} from \"react-router-dom\";\nimport Preloader from \"../Preloader\";\nimport \"./CategoryCarousel.scss\";\n\nclass CategoryCarousel extends Component {\n    componentDidMount() {\n        this.props.getCategoryItem();\n    }\n\n    render() {\n        let listCategories = this.props.categoriesList.map(item => {\n            return (\n                    <NavLink key={item._id} to={item.categoryUrl} className=\"category-item\">\n                        <img src={item.categoryImg} alt={item.categoryName} className=\"category-img\"/>\n                        <div className=\"category-name\">{item.categoryName}</div>\n                        <div className=\"category-link\">shop now</div>\n                    </NavLink>\n            )\n        })\n        return (\n            <>\n                <section className=\"shop-category\">\n                    <div className=\"container\">\n                        <h2 className=\"category-title\">Most popular categories</h2>\n                        <div className=\"category-listing\">\n                            {this.props.isCategoriesFetching ? <Preloader/> : listCategories}\n                        </div>\n                    </div>\n                </section>\n            </>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        categoriesList: state.categoryCarousel.categoriesList,\n        isCategoriesFetching: state.categoryCarousel.isCategoriesFetching\n    }\n}\n\nexport default connect(mapStateToProps, {getCategoryItem})(CategoryCarousel);","import React, {Component} from \"react\";\nimport \"./ScrollBtn.scss\"\n\nexport default class ScrollBtn extends Component {\n    state = {\n        intervalId: 0\n    };\n    scrollStep() {\n        if (window.pageYOffset === 0) {\n            clearInterval(this.state.intervalId);\n        }\n        window.scroll(0, window.pageYOffset - this.props.scrollStepInPx);\n        // window.scroll(0, 0);\n    }\n    scrollToTop() {\n        let intervalId = setInterval(()=> this.scrollStep(), this.props.delayInMs);\n        this.setState({\n            intervalId: intervalId\n        });\n    }\n\n    render() {\n        return (\n            <button title=\"Back to top\" className=\"scroll\"\n                    onClick={() => {\n                        this.scrollToTop();\n                    }}>&#8593;\n            </button>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport AutosuggestHighlightMatch from \"autosuggest-highlight/match\";\nimport AutosuggestHighlightParse from \"autosuggest-highlight/parse\";\n\nimport { closeSearchResults } from \"../../actions/search\";\nimport { getProductDetails } from \"../../actions/productDetails\";\nimport { resetColor } from \"../../actions/product\";\n\nimport \"./searchResultItem.scss\";\n\nclass SearchResultItem extends Component {\n  render() {\n    const {\n      products,\n      searchString,\n      closeSearchResults,\n      getProductDetails,\n      resetColor\n    } = this.props;\n\n    let searchedProductList = products.map(product => {\n      let productColors = product.productFeatures.map(color => {\n        return (\n          <li\n            className=\"search-result-item-colors-item\"\n            title={color.colorName}\n            key={color._id}\n            style={{ backgroundColor: color.color }}\n          />\n        );\n      });\n\n      let productSizes = [];\n\n      product.productFeatures.forEach(color => {\n        color.sizes.forEach(size => {\n          if (size.quantity > 0) {\n            productSizes.push(size.size);\n          }\n        });\n      });\n\n      let uniqueProductSizes = [...new Set(productSizes)];\n\n      // Rendering category matches\n      let categoryMatches = AutosuggestHighlightMatch(\n        product.category,\n        searchString\n      );\n      let categoryParts = AutosuggestHighlightParse(\n        product.category,\n        categoryMatches\n      );\n\n      let categoryMatched = categoryParts.map((part, index) => {\n        const className = part.highlight ? \"match\" : null;\n        return (\n          <span className={className} key={index}>\n            {part.text}\n          </span>\n        );\n      });\n\n      // Rendering sub-category matches\n      let subCategoryMatches = AutosuggestHighlightMatch(\n        product.subCategory,\n        searchString\n      );\n      let subCategoryParts = AutosuggestHighlightParse(\n        product.subCategory,\n        subCategoryMatches\n      );\n\n      let subCategoryMatched = subCategoryParts.map((part, index) => {\n        const className = part.highlight ? \"match\" : null;\n        return (\n          <span className={className} key={index}>\n            {part.text}\n          </span>\n        );\n      });\n\n      // Rendering further sub-category matches\n      let furtherSubCategoryMatches = AutosuggestHighlightMatch(\n        product.furtherSubCategory,\n        searchString\n      );\n      let furtherSubCategoryParts = AutosuggestHighlightParse(\n        product.furtherSubCategory,\n        furtherSubCategoryMatches\n      );\n\n      let furtherSubCategoryMatched = furtherSubCategoryParts.map(\n        (part, index) => {\n          const className = part.highlight ? \"match\" : \"unmatched-text\";\n          return (\n            <span className={className} key={index}>\n              {part.text}\n            </span>\n          );\n        }\n      );\n\n      // Rendering model name matches\n      let model = product.model\n        .split(\" \")\n        .map(word => {\n          return word.charAt(0).toUpperCase() + word.slice(1);\n        })\n        .join(\" \");\n\n      let modelMatches = AutosuggestHighlightMatch(model, searchString);\n      let modelParts = AutosuggestHighlightParse(model, modelMatches);\n\n      let modelMatched = modelParts.map((part, index) => {\n        const className = part.highlight ? \"match\" : \"unmatched-text\";\n        return (\n          <span className={className} key={index}>\n            {part.text}\n          </span>\n        );\n      });\n\n      // Rendering itemNo matches\n      let itemNoMatches = AutosuggestHighlightMatch(\n        product.itemNo,\n        searchString\n      );\n      let itemNoParts = AutosuggestHighlightParse(\n        product.itemNo,\n        itemNoMatches\n      );\n\n      let itemNoMatched = itemNoParts.map((part, index) => {\n        const className = part.highlight ? \"match\" : \"unmatched-text\";\n        return (\n          <span className={className} key={index}>\n            {part.text}\n          </span>\n        );\n      });\n\n      // Rendering size matches\n      let sizeMatches = AutosuggestHighlightMatch(\n        uniqueProductSizes.join(\", \"),\n        searchString\n      );\n      let sizeParts = AutosuggestHighlightParse(\n        uniqueProductSizes.join(\", \"),\n        sizeMatches\n      );\n\n      let sizeMatched = sizeParts.map((part, index) => {\n        const className = part.highlight ? \"match\" : \"unmatched-text\";\n        return (\n          <span className={className} key={index}>\n            {part.text}\n          </span>\n        );\n      });\n\n      return (\n        <li\n          className=\"search-result-item\"\n          key={product._id}\n          onClick={closeSearchResults}\n        >\n          <Link\n            to={product.productUrl}\n            className=\"search-result-link\"\n            onClick={() => {\n              getProductDetails({\n                category: product.category,\n                subCategory: product.subCategory,\n                furtherSubCategory: product.furtherSubCategory,\n                id: product.itemNo\n              });\n              resetColor();\n            }}\n          >\n            <div className=\"search-result-item-content\">\n              <div className=\"search-result-item-image-wrapper\">\n                <img\n                  className=\"search-result-item-image\"\n                  src={product.productFeatures[0].imageUrls[0]}\n                  alt=\"Not available\"\n                />\n              </div>\n              <div className=\"search-result-item-desc\">\n                <span className=\"search-result-item-cats\">\n                  <span className=\"search-result-item-subheading\">\n                    Categories:\n                  </span>{\" \"}\n                  <span>\n                    {categoryMatched} / {subCategoryMatched} / &nbsp;\n                    {furtherSubCategoryMatched}\n                  </span>\n                </span>\n                <span className=\"search-result-item-model\">\n                  <span className=\"search-result-item-subheading\">\n                    Model name:{\" \"}\n                  </span>\n                  {modelMatched}\n                </span>\n                <div className=\"search-result-item-colors\">\n                  <span className=\"search-result-item-subheading\">Colors:</span>\n                  <ul className=\"search-result-item-colors-list\">\n                    {productColors}\n                  </ul>\n                </div>\n                <span className=\"search-result-item-sizes\">\n                  <span className=\"search-result-item-subheading\">Sizes: </span>{\" \"}\n                  <span className=\"search-result-item-sizes-values\">\n                    {sizeMatched}\n                  </span>\n                </span>\n              </div>\n              <div className=\"search-result-item-price\">\n                <span className=\"search-result-item-id\">\n                  <span className=\"search-result-item-subheading\">\n                    Product ID:{\" \"}\n                  </span>{\" \"}\n                  <span className=\"search-result-item-id-value\">\n                    {itemNoMatched}\n                  </span>\n                </span>\n                <span className=\"search-result-item-subheading\">Price: </span>\n                <span className=\"search-result-item-price-current\">\n                  {`$${product.currentPrice}`}{\" \"}\n                </span>\n                {product.previousPrice ? (\n                  <span className=\"search-result-item-price-previous\">\n                    {`$${product.previousPrice}`}\n                  </span>\n                ) : (\n                  <span className=\"no-discounts\">No discounts</span>\n                )}\n              </div>\n            </div>\n          </Link>\n        </li>\n      );\n    });\n\n    return <>{searchedProductList}</>;\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    products: state.search.products,\n    searchString: state.search.searchString,\n    closeResults: state.search.closeResults\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { closeSearchResults, getProductDetails, resetColor }\n)(SearchResultItem);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport SearchResultItem from \"../SearchResultItem\";\n\nimport \"./searchDropDownList.scss\";\n\nclass SearchDropDownList extends Component {\n  render() {\n    const { products, closeResults } = this.props;\n    return (\n      <div\n        className={\n          products.length > 0 && !closeResults\n            ? \"search-results-wrapper\"\n            : \"search-results-wrapper-hide\"\n        }\n      >\n        <ul className=\"search-results-list\">\n          <SearchResultItem />\n        </ul>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    products: state.search.products,\n    closeResults: state.search.closeResults\n  };\n};\n\nexport default connect(mapStateToProps)(SearchDropDownList);\n","import React, { Component } from \"react\";\nimport ProductsCarousel from \"../ProductsCarousel\";\nimport Subscribe from \"../Subscribe\";\nimport ProductListing from \"../ProductListing\";\nimport CategoryCarousel from \"../CategoryCarousel\";\nimport ScrollBtn from \"../ScrollBtn\";\nimport \"./MainPage.scss\";\n\nimport SearchDropDownList from \"../SearchDropDownList\";\n\nclass MainPage extends Component {\n  render() {\n    return (\n      <>\n          <ScrollBtn scrollStepInPx=\"100\" delayInMs=\"12\"/>\n        <SearchDropDownList />\n        <ProductsCarousel />\n\n        <section className=\"section-listing-products\">\n          <div className=\"container\">\n            <div className=\"listing listing-main\">\n              <h2 className=\"listing-title\">Most popular items</h2>\n              <ProductListing children={8} />\n            </div>\n          </div>\n        </section>\n        <CategoryCarousel/>\n        <Subscribe />\n      </>\n    );\n  }\n}\n\nexport default MainPage;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { SET_COLOR, SET_IMG } from \"../../../actions/addToCart\";\nimport ReactImageMagnify from \"react-image-magnify\";\n\nimport \"./photo-gallery.scss\";\n\nclass PhotoGallery extends Component {\n  state = {\n    index: 0\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    let urlPhoto = \"\";\n    this.props.productFeatures.forEach(elem => {\n      if (this.props.activeColor === elem.colorName) {\n        urlPhoto = elem.imageUrls[0];\n      }\n    });\n\n    this.props.setColorAddCart(this.props.activeColor);\n    this.props.setUrlAddCart(urlPhoto);\n  }\n\n  render() {\n    let productFeatures = this.props.productFeatures;\n    let photoGallery = productFeatures.map(elem => {\n      let active = this.props.activeColor === elem.colorName;\n      if (active) {\n        let array = elem.imageUrls;\n        return elem.imageUrls.map(elem => {\n          return (\n            <div className={`all-photos-item`} key={elem}>\n              <img\n                src={elem}\n                alt={this.props.activeColor}\n                onClick={() => {\n                  this.setState({\n                    index: array.indexOf(elem)\n                  });\n                }}\n              />\n            </div>\n          );\n        });\n      }\n    });\n\n    let photoGalleryFiltered = photoGallery.filter(elem => {\n      return elem !== undefined;\n    })[0];\n\n    let mainPhotoObj = photoGalleryFiltered\n      ? photoGalleryFiltered[this.state.index]\n      : null;\n    let mainPhotoSrc = mainPhotoObj ? mainPhotoObj.key : null;\n\n    return (\n      <>\n        <div className=\"all-photos\">{photoGallery}</div>\n        <div className=\"photo-main\">\n          <ReactImageMagnify\n            {...{\n              smallImage: {\n                alt: \"item\",\n                isFluidWidth: true,\n                src: mainPhotoSrc\n              },\n              largeImage: {\n                src: mainPhotoSrc,\n                width: 1200,\n                height: 1800\n              }\n            }}\n          />\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {};\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setColorAddCart: color => {\n      dispatch({ type: SET_COLOR, payload: { color: color } });\n    },\n\n    setUrlAddCart: url => {\n      dispatch({ type: SET_IMG, payload: { url: url } });\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PhotoGallery);\n","import React, {Component} from \"react\";\nimport \"./product-colors.scss\"\n\nexport default class ProductColors extends Component {\n\n    render() {\n        const colorArray = this.props.colors;\n\n        const colors = colorArray.map(elem => {\n            let quantityAll = [];\n            elem.sizes.map((elem) => {\n                quantityAll.push(Number(elem.quantity))\n            });\n            quantityAll.reduce(function (a, b) {\n                return (a + b)\n            })\n\n            if (quantityAll === 0) {\n                return;\n            }\n            let activeElement =\n                elem.colorName === this.props.activeColor ? \"active\" : '';\n\n            return (\n                <li key={elem._id}\n                    className={`${activeElement} color-item`}\n                    style={{backgroundColor: elem.color}}\n                    onClick={() => this.props.changeColor(elem.colorName)}\n                />\n            );\n        });\n        return <ul className=\"product-colors\">{colors}</ul>;\n    }\n}\n","// @flow\n\nimport * as React from \"react\";\nimport {connect} from \"react-redux\";\nimport {SET_AMOUNT} from \"../../../actions/addToCart\";\n\nimport \"./product-counter.scss\";\n\ntype Props = {\n    maxCount: number,\n    setAmountAddCart: Function,\n};\n\ntype State = {\n    value: number,\n};\n\nclass ProductCounter extends React.Component<Props, State> {\n    state = {\n        value: 1,\n    }\n\n    handleChange = (event: Object) => {\n\n        this.props.setAmountAddCart(event.target.value);\n\n        this.setState({value: event.target.value});\n    }\n\n    increaseCount = (maxcount: number) => {\n        let existValue = this.state.value;\n        if (existValue > (maxcount - 1)) {\n            return;\n        }\n        ++existValue;\n        this.props.setAmountAddCart(existValue);\n        this.setState({\n            value: existValue\n        })\n    }\n\n    decreaseCount = () => {\n        let existValue = this.state.value;\n        if (existValue <= 1) {\n            return;\n        }\n        existValue--;\n        this.props.setAmountAddCart(existValue);\n        this.setState({\n            value: existValue\n        })\n    }\n\n    render() {\n\n        let inputValue = this.state.value;\n\n        if (inputValue > this.props.maxCount && this.props.maxCount > 0) {\n            this.setState({\n                value: this.props.maxCount\n            })\n        }\n\n        if (typeof inputValue !== 'number') {\n            this.setState({\n                value: this.props.maxCount\n            })\n        }\n\n        return (\n            <div className=\"product-counter\">\n                <button className=\"product-counter-btn\" onClick={this.decreaseCount}>-</button>\n                <input type=\"tel\" className=\"product-counter-value\" value={this.state.value}\n                       onChange={this.handleChange} onInput={this.handleChange}/>\n                <button className=\"product-counter-btn\" onClick={() => this.increaseCount(this.props.maxCount)}>+\n                </button>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {};\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setAmountAddCart: (amount) => {\n            dispatch({type: SET_AMOUNT, payload: {amount: amount}})\n        },\n\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ProductCounter);\n","// @flow\n\nimport * as React from \"react\";\nimport ProductCounter from \"../../../atomic/ProductCounter\";\n\nimport {connect} from \"react-redux\";\nimport {SET_SIZE} from \"../../../../actions/addToCart\";\n\nimport \"./product-sizes.scss\";\n\ntype Props = {\n  productFeatures: Array<Object>,\n  activeColor: string,\n  setSizeAddCart: Function\n};\n\ntype State = {\n  productCount: number,\n  chosenSize: string\n};\n\nclass ProductSizes extends React.Component<Props, State> {\n  state = {\n    productCount: 0,\n    chosenSize: \"\"\n  };\n\n  choseSizes = (maxcount: number, chosenSize: string) => {\n    if (maxcount && chosenSize) {\n\n      this.props.setSizeAddCart(chosenSize);\n\n      this.setState({\n        productCount: maxcount,\n        chosenSize: chosenSize\n      });\n    }\n  };\n\n  render() {\n    let productFeatures = this.props.productFeatures;\n\n    let sizes = productFeatures.map(elem => {\n      if (elem.colorName === this.props.activeColor) {\n        return elem.sizes.map(elem => {\n          if (Number(elem.quantity) > 0) {\n            if (this.state.chosenSize === \"\") {\n              this.choseSizes(elem.quantity, elem.size);\n            }\n            return (\n              <li\n                key={elem._id}\n                className={`${\n                  this.state.chosenSize === elem.size ? \"active\" : \"\"\n                } size-item`}\n                onClick={() => this.choseSizes(elem.quantity, elem.size)}\n              >\n                {elem.size}\n              </li>\n            );\n          }\n          return null;\n        });\n      }\n      return null;\n    });\n\n    return (\n      <>\n        <p className=\"product-filter\">Size</p>\n        <ul className=\"product-sizes\">{sizes}</ul>\n        <p className=\"product-filter\">\n          Quantity Available: {this.state.productCount}\n        </p>\n        <ProductCounter maxCount={this.state.productCount} />\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n    return {};\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setSizeAddCart: (size) => {\n            dispatch({type: SET_SIZE, payload: {size: size}})\n        },\n\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ProductSizes);","import React, {Component, Fragment} from \"react\";\n\nimport {connect} from \"react-redux\";\nimport {ADD_ITEM_TO_CART} from \"../../../actions/cart\";\n\nimport \"./btn-add-to-cart.scss\";\n\nclass BtnAddToCart extends Component {\n\n\n\n\n    sendToCart = () => {\n\n        let isExist = 0;\n\n        this.props.cart.forEach((elem) => {\n\n            if (elem.id === this.props.infoCart.id && elem.colorName === this.props.infoCart.colorName\n                && elem.size === this.props.infoCart.size) {\n                isExist = 1;\n            }\n\n        })\n\n        if (!isExist) {\n            this.props.addProductToCart(this.props.infoCart);\n        }\n\n\n    }\n\n\n    render() {\n        return (\n            <Fragment>\n                <input type=\"button\" value=\"Add to cart\" className=\"btn-add-to-cart\" onClick={() => this.sendToCart()} />\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        infoCart: state.addToCart,\n        cart: state.cart.arrayProduct\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        addProductToCart: (item) => {\n            dispatch({type: ADD_ITEM_TO_CART, payload: {item: item}})\n        },\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BtnAddToCart)\n","// @flow\nimport * as React from \"react\";\nimport {Helmet} from \"react-helmet\";\nimport ProductColors from \"./ProductColors\";\nimport ProductSizes from \"./ProductSizes\";\nimport BtnAddToCart from \"../../atomic/BtnAddToCart\";\nimport './product-info.scss';\n\ntype Props = {\n  currentPrice: number,\n  itemNo: string,\n  activeColor: string,\n  model: string,\n  productFeatures: Array<Object>,\n  changeColor: Function\n};\n\nclass ProductInfo extends React.Component<Props> {\n\n /*  state = {\n    id: '5c62e83e12c9d12dbc9ecf16',\n    isAvailable: true,\n    reasonNotAvailable: '',\n    model: 'Light Spring Hat',\n    colorName: 'white',\n    size: 'm',\n    amount: 1,\n    price: 28.88,\n    priceFormDB: 28.88,\n    urlPhoto: \"/img/products/women/accessories/hats/001/ffffff/011.png\"\n  } */\n  \n  render() {\n    const { itemNo, currentPrice, model, productFeatures, activeColor } = {\n      ...this.props\n    };\n\n/*     saveChosenItem () => {\n       \n    } */\n\n    return (\n      <>\n      <Helmet>\n\t\t\t<title>{model}</title>\n      <link rel=\"shortcut icon\" type=\"image/x-icon\"  href=\"./favicon-matter.ico\"/>  \n\t\t\t</Helmet>\n      <div className=\"product-main-info\">\n        <h2 className=\"product-title\">{model}</h2>\n        <span className=\"product-meta\">Item Id. {itemNo}</span>\n        <p className=\"product-price\">${currentPrice}</p>\n        <p className=\"product-filter\" />\n        <ProductColors\n          colors={productFeatures}\n          activeColor={activeColor}\n          changeColor={this.props.changeColor}\n        />\n        <ProductSizes\n          activeColor={activeColor}\n          productFeatures={productFeatures}\n        />\n        <BtnAddToCart />\n      </div>\n      </>\n    );\n  }\n}\n\nexport default ProductInfo;\n","// @flow\n\nimport * as React from \"react\";\nimport {NavLink} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport {selectFilters, clearProductList} from \"../../actions/filterActions\";\nimport \"./breadcrumbs.scss\"\n\ntype Props = {\n    categoryAway: Object,\n    navMenuItems: Array < Object >,\n    selectFilters: Object,\n    currentFilters: Object,\n    modelName: string,\n    activeColor: string,\n    clearProductList: Function,\n    itemNo: number\n}\n\nclass BreadCrumbs extends React.Component<Props> {\n    changeCategoryFilters = (\n        newCategory: string,\n        newSubCategory: string,\n        newFurtherSubCategory: string\n    ) => {\n        let {currentFilters} = this.props;\n\n        this.props.clearProductList();\n\n        this.props.selectFilters(currentFilters, {\n            category: newCategory,\n            subCategory: newSubCategory,\n            furtherSubCategory: newFurtherSubCategory,\n            colorName: currentFilters.colorName,\n            size: currentFilters.size,\n            price: currentFilters.price,\n            pageNo: 1\n        });\n    };\n\n    render() {\n        let {category, subCategory, furtherSubCategory} = this.props.categoryAway;\n        let {navMenuItems} = this.props;\n\n\n        let subCategories = navMenuItems.map(cat => {\n            if (cat.categoryName === category) {\n                return cat.subCategoryList.map(subCat => {\n                        if (subCat.subCategoryName === subCategory) {\n                            let furtherSubCatList = subCat.furtherSubCategoryList.map(furtherSubCat => {\n                                    if (furtherSubCategory != null || furtherSubCategory !== undefined) {\n                                        if (furtherSubCat.furtherSubCategoryName === furtherSubCategory) {\n                                            return (\n                                                <li key={furtherSubCat._id}>\n                                                    <NavLink to={furtherSubCat.furtherSubCategoryUrl}\n                                                             onClick={() =>\n                                                                 this.changeCategoryFilters(\n                                                                     cat.categoryName,\n                                                                     subCat.subCategoryName,\n                                                                     furtherSubCat.furtherSubCategoryName\n                                                                 )\n                                                             }\n                                                             className=\"breadcrumbs-link\">{furtherSubCat.furtherSubCategoryName}\n                                                    </NavLink>\n                                                </li>\n                                            )\n                                        }\n                                        return null;\n                                    }\n                                    return null;\n                                }\n                            );\n                            return (<>\n\n                                    <li key={subCat._id}>\n                                        <NavLink to={subCat.subCategoryUrl}\n                                                 onClick={() =>\n                                                     this.changeCategoryFilters(\n                                                         cat.categoryName,\n                                                         subCat.subCategoryName\n                                                     )\n                                                 }\n                                                 className=\"breadcrumbs-link\">{subCat.subCategoryName}\n                                        </NavLink>\n                                    </li>\n                                    {furtherSubCatList}\n                                </>\n\n                            )\n                        }\n                        return null;\n                    }\n                )\n            }\n            return null;\n        });\n\n        let mainCategory = navMenuItems.map(cat => {\n            if (cat.categoryName === category) {\n                return (\n                    <li key={cat._id}>\n                        <NavLink\n                            to={cat.categoryUrl}\n                            className=\"breadcrumbs-link\"\n                            onClick={() => this.changeCategoryFilters(cat.categoryName)}>\n                            {cat.categoryName}\n                        </NavLink>\n                    </li>\n                );\n            }\n            return null;\n        });\n\n        return (\n            <section className=\"breadcrumbs-section\">\n                <div className=\"container\">\n                    <ul className=\"breadcrumbs-list\">\n                        <li><NavLink to=\"/\" className=\"breadcrumbs-link\">Home</NavLink></li>\n                        {mainCategory}\n                        {subCategories}\n                        {this.props.modelName ?\n                            <li key={this.props.itemNo}><NavLink to=\"/\"\n                                                                 className=\"breadcrumbs-link\">{this.props.modelName} ({this.props.activeColor})</NavLink>\n                            </li>\n                            : null\n                        }\n                    </ul>\n                </div>\n            </section>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        navMenuItems: state.navMenu.navMenuItems,\n        currentFilters: state.filters.selected\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    {selectFilters, clearProductList}\n)(BreadCrumbs);","import React, { Component } from \"react\";\nimport PhotoGallery from \"./PhotoGallery\";\nimport ProductInfo from \"./ProductInfo\";\nimport { connect } from \"react-redux\";\nimport { getProductDetails } from \"../../actions/productDetails\";\nimport { SET_COLOR, SET_IMG } from \"../../actions/addToCart\";\n\nimport BreadCrumbs from \"../BreadCrumbs\";\nimport SearchDropDownList from \"../SearchDropDownList\";\n\nimport \"./product-page.scss\";\n\nclass ProductPage extends Component {\n  state = {\n    activeColor: this.props.activeColor,\n    productFeatures: [\n      {\n        color: \"\",\n        sizes: []\n      }\n    ],\n    thumbs: true\n  };\n\n  componentDidMount() {\n    this.props.getProductDetails(this.props.match.params);\n\n    // console.log('this.state.activeColor', this.state.activeColor)\n\n    if (this.state.activeColor) {\n      let urlPhoto = \"\";\n\n      this.props.productFeatures.forEach(elem => {\n        if (this.state.activeColor === elem.colorName) {\n          urlPhoto = elem.imageUrls[0];\n        }\n      });\n      this.props.setUrlAddCart(urlPhoto);\n      this.props.setColorAddCart(this.state.activeColor);\n    }\n  }\n\n  changeColor = color => {\n    let urlPhoto = \"\";\n\n    this.props.productFeatures.forEach(elem => {\n      if (color === elem.colorName) {\n        urlPhoto = elem.imageUrls[0];\n      }\n    });\n\n    this.props.setUrlAddCart(urlPhoto);\n    this.props.setColorAddCart(color);\n\n    this.setState({ activeColor: color, thumbs: false });\n  };\n\n  setInitialColor = array => {\n    return array[0].colorName;\n  };\n\n  render() {\n    const { itemNo, currentPrice, model } = {\n      ...this.props.productItem.productOpened\n    };\n    const { productFeatures } = { ...this.props };\n    let activeColor = this.state.activeColor;\n\n    if (activeColor === \"\") {\n      activeColor = this.setInitialColor(productFeatures);\n    }\n\n    return (\n      <>\n        <SearchDropDownList />\n        <BreadCrumbs\n          categoryAway={this.props.match.params}\n          modelName={model}\n          activeColor={activeColor}\n          itemNo={itemNo}\n        />\n\n        <section className=\"product-main container\">\n          <PhotoGallery\n            productFeatures={productFeatures}\n            activeColor={activeColor}\n            thumbs={this.props.thumbs}\n            changeColor={this.changeColor}\n          />\n          <ProductInfo\n            productFeatures={productFeatures}\n            activeColor={activeColor}\n            itemNo={itemNo}\n            currentPrice={currentPrice}\n            model={model}\n            changeColor={this.changeColor}\n          />\n        </section>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    productItem: state.productDetails,\n    productFeatures: state.productDetails.productOpened.productFeatures,\n    activeColor: state.product.activeColor\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getProductDetails: data => dispatch(getProductDetails(data)),\n    // setInitialAddCart: (data) => {dispatch({type: SET_INITIAL_STATE, payload: {data: data}})}\n    setColorAddCart: color => {\n      dispatch({ type: SET_COLOR, payload: { color: color } });\n    },\n    setUrlAddCart: url => {\n      dispatch({ type: SET_IMG, payload: { url: url } });\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ProductPage);\n","import React, { Fragment } from 'react';\n\nconst customCorrectEmail = (props) => {\n    const {input, type, placeholder, meta} = props;\n    // const errorClass = meta.error ? 'section-profile-content-input section-profile-content-input-error' : 'section-profile-content-input'\n    return (\n        <Fragment>\n            <input {...input} type={type} placeholder={placeholder} className='section-profile-content-input'/>\n            {meta.error && meta.touched && <div className='input-error-message'>{meta.error}</div>}\n        </Fragment>\n    )\n}\nexport default customCorrectEmail;","import React, {Component} from 'react';\nimport {Field, reduxForm} from 'redux-form';\nimport { connect } from 'react-redux';\nimport {requiredInput, correctEmail} from '../../../validation'\nimport customRequiredInput from '../../atomic/customRequiredInput';\nimport customCorrectEmail from '../../atomic/customCorrectEmail';\n\nclass FormPersonalContent extends Component {\n    render(){\n        const {handleSubmit, pristine, submitting, invalid} = this.props;\n        return (\n            <form onSubmit={handleSubmit}>\n\n                <div className='section-profile-content-label'>\n                    First name\n                </div>\n                <Field name=\"firstName\" component={customRequiredInput}\n                       type=\"text\" placeholder=\"Your first name...\"\n                       className='section-profile-content-input'\n                       classError='input-error-message'\n                       validate={[requiredInput]}\n                />\n                <div className='section-profile-content-label'>\n                    Last name\n                </div>\n                <Field name=\"secondName\" component={customRequiredInput}\n                       type=\"text\" placeholder=\"Your second name...\"\n                       className='section-profile-content-input'\n                       classError='input-error-message'\n                       validate={[requiredInput]}\n                />\n                <div className='section-profile-content-label'>\n                    Email address\n                </div>\n                <Field name=\"email\" component={customCorrectEmail}\n                       type=\"text\" placeholder=\"Your e-mail...\"\n                       className='section-profile-content-input'\n                       classError='input-error-message'\n                       validate={[correctEmail]}\n                />\n\n\n                <button name='personalSbm' disabled={invalid || pristine || submitting} type=\"submit\" className='section-profile-content-btn' label=\"submit\">Save changes</button>\n            </form>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        initialValues: {\n            firstName: state.login.loggedData.firstName,\n            secondName: state.login.loggedData.secondName,\n            email: state.login.loggedData.email,\n        }\n    }\n}\n\nFormPersonalContent = reduxForm({\n    form: 'formProfilePersonal'\n})(FormPersonalContent);\n\n\nexport default connect(mapStateToProps)(FormPersonalContent);","import React, {Component, Fragment} from 'react'\nimport {connect} from 'react-redux'\nimport FormPersonalContent from './FormPersonalContent'\n\nimport {profileChangePersonal} from \"../../../actions/login\";\n\n\nclass PersonalContent extends Component {\n\n\n    handleSubmit = (values) => {\n\n        let sendObject = {\n            id: this.props.personalInfo.loggedData._id,\n            firstName: values.firstName,\n            secondName: values.secondName,\n            email: values.email,\n        };\n\n        console.log('===============')\n        console.log('sendObject', sendObject)\n\n        this.props.profileChangePersonal(sendObject);\n\n    }\n\n    render() {\n\n\n        let classIsLogged = (this.props.personalInfo.isLogged) ? null : 'd-none';\n        let classNotLogged = (this.props.personalInfo.isLogged) ? 'd-none' : null;\n\n        let isNewEmailUser = (this.props.personalInfo.errorStatus.errorProfileExistEmail) ? 'incorrect-form-save' : 'd-none';\n\n        return (\n            <Fragment>\n                <div className={classNotLogged}>\n                    Please log in to system\n                </div>\n\n                <div className={classIsLogged}>\n\n                    <div className={isNewEmailUser}>You new email is already user. Data wasn't save.</div>\n                    <FormPersonalContent onSubmit={this.handleSubmit}/>\n\n                </div>\n\n            </Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        personalInfo: state.login,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        profileChangePersonal: (newForm) => dispatch(profileChangePersonal(newForm))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PersonalContent)","import React, {Component, Fragment} from 'react'\nimport {connect} from 'react-redux'\n\n// import {CLOSE_LOGIN_DETAILS} from \"../../../actions/login\";\n\n\nclass DeliveryInfo extends Component {\n\n    state = {\n        country: '',\n        zipcode: '',\n        city: '',\n        street: '',\n        phone: ''\n    }\n\n    onStateChange = (e) => {\n        this.setState({[e.target.name]: e.target.value});\n    };\n\n    componentWillMount () {\n        if (this.props.personalInfo.isLogged) {\n            this.setState({\n                country: this.props.personalInfo.loggedData.deliveryData.country,\n                zipcode: this.props.personalInfo.loggedData.deliveryData.zipcode,\n                city: this.props.personalInfo.loggedData.deliveryData.city,\n                street: this.props.personalInfo.loggedData.deliveryData.street,\n                phone: this.props.personalInfo.loggedData.deliveryData.phone\n            })\n        }\n    }\n\n\n    render() {\n\n        let classIsLogged = (this.props.personalInfo.isLogged) ? null : 'd-none';\n        let classNotLogged = (this.props.personalInfo.isLogged) ? 'd-none' : null;\n\n        return (\n            <Fragment>\n\n                <div className={classNotLogged}>\n                    Please log in to system\n                </div>\n\n                <div className={classIsLogged}>\n                    <div>\n                        <div className='section-profile-content-label'>\n                            Country\n                        </div>\n                        <input name='country' type=\"text\" className='section-profile-content-input'\n                               value={this.state.country} onChange={this.onStateChange} />\n                        <div className='section-profile-content-label'>\n                            Zipcode\n                        </div>\n                        <input name='zipcode' type=\"text\" className='section-profile-content-input'\n                               value={this.state.zipcode} onChange={this.onStateChange} />\n                        <div className='section-profile-content-label'>\n                            City\n                        </div>\n                        <input name='city' type=\"text\" className='section-profile-content-input'\n                               value={this.state.city} onChange={this.onStateChange} />\n                        <div className='section-profile-content-label'>\n                            Street\n                        </div>\n                        <input name='street' type=\"text\" className='section-profile-content-input'\n                               value={this.state.street} onChange={this.onStateChange} />\n                        <div className='section-profile-content-label'>\n                            Phone\n                        </div>\n                        <input name='phone' type=\"text\" className='section-profile-content-input'\n                               value={this.state.phone} onChange={this.onStateChange} />\n                        <input type=\"button\" className='section-profile-content-btn' value='Save changes'/>\n                    </div>\n                </div>\n            </Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        personalInfo: state.login,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DeliveryInfo)","import React, {Component} from 'react';\nimport {Field, reduxForm} from 'redux-form';\nimport {requiredInput, matchPasswords} from '../../../validation'\nimport customRequiredInput from '../../atomic/customRequiredInput';\n\nclass FormChangePassword extends Component {\n    render(){\n        const {handleSubmit, pristine, submitting, invalid} = this.props;\n        return (\n            <form onSubmit={handleSubmit}>\n\n                <div className='section-profile-content-label'>\n                    Current password\n                </div>\n                <Field name=\"currPass\" component={customRequiredInput}\n                       type=\"password\" placeholder=\"Your current password...\"\n                       className='section-profile-content-input'\n                       validate={[requiredInput]}\n                />\n                <div className='section-profile-content-label'>\n                    New password\n                </div>\n                <Field name=\"newPass\" component={customRequiredInput}\n                       type=\"password\" placeholder=\"Your new password...\"\n                       className='section-profile-content-input'\n                       validate={[requiredInput]}\n                />\n                <div className='section-profile-content-label'>\n                    Confirm new password\n                </div>\n                <Field name=\"newPass2\" component={customRequiredInput}\n                       type=\"password\" placeholder=\"Confirm new password...\"\n                       className='section-profile-content-input'\n                       validate={[requiredInput, matchPasswords]}\n                />\n\n\n                <button name='personalSbm' disabled={invalid || pristine || submitting}\n                        type=\"submit\" className='section-profile-content-btn' label=\"submit\">Save password</button>\n            </form>\n        );\n    }\n}\n\n\nexport default reduxForm({form: 'formChangePassword'})(FormChangePassword);","import React, {Component, Fragment} from 'react'\nimport {connect} from 'react-redux'\nimport FormChangePassword from './FormChangePassword'\nimport {profileChangePassword} from \"../../../actions/login\";\n\nclass ChangePassword extends Component {\n    handleSubmit = (values) => {\n\n        let sendObject = {\n            id: this.props.personalInfo.loggedData.id,\n            password: values.currPass,\n            newPassword: values.newPass,\n        };\n\n        this.props.profileChangePassword(sendObject);\n\n    }\n\n    render () {\n\n        let classIsLogged = (this.props.personalInfo.isLogged) ? null : 'd-none';\n        let classNotLogged = (this.props.personalInfo.isLogged) ? 'd-none' : null;\n        let isCorrectPassword = (this.props.personalInfo.errorStatus.errorProfileWrongPassword) ? 'incorrect-form-save' : 'd-none';\n\n\n        return (\n            <Fragment>\n\n                <div className={classNotLogged}>\n                    Please log in to system\n                </div>\n                <div className={classIsLogged}>\n\n                    <div className={isCorrectPassword}>Please enter a correct old password</div>\n                    <FormChangePassword onSubmit={this.handleSubmit}/>\n\n                </div>\n\n\n            </Fragment>\n        )\n\n    }\n\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        personalInfo: state.login,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        profileChangePassword: (newForm) => dispatch(profileChangePassword(newForm))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChangePassword)","import React, {Component, Fragment} from 'react'\nimport {connect} from 'react-redux'\n\n// import {CLOSE_LOGIN_DETAILS} from \"../../../actions/login\";\n\n\nclass PaymentDetails extends Component {\n\n    state = {\n        cardNumber: '',\n        nameOnCard: '',\n        expiryMonth: '',\n        expiryYear: ''\n    }\n\n    onStateChange = (e) => {\n        this.setState({[e.target.name]: e.target.value});\n    };\n\n    componentWillMount () {\n        if (this.props.personalInfo.isLogged) {\n            this.setState({\n\n                cardNumber: this.props.personalInfo.loggedData.paymentInfo.cardNumber,\n                nameOnCard: this.props.personalInfo.loggedData.paymentInfo.nameOnCard,\n                expiryMonth: this.props.personalInfo.loggedData.paymentInfo.expiryMonth,\n                expiryYear: this.props.personalInfo.loggedData.paymentInfo.expiryYear\n\n            })\n        }\n    }\n\n    render() {\n        let classIsLogged = (this.props.personalInfo.isLogged) ? null : 'd-none';\n        let classNotLogged = (this.props.personalInfo.isLogged) ? 'd-none' : null;\n\n        return (\n            <Fragment>\n                <div className={classNotLogged}>\n                    Please log in to system\n                </div>\n\n                <div className={classIsLogged}>\n                    <div>\n                        <div className='section-profile-content-label'>\n                            Card number\n                        </div>\n                        <input name='cardNumber' type=\"text\" className='section-profile-content-input'\n                               value={this.state.cardNumber} onChange={this.onStateChange}/>\n                        <div className='section-profile-content-label'>\n                            Name on card\n                        </div>\n                        <input name='nameOnCard' type=\"text\" className='section-profile-content-input'\n                               value={this.state.nameOnCard} onChange={this.onStateChange}/>\n\n                        <div className='section-profile-content-label'>\n                            Expiry date MM/YYYY\n                        </div>\n                        <div>\n                            <input name='expiryMonth' type=\"text\" className='section-profile-content-input-date-mm'\n                                   value={this.state.expiryMonth} onChange={this.onStateChange}/>\n                            <span>&nbsp;&#47;&nbsp;</span>\n                            <input name='expiryYear' type=\"text\" className='section-profile-content-input-date-yyyy'\n                                   value={this.state.expiryYear} onChange={this.onStateChange}/>\n                        </div>\n                        <input type=\"button\" className='section-profile-content-btn' value='Save changes'/>\n\n                    </div>\n                </div>\n\n\n\n            </Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        personalInfo: state.login,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PaymentDetails)","import React, {Component} from 'react'\nimport {connect} from 'react-redux'\nimport axios from \"axios\";\n\nimport \"./order-history.scss\"\n\n\nclass OrdersHistory extends Component {\n\n    state = {\n        arrOrders: []\n    }\n\n    // componentDidMount () {\n    //\n    //     if (this.props.idUser) {\n    //         axios.post(\"/getOrders\", {idUser: this.props.idUser})\n    //             .then(res => res.data)\n    //             .then(data => {\n    //             if (data.success) {\n    //                 this.setState({\n    //                     arrOrders: data.data\n    //                 });\n    //             }\n    //         });\n    //     }\n    // }\n\n    componentDidUpdate () {\n\n        if (this.props.idUser) {\n            axios.post(\"/getOrders\", {idUser: this.props.idUser})\n                .then(res => res.data)\n                .then(data => {\n                    if (data.success) {\n                        this.setState({\n                            arrOrders: data.data\n                        });\n                    }\n                });\n        }\n    }\n\n    render() {\n\n        let arrMonths = ['January', \"February\", \"March\", \"April\", \"May\", \"June\",\n        \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\n\n        let arrOrders = this.state.arrOrders.map((elem) => {\n\n            let dateOrder = new Date(elem.date)\n\n            let dd = dateOrder.getDate();\n            if (dd < 10) dd = '0' + dd;\n\n            let mm = dateOrder.getMonth();\n            mm = arrMonths[mm];\n\n            let yy = dateOrder.getFullYear();\n\n            let listProducts = elem.arrayProduct.map((item) => {\n\n                return (\n                    <li className=\"order-history-list-item\">\n                       \n                            \n                                <div className=\"checkout-product-item-description\">\n                                    <p className=\"checkout-product-item-model\">\n                                        {item.model}\n                                    </p>\n                                    <p className=\"checkout-product-item-color\">\n                                        {`Color - ${item.colorName}`}\n                                    </p>\n                                    <p className=\"checkout-product-item-size\">\n                                        {`Size - ${item.size}`}\n                                    </p>\n                              \n                            \n                            <div className=\"checkout-product-item-price\">\n                                <p>{`${item.priceFormDB} x ${item.amount}`}</p>\n                                <p className=\"checkout-product-item-price-bold\">\n                                    {`$${(item.amount * item.priceFormDB).toFixed(2)}`}\n                                </p>\n                            </div>\n\n                        </div>\n                    </li>\n                )\n            })\n\n            return (\n                <li className=\"order-history-item\">\n                    <p className=\"order-history-title\">\n                        Your order - {elem.orderNo}\n                    </p>\n                    <p className=\"order-history-date\">\n                        Date of order - {`${dd} ${mm} ${yy}`}\n                    </p>\n\n                    <ul className=\"order-history-list\">\n                        {listProducts}\n                    </ul>\n                </li>\n            )\n        });\n\n        return (\n            <ul className=\"section-order-history\">\n                {arrOrders}\n            </ul>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        idUser: state.login.loggedData._id,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrdersHistory)","import React, {Component} from 'react';\nimport {NavLink, Route, withRouter} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport {Helmet} from \"react-helmet\";\n// import {Route} from 'react-router-dom';\n// import { withRouter } from \"react-router-dom\";\nimport {goToProfile, LOGOUT, SAVE_HISTORY_PATH, unsetLoggedUser} from '../../actions/login'\n\n\nimport PersonalContent from './PersonalContent';\nimport DeliveryInfo from './DeliveryInfo';\nimport ChangePassword from './ChangePassword';\nimport PaymentDetails from './PaymentDetails';\nimport OrdersHistory from './OrdersHistory';\n\nimport './Profile.scss'\n\n\n\nclass Profile extends Component {\n\n    componentDidMount() {\n\n        console.log('this.props.history.location.pathname', this.props.history.location.pathname)\n\n        this.props.setHistoryLink(this.props.history.location.pathname);\n        this.props.goToProfile(this.props.history)\n    }\n\n\n    render() {\n\n        console.log('render profile')\n\n\n        return (\n            <>\n            <Helmet>\n\t\t\t<title>My account</title>\n\t\t\t</Helmet>\n            <section className='section-profile'>\n                <div className='section-profile-title'>\n                    <div className='container'>\n                        <div className='section-profile-title-text'>\n                            My account\n                        </div>\n                    </div>\n                </div>\n\n                <div className='section-profile-main container'>\n                    <div className='section-profile-navmenu'>\n                        <NavLink to='/users/profile/personalContent' className='section-profile-navmenu-item'\n                                 activeClassName='section-profile-navmenu-item-active'>\n                            Personal Information\n                        </NavLink>\n                        <NavLink to='/users/profile/changePassword' className='section-profile-navmenu-item'\n                                 activeClassName='section-profile-navmenu-item-active'>\n                            Change Password\n                        </NavLink>\n                        {/*<NavLink to='/users/profile/deliveryInfo' className='section-profile-navmenu-item'*/}\n                                 {/*activeClassName='section-profile-navmenu-item-active'>*/}\n                            {/*Delivery Information*/}\n                        {/*</NavLink>*/}\n                        {/*<NavLink to='/users/profile/paymentDetails' className='section-profile-navmenu-item'*/}\n                                 {/*activeClassName='section-profile-navmenu-item-active'>*/}\n                            {/*Payment Information*/}\n                        {/*</NavLink>*/}\n                        <NavLink to='/users/profile/ordersHistory' className='section-profile-navmenu-item'\n                                 activeClassName='section-profile-navmenu-item-active'>\n                            My Orders\n                        </NavLink>\n                        <NavLink to='/' className='section-profile-navmenu-logout' onClick={() => this.props.unsetLoggedUser()}>\n                            Logout\n                        </NavLink>\n\n                    </div>\n\n                    <div className='section-profile-content'>\n                        <Route exact path='/users/profile/personalContent' component={PersonalContent}/>\n                        <Route exact path='/users/profile/changePassword' component={ChangePassword}/>\n                        {/*<Route exact path='/users/profile/deliveryInfo' component={DeliveryInfo}/>*/}\n                        {/*<Route exact path='/users/profile/paymentDetails' component={PaymentDetails}/>*/}\n                        <Route exact path='/users/profile/ordersHistory' component={OrdersHistory}/>\n                    </div>\n                </div>\n\n\n            </section>\n            </>\n        )\n\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        logout: () => {\n            dispatch({type: LOGOUT})\n        },\n        setHistoryLink: (value) => {\n            dispatch({type: SAVE_HISTORY_PATH, payload: {link: value}})\n        },\n        goToProfile: (history) => dispatch(goToProfile(history)),\n        unsetLoggedUser: () => dispatch(unsetLoggedUser()),\n\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(withRouter(Profile))","// @flow\r\n\r\nimport * as React from \"react\";\r\nimport \"./unsubscribe.scss\";\r\nimport axios from \"axios\";\r\n\r\ntype Props = {};\r\n\r\ntype State = {\r\n  submitted: boolean\r\n};\r\nclass Unsubscribe extends React.Component<Props, State> {\r\n  state = {\r\n    submitted: false\r\n  };\r\n\r\n  unsubscribeMail = (e: Object) => {\r\n    e.preventDefault();\r\n    axios.post(window.location.href);\r\n    this.setState({ submitted: true });\r\n  };\r\n\r\n  render() {\r\n    if (this.state.submitted === true) {\r\n      return (\r\n        <>\r\n          <div className=\"container\">\r\n            <p className=\"unsubscribe-text\">\r\n              You have been unsubscribed from our mailing!\r\n            </p>\r\n          </div>\r\n        </>\r\n      );\r\n    } else {\r\n      return (\r\n        <>\r\n          <section className=\"section-unsubscribe\">\r\n            <div className=\"container\">\r\n              <div className=\"unsubscribe\">\r\n                <form\r\n                  onSubmit={this.unsubscribeMail}\r\n                  className=\"unsubscribe-form\"\r\n                >\r\n                  <input\r\n                    id=\"unsubscribe-btn\"\r\n                    type=\"submit\"\r\n                    className=\"unsubscribe-form-btn\"\r\n                    value=\"UNSUBSCRIBE\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </section>\r\n        </>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Unsubscribe;\r\n","import React, {Component} from 'react'\nimport {connect} from \"react-redux\";\nimport {NavLink} from 'react-router-dom';\nimport './final-order.scss';\n\n\nclass FinalOrder extends Component {\n    render() {\n\n        let arrayCheckout = [];\n        let totalPrice = 0;\n        if (this.props.dataBasket.arrayProduct.length > 0) {\n            this.props.dataBasket.arrayProduct.forEach((elem) => {\n                if (elem.isAvailable === true) {\n                    totalPrice += elem.priceFormDB * elem.amount;\n                    arrayCheckout.push(\n                        <li key={elem.model}>\n                            <span className=\"title\">{`${elem.model} x ${elem.amount}`}</span><span\n                            className=\"price\">{`$${(elem.priceFormDB * elem.amount).toFixed(2)}`}</span>\n                        </li>)\n\n\n                }\n\n            });\n            totalPrice = totalPrice.toFixed(2);\n\n        }\n\n\n        return (\n            <div className=\"basket-final-order\">\n                <h3 className=\"basket-final-order-title\">My order</h3>\n                <ul className=\"basket-final-order-info\">\n                    {arrayCheckout}\n                    <li>\n                        <span className=\"title\">Total</span><span className=\"price\">{`$${totalPrice}`}</span>\n                    </li>\n                    <li>\n                        <span className=\"title\">Delivery</span><span className=\"price\">Free</span>\n                    </li>\n                </ul>\n\n                <NavLink to=\"/checkout\">\n\n                    <input className=\"btn-add-to-cart\" type=\"button\" value=\"Proceed checkout\" disabled={(this.props.dataBasket.arrayProduct.length === 0)}/>\n                </NavLink>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        dataBasket: state.cart,\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FinalOrder)","import React, {Component} from 'react'\nimport {connect} from \"react-redux\";\n\nimport FinalOrder from \"./FinalOrder\"\n\nimport {faTimes} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\n\nimport {\n    CHANGE_AMOUT_OF_ITEM,\n    CHANGE_ARRAY_AMOUT_OF_ITEM,\n    DELETE_ITEM_TO_CART,\n    checkAvailableItem\n} from '../../actions/cart';\n\nimport './cart.scss'\nimport {goToProfile} from \"../../actions/login\";\n\nclass Cart extends Component {\n\n    state = {\n        isBlock: false,\n        isRequest: false,\n    }\n\n    handleChange = (event) => {\n\n\n        let name = Number(event.target.name);\n        let value = Number(event.target.value);\n\n\n        if (!isNaN(value) && value > 0) {\n            let arrayCheckProducts = [];\n\n            if (this.props.dataBasket.arrayProduct.length > 0) {\n                this.props.dataBasket.arrayProduct.forEach((elem, i) => {\n                    let checkItem = {}\n\n                    if (i == name) {\n\n                        checkItem = {\n                            ...elem,\n                            amount: value\n                        }\n                    } else {\n                        checkItem = {\n                            ...elem\n                        }\n                    }\n\n                    arrayCheckProducts.push(checkItem);\n                })\n\n                this.props.checkArrayAvailableItems(arrayCheckProducts);\n            }\n\n\n            this.setState({[name]: value});\n        } else {\n            this.setState({[name]: ''});\n        }\n    }\n\n\n    falseBlock = () => {\n\n        // console.log('call false block')\n\n        this.setState({\n            isBlock: false,\n        });\n    }\n\n    falseRequest = () => {\n        // console.log('call request false')\n\n        let arrayCheckProducts = [];\n\n        if (this.props.dataBasket.arrayProduct.length > 0) {\n            this.props.dataBasket.arrayProduct.forEach((elem, i) => {\n                let checkItem = {}\n                checkItem = {\n                    ...elem,\n                    amount: this.state[i]\n                }\n                arrayCheckProducts.push(checkItem);\n            })\n\n            // console.log('CALL checkArrayAvailableItems 2');\n            this.props.checkArrayAvailableItems(arrayCheckProducts);\n        }\n        // console.log('componentWillUpdate array', arrayCheckProducts)\n        this.setState({\n            isRequest: false,\n        });\n\n    }\n\n\n    addAmount = (index) => {\n\n        let newAmount = this.state[index];\n        newAmount++;\n\n        if (!this.state.isBlock) {\n\n            let arrayCheckProducts = [];\n\n            if (this.props.dataBasket.arrayProduct.length > 0) {\n                this.props.dataBasket.arrayProduct.forEach((elem, i) => {\n                    let checkItem = {}\n                    if (i == index) {\n                        checkItem = {\n                            ...elem,\n                            amount: newAmount\n                        }\n                    } else {\n                        checkItem = {\n                            ...elem\n                        }\n                    }\n\n                    arrayCheckProducts.push(checkItem);\n                })\n                this.props.checkArrayAvailableItems(arrayCheckProducts);\n            }\n\n\n            setTimeout(this.falseBlock, 1500);\n            this.setState({\n                isBlock: true,\n                [index]: newAmount\n            });\n        } else {\n\n            if (!this.state.isRequest) {\n                setTimeout(this.falseRequest, 1500);\n                this.setState({\n                    isRequest: true,\n                    [index]: newAmount\n                });\n            } else {\n                this.setState({\n                    [index]: newAmount\n                });\n            }\n\n        }\n\n    }\n\n    minusAmount = (index) => {\n        // console.log(value)\n        let newAmount = this.state[index];\n\n        if (newAmount - 1 > 0) {\n            newAmount--;\n            if (!this.state.isBlock) {\n\n                let arrayCheckProducts = [];\n\n                if (this.props.dataBasket.arrayProduct.length > 0) {\n                    this.props.dataBasket.arrayProduct.forEach((elem, i) => {\n                        let checkItem = {}\n                        if (i == index) {\n                            checkItem = {\n                                ...elem,\n                                amount: newAmount\n                            }\n                        } else {\n                            checkItem = {\n                                ...elem\n                            }\n                        }\n\n                        arrayCheckProducts.push(checkItem);\n                    })\n                    this.props.checkArrayAvailableItems(arrayCheckProducts);\n                }\n\n                setTimeout(this.falseBlock, 1500);\n                this.setState({\n                    isBlock: true,\n                    [index]: newAmount\n                });\n            } else {\n\n                if (!this.state.isRequest) {\n                    setTimeout(this.falseRequest, 1500);\n                    this.setState({\n                        isRequest: true,\n                        [index]: newAmount\n                    });\n                } else {\n                    this.setState({\n                        [index]: newAmount\n                    });\n                }\n\n            }\n        }\n\n    }\n\n    deleteItem = (index) => {\n        let arr = this.props.dataBasket.arrayProduct;\n        arr.splice(index, 1);\n\n        this.props.deleteItem(arr);\n\n        arr.forEach((elem, index) => {\n            this.setState({[index]: elem.amount})\n        })\n\n\n    }\n\n\n    componentWillUpdate(nextProps, nextState) {\n\n        // console.log('component will update')\n        let isUpdate = 0;\n        let obj = {};\n        nextProps.dataBasket.arrayProduct.forEach((elem, index) => {\n\n            if (!this.state[index]) {\n                if (this.state[index] !== '') {\n                    obj[index] = elem.amount;\n                    isUpdate = 1;\n                }\n\n            }\n        })\n\n\n        if (isUpdate) {\n            // console.log('WILL isUpdate')\n            let arrayCheckProducts = [];\n\n            if (this.props.dataBasket.arrayProduct.length > 0) {\n                this.props.dataBasket.arrayProduct.forEach((elem, index) => {\n                    let checkItem = {\n                        ...elem,\n                        amount: obj[index]\n                    }\n                    arrayCheckProducts.push(checkItem);\n                })\n\n                this.props.checkArrayAvailableItems(arrayCheckProducts);\n            }\n            this.setState({...obj})\n\n        }\n\n    }\n\n\n    componentDidMount() {\n\n        let obj = {}\n\n        this.props.dataBasket.arrayProduct.forEach((elem, index) => {\n            obj[index] = elem.amount;\n        })\n        this.setState({...obj})\n\n        // this.setState({[index]: elem.amount})\n    }\n\n    render() {\n\n        // let arrayCheckProducts = [{id: '5c62e45b9103d2041423d03f', isAvailable: true,\n        //     reasonNotAvailable: '', colorName: 'black', size: 's', amount: 3,}];\n        let arrayCheckProducts = [];\n\n        let productList = this.props.dataBasket.arrayProduct.map((elem, index) => {\n\n\n            let keyItem = index;\n            let amount = this.state[keyItem];\n\n\n            let classIsAvailable = elem.isAvailable ? 'basket-item-available' : 'd-none';\n            let classIsNotAvailable = !elem.isAvailable ? 'basket-item-notavailable' : 'd-none';\n\n            let classWasChangedPrice = (Number(elem.price) !== Number(elem.priceFormDB)) ? null : 'd-none';\n            let classWasntChangedPrice = (Number(elem.price) === Number(elem.priceFormDB)) ? null : 'd-none';\n\n\n            return (\n                <li key={keyItem + \"indexCart\"} className=\"basket-item\">\n                    <span className=\"basket-item-delete\" onClick={() => this.deleteItem(keyItem)}><FontAwesomeIcon\n                        icon={faTimes}/></span>\n                    <div className=\"basket-item-img\">\n                        <img src={elem.urlPhoto} alt={elem.model}/>\n                    </div>\n                    <div className=\"basket-item-info\">\n                        <p className=\"basket-item-title\">{elem.model}</p>\n                        <p><span className=\"fw-bold\">Color:</span> {elem.colorName}</p>\n                        <p><span className=\"fw-bold\">Size:</span> {elem.size}</p>\n                        <p className={classIsAvailable}>\n                            In Stock\n                        </p>\n                    </div>\n                    <div className=\"product-counter\">\n                        <button className=\"product-counter-btn\" onClick={() => this.minusAmount(keyItem)}>-</button>\n                        <input name={keyItem} type=\"text\" className=\"product-counter-input-value\" value={amount}\n                               onChange={this.handleChange}/>\n                        <button className=\"product-counter-btn\" onClick={() => this.addAmount(keyItem)}>+</button>\n                    </div>\n                    <p className=\"basket-item-title price\">\n                        <div className={classWasChangedPrice}>\n                            <div className='basket-item-old-price'>\n                            ${elem.price} \n                            </div>\n                            \n                            <div className='basket-item-new-price'>\n                            ${elem.priceFormDB}\n                            </div>\n                        </div>\n\n                        <div className={classWasntChangedPrice}>\n                        ${elem.price}\n                        </div>\n                    </p>\n                    <div className={classIsNotAvailable}>\n                        Out of Stock! {elem.reasonNotAvailable}\n                        <input type=\"button\" value={`Accept ${elem.availableAmount} items`}\n                               onClick={() => this.handleChange({\n                                   target: {\n                                       name: keyItem,\n                                       value: elem.availableAmount,\n                                   }\n                               })}/>\n                    </div>\n                </li>\n            )\n\n        });\n\n\n        return (\n            <section className=\"basket-page container\">\n                <ul className=\"basket-items-list\">\n                    {\n                        (productList.length > 0) ?\n                            (\n                                productList\n                            ) :\n                            (\n                                <div className=\"basket-empty-state\">No goods :(</div>\n                            )\n                    }\n\n\n                </ul>\n\n                <FinalOrder/>\n\n\n            </section>\n        )\n    }\n\n}\n\nconst mapStateToProps = state => {\n    return {\n        dataBasket: state.cart,\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        // changeAmount: (index, value) => {\n        //     dispatch({type: CHANGE_AMOUT_OF_ITEM, payload: {index: index, value}})\n        // },\n\n        changeArrayAmount: (obj) => {\n            dispatch({type: CHANGE_ARRAY_AMOUT_OF_ITEM, payload: {obj: obj}})\n        },\n\n        deleteItem: (array) => {\n            dispatch({type: DELETE_ITEM_TO_CART, payload: {array: array}})\n        },\n\n        // checkAvailableItem: (itemData, index) => dispatch(checkAvailableItem(itemData, index)),\n\n        checkArrayAvailableItems: (arrData) => dispatch(checkAvailableItem(arrData))\n\n\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart)","import React, {Component} from 'react'\nimport {connect} from \"react-redux\";\nimport {NavLink} from 'react-router-dom';\nimport {sendCheckout} from \"../../../actions/cart\";\n\n\nclass PlaceOrder extends Component {\n    render() {\n\n        let arrayCheckout = [];\n        let price = 0;\n        if (this.props.dataBasket.arrayProduct.length > 0) {\n            this.props.dataBasket.arrayProduct.forEach((elem) => {\n                if (elem.isAvailable === true) {\n                    price += elem.priceFormDB * elem.amount;\n                    arrayCheckout.push(\n                        <li>\n                            <span className=\"title\">{`${elem.model} x ${elem.amount}`}</span><span\n                            className=\"price\">{`$${(elem.priceFormDB * elem.amount).toFixed(2)}`}</span>\n                        </li>)\n\n\n                }\n\n            });\n\n        }\n\n        let deliveryPrice = 0;\n        this.props.dataBasket.deliveryMethods.forEach((elem) => {\n            if (elem.name === this.props.dataBasket.checkedDelivery) {\n                deliveryPrice = elem.price;\n            }\n        })\n\n        let totalPrice = price + deliveryPrice;\n        price = price.toFixed(2);\n        totalPrice = totalPrice.toFixed(2);\n\n        return (\n            <div className=\"basket-final-order\">\n                <h3 className=\"basket-final-order-title\">My order</h3>\n                <ul className=\"basket-final-order-info\">\n                    <li>\n                        <span className=\"title\">Price</span><span className=\"price\">{`$${price}`}</span>\n                    </li>\n                    <li>\n                        <span className=\"title\">Delivery</span><span className=\"price\">{`$${deliveryPrice}`}</span>\n                    </li>\n                    <li>\n                        <span className=\"title\">Total</span><span className=\"price\">{`$${totalPrice}`}</span>\n                    </li>\n                </ul>\n                <NavLink  to=\"/checkout\">\n                    <input className=\"btn-add-to-cart\" type=\"button\" value=\"Place your order\" disabled={!this.props.enableBtn} onClick={this.props.setFinishedCart}/>\n                </NavLink>\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        dataBasket: state.cart,\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setFinishedCart: () => dispatch(sendCheckout()),\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlaceOrder)","import React, {Component} from 'react';\nimport {Field, reduxForm} from 'redux-form';\nimport { connect } from 'react-redux';\nimport {requiredInput} from '../../validation'\nimport customRequiredInput from '../atomic/customRequiredInput';\n\nclass FormDeliveryCheckout extends Component {\n    render(){\n        const {handleSubmit, pristine, submitting, invalid} = this.props;\n        return (\n            <form onSubmit={handleSubmit}>\n                <div className='checkout-d-flex-row'>\n                    <div className='checkout-delivery-block'>\n                        <div className='checkout-delivery-content-label'>\n                            Country\n                        </div>\n                        <Field name=\"country\" component={customRequiredInput}\n                               type=\"text\" placeholder=\"Your country...\"\n                               className='checkout-delivery-content-input'\n                               classError='checkout-input-error-message'\n                               validate={[requiredInput]}\n                        />\n                    </div>\n                    <div  className='checkout-delivery-block'>\n                        <div className='checkout-delivery-content-label'>\n                            Zipcode\n                        </div>\n                        <Field name=\"zipcode\" component={customRequiredInput}\n                               type=\"text\" placeholder=\"Your zipcode...\"\n                               className='checkout-delivery-content-input'\n                               classError='checkout-input-error-message'\n                               validate={[requiredInput]}\n                        />\n                    </div>\n\n                    <div  className='checkout-delivery-block'>\n                        <div className='checkout-delivery-content-label'>\n                            Phone\n                        </div>\n                        <Field name=\"phone\" component={customRequiredInput}\n                               type=\"text\" placeholder=\"Your phone number...\"\n                               className='checkout-delivery-content-input'\n                               classError='checkout-input-error-message'\n                               validate={[requiredInput]}\n                        />\n                    </div>\n\n\n                </div>\n                <div className='checkout-d-flex-row'>\n                    <div  className='checkout-delivery-block'>\n                        <div className='checkout-delivery-content-label'>\n                            City\n                        </div>\n                        <Field name=\"city\" component={customRequiredInput}\n                               type=\"text\" placeholder=\"Your city...\"\n                               className='checkout-delivery-content-input'\n                               classError='checkout-input-error-message'\n                               validate={[requiredInput]}\n                        />\n                    </div>\n\n                    <div  className='checkout-delivery-block-big'>\n                        <div className='checkout-delivery-content-label'>\n                            Street\n                        </div>\n                        <Field name=\"street\" component={customRequiredInput}\n                               type=\"text\" placeholder=\"Your street...\"\n                               className='checkout-delivery-content-input'\n                               classError='checkout-input-error-message'\n                               validate={[requiredInput]}\n                        />\n                    </div>\n                </div>\n\n\n\n\n                <button name='checkoutDeliverySbm' disabled={invalid || pristine || submitting} type=\"submit\" className='checkout-next-btn' label=\"submit\">Next step</button>\n            </form>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        // initialValues: {\n        //     firstName: state.login.loggedData.firstName,\n        //     secondName: state.login.loggedData.secondName,\n        //     email: state.login.loggedData.email,\n        // }\n    }\n}\n\nFormDeliveryCheckout = reduxForm({\n    form: 'formDeliveryCheckout'\n})(FormDeliveryCheckout);\n\n\nexport default connect(mapStateToProps)(FormDeliveryCheckout);","import React, {Component} from 'react';\nimport {Field, reduxForm} from 'redux-form';\nimport { connect } from 'react-redux';\nimport {requiredInput, cardNumber, cvc, dateExp} from '../../validation'\nimport customRequiredInput from '../atomic/customRequiredInput';\nimport customCorrectEmail from '../atomic/customCorrectEmail';\n\nclass FormPaymentCheckout extends Component {\n    render(){\n        const {handleSubmit, pristine, submitting, invalid} = this.props;\n\n        return (\n            <form onChange={this.props.checkCorrectPayment(invalid || pristine || submitting)} onSubmit={handleSubmit}>\n\n                <div className='checkout-payment-content-label'>\n                    Card number\n                </div>\n                <Field name=\"cardNumber\" component={customRequiredInput}\n                       type=\"text\" placeholder=\"Full name on card...\"\n                       className='checkout-delivery-content-input'\n                       classError='input-error-message'\n                       validate={[cardNumber]}\n                />\n                <div className='checkout-payment-content-label'>\n                    Name on card\n                </div>\n                <Field name=\"nameOnCard\" component={customRequiredInput}\n                       type=\"text\" placeholder=\"Card number...\"\n                       className='checkout-delivery-content-input'\n                       classError='input-error-message'\n                       validate={[requiredInput]}\n                />\n                <div className=\"checkout-payment-below-block\">\n                    <div className=\"checkout-payment-expdate-block\">\n                        <div className='checkout-payment-content-label'>\n                            Expiry date MM/YYYY\n                        </div>\n                        <div className=\"checkout-payment-exp\">\n                            <Field name=\"expiryMonth\" component={customRequiredInput}\n                                   type=\"text\" placeholder=\"MM\"\n                                   className='checkout-payment-exp-input'\n                                   // classError='input-error-message'\n                                // validate={[dateExp]}\n                            />\n                            <span>/</span>\n                            <Field name=\"expiryYear\" component={customRequiredInput}\n                                   type=\"text\" placeholder=\"YYYY\"\n                                   className='checkout-payment-exp-input'\n                                   classError='input-error-message-exp'\n                                   validate={[dateExp]}\n                            />\n                        </div>\n                    </div>\n                    <div className=\"checkout-payment-expdate-block\">\n                        <div className='checkout-payment-content-label'>\n                            CVC\n                        </div>\n                        <Field name=\"cvcCode\" component={customRequiredInput}\n                               type=\"text\" placeholder=\"CVC\"\n                               className='checkout-delivery-content-input'\n                               classError='input-error-message'\n                               validate={[cvc]}\n                        />\n                    </div>\n                </div>\n\n\n\n\n                {/*<button name='checkoutPaymentSbm' disabled={invalid || pristine || submitting} type=\"submit\" className='checkout-next-btn' label=\"submit\">Finish checkout</button>*/}\n            </form>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        // initialValues: {\n        //     firstName: state.login.loggedData.firstName,\n        //     secondName: state.login.loggedData.secondName,\n        //     email: state.login.loggedData.email,\n        // }\n    }\n}\n\nFormPaymentCheckout = reduxForm({\n    form: 'formPaymentCheckout'\n})(FormPaymentCheckout);\n\n\nexport default connect(mapStateToProps)(FormPaymentCheckout);","import React, {Component} from 'react';\nimport {connect} from \"react-redux\";\nimport {NavLink} from 'react-router-dom';\nimport {CLOSE_MODAL_SUCCESS_ORDER} from \"../../../../actions/cart\";\n\nimport \"./SuccessOrder.scss\"\n\n\nclass SuccessOrder extends Component {\n\n    render () {\n\n        let modalSuccessOrder = (this.props.dataBasket.windows.successOrder) ? 'modal-success-order' : 'd-none';\n        let modalSuccessBackdrop = modalSuccessOrder === 'modal-success-order' ? 'modal-backdrop' : null;\n        return (\n            <div className={modalSuccessBackdrop}>\n            <div className={modalSuccessOrder}>\n                <p className=\"modal-success-order-text\">\n                    Your order was successfully placed in our store.\n                </p>\n                <p className=\"modal-success-order-text\">\n                    Details of your order was sent to your email\n                </p>\n\n                <p className=\"modal-success-order-text-number\">\n                   ORDER ID: {this.props.dataBasket.orderNo}\n                </p>\n                <NavLink to=\"/\">\n                    <input type=\"button\" onClick={this.props.closeSuccessOrder} value=\"Ok\" className=\"modal-success-order-btn\"/>\n                </NavLink>\n\n            </div>\n        </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        dataBasket: state.cart,\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n\n        closeSuccessOrder: () => {\n            dispatch({type: CLOSE_MODAL_SUCCESS_ORDER})\n        },\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SuccessOrder)","import React, {Component} from 'react';\nimport {Field, reduxForm} from 'redux-form';\nimport {requiredInput} from '../../validation'\nimport customRequiredInput from './customRequiredInput';\n\nclass FormLogin extends Component {\n    render(){\n        const {handleSubmit} = this.props;\n        return (\n            <form onSubmit={handleSubmit} className='login-menu_form' >\n\n                <div className='field-wrapper' >\n                    <label className='login-form-input-title'>E-mail\n                    <Field name=\"email\" component={customRequiredInput}\n                           className='login-form-input'\n                           classError='input-error-message'\n                           type=\"text\" placeholder=\"Your email...\"\n                           validate={[requiredInput]}\n                    />\n</label>\n                    <p className='login-form-input-title'>Password</p>\n                    <Field name=\"password\" component={customRequiredInput}\n                           className='login-form-input'\n                           classError='input-error-message'\n                           type=\"password\" placeholder=\"Your email...\"\n                           validate={[requiredInput]}\n                    />\n                    {/*<p>Forgotten your password?</p>*/}\n                </div>\n\n                <button name='loginSbm' type=\"submit\" className='login-form_btn' label=\"submit\">Log In</button>\n            </form>\n        );\n    }\n}\n\n\n\n\nexport default reduxForm({form: 'formLogin'})(FormLogin);","import React, {Component} from 'react';\nimport {Field, reduxForm} from 'redux-form';\nimport {correctEmail} from '../../../../validation'\nimport customRequiredInput from '../../../atomic/customRequiredInput';\n\nclass FormCheckoutByEmail extends Component {\n    render(){\n        const {handleSubmit, pristine, submitting, invalid} = this.props;\n        return (\n            <form onSubmit={handleSubmit} className='login-menu_form' >\n\n                <div className='field-wrapper' >\n                    <p className='login-form-input-title'>E-mail</p>\n                    <Field name=\"email\" component={customRequiredInput}\n                           className='login-form-input'\n                           classError='input-error-message'\n                           type=\"text\" placeholder=\"Your email...\"\n                           validate={[correctEmail]}\n                    />\n\n                    {/*<p>Forgotten your password?</p>*/}\n                </div>\n\n                <button name='loginSbm' disabled={invalid || pristine || submitting} type=\"submit\" className='login-form_btn' label=\"submit\">Send order</button>\n            </form>\n        );\n    }\n}\n\n\n\n\nexport default reduxForm({form: 'formCheckoutByEmail'})(FormCheckoutByEmail);","import React, {Component} from 'react';\nimport {connect} from \"react-redux\";\nimport FormLogin from \"../../../atomic/FormLogin\";\n\nimport FormCheckoutByEmail from \"./FormCheckoutByEmail\"\n\nimport {checkLoginBeforeCheckout} from \"../../../../actions/login\";\nimport {CLOSE_MODAL_UNSUCCESS_ORDER, sendOrderByEmail} from \"../../../../actions/cart\";\n\nimport \"./UnsuccessOrder.scss\"\n\n\nclass UnsuccessOrder extends Component {\n\n    handleSubmitLogin = (values) => {\n\n        let sendLogin = {\n            email: values.email,\n            password: values.password\n        };\n\n        console.log('handleSubmitLogin')\n        this.props.checkLoginBeforeCheckout(sendLogin);\n\n    }\n\n    handleSubmitEmail = (values) => {\n\n\n        let sendObj = {\n            ...this.props.dataBasket,\n            userMail: values.email\n        }\n\n        console.log('handleSubmitEmail')\n        this.props.sendOrderByEmail(sendObj);\n\n    }\n\n    render () {\n\n        // let modalUnsuccessOrder = (this.props.dataBasket.windows.unsuccessOrder) ? 'modal-unsuccess-order' : 'd-none';\n\n        let modalUnsuccessOrderFailLogin = (this.props.dataBasket.windows.invalidLogin) ? null : 'd-none';\n\n        return (\n            <div className=\"modal-backdrop\">\n            <div className=\"modal-unsuccess-order\">\n                <div data-btn=\"btn-login-checkout-up-close\" className=\"login-cancel-btn\"></div>\n                <p className=\"modal-unsuccess-order-title\">\n                    You are not logged. Please enter your login and password or your e-mail to proceed checkout\n                </p>\n\n                <p className={modalUnsuccessOrderFailLogin}>\n                    Incorrect login. Try again\n                </p>\n\n                <FormLogin onSubmit={this.handleSubmitLogin}/>\n\n                <FormCheckoutByEmail onSubmit={this.handleSubmitEmail}/>\n\n            </div>\n        </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        dataBasket: state.cart,\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n\n        closeUnsuccessOrder: () => {\n            dispatch({type: CLOSE_MODAL_UNSUCCESS_ORDER})\n        },\n\n        checkLoginBeforeCheckout: (loginForm) => dispatch(checkLoginBeforeCheckout(loginForm)),\n\n        sendOrderByEmail: (loginForm) => dispatch(sendOrderByEmail(loginForm)),\n\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UnsuccessOrder)","import React, {Component} from 'react';\nimport {connect} from \"react-redux\";\nimport {NavLink} from 'react-router-dom';\nimport {CLOSE_MODAL_SUCCESS_ORDER, CLOSE_MODAL_FINISH_ORDER_AFTER_LOGIN, sendCheckout} from \"../../../../actions/cart\";\n\n// import \"./SuccessOrder.scss\"\n\n\nclass FinishAfterLogin extends Component {\n\n    render () {\n\n        let modalFinishAfterLogin = (this.props.dataBasket.windows.finishAfterLogin) ? 'modal-success-order modal-success-order-after-login' : 'd-none';\n\n        return (\n            <div className={modalFinishAfterLogin}>\n                <p className=\"modal-success-order-text\">\n                    You are successfully log in.\n                </p>\n\n                <NavLink to=\"/\">\n                    <input type=\"button\" onClick={this.props.setFinishedCart} value=\"Finish checkout\" className=\"modal-success-order-after-login-btn\"/>\n                </NavLink>\n\n                    <input type=\"button\" onClick={this.props.finishAfterLogin} value=\"Back to payment\" className=\"modal-success-order-after-login-btn\"/>\n\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        dataBasket: state.cart,\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n\n        finishAfterLogin: () => {\n            dispatch({type: CLOSE_MODAL_FINISH_ORDER_AFTER_LOGIN})\n        },\n\n        setFinishedCart: () => dispatch(sendCheckout()),\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FinishAfterLogin)","import React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport PlaceOrder from \"./PlaceOrder\";\nimport FormDeliveryCheckout from \"./FormDeliveryCheckout\";\nimport FormPaymentCheckout from \"./FormPaymentCheckout\";\n\nimport SuccessOrder from \"./Modals/SuccessOrder\";\nimport UnsuccessOrder from \"./Modals/UnsuccessOrder\";\nimport FinishAfterLogin from \"./Modals/FinishAfterLogin\";\n\nimport {CHANGE_DELIVERY_METHOD} from \"../../actions/cart\";\n\nimport \"./Checkout.scss\"\n\nclass Checkout extends Component {\n\n    state = {\n        showDelivery: false,\n        showPayment: false,\n        finishOrder: false\n    }\n\n    clickShowDelivery = () => {\n        this.setState({\n            showDelivery: true,\n        })\n    }\n\n    handleDeliverySubmit = (values) => {\n\n        let sendObject = {\n            country: values.country,\n            zipcode: values.zipcode,\n            city: values.city,\n            street: values.street,\n            phone: values.phone\n        };\n        // this.props.profileChangePersonal(sendObject);\n\n        this.setState({\n            showPayment: true,\n        })\n\n    }\n\n    handlePaymentSubmit = (values) => {\n\n        this.setState({\n            finishOrder: true,\n        })\n\n    }\n\n    checkCorrectPayment = (value) => {\n\n        // console.log('CALL checkCorrectPayment', value)\n        this.setState({\n            finishOrder: !value,\n        })\n    }\n\n    handleLoginUnsuccessForm = (e) => {\n\n\n        if (e.target.dataset.btn !== 'btn-login-checkout-up-close') {\n            e.stopPropagation();\n        }\n        // if (e.target.dataset.btn === 'btn-login-down-close') {\n        //     this.props.closeLoginForm();\n        //     this.closeModal();\n        //     this.clickOnRegistration();\n        // }\n\n    }\n\n\n    render() {\n\n        let arrayProducts = [];\n\n        arrayProducts = this.props.dataBasket.arrayProduct.map((elem) => {\n            if (elem.isAvailable) {\n\n                return (\n                    <li className=\"checkout-product-item\">\n                        <img src={elem.urlPhoto} alt=\"\" className=\"checkout-product-item-img\"/>\n                        <div className=\"checkout-product-item-block\">\n                            <div className=\"checkout-product-item-details\">\n                                <div className=\"checkout-product-item-description\">\n                                    <p className=\"checkout-product-item-model\">\n                                        {elem.model}\n                                    </p>\n                                    <p className=\"checkout-product-item-color\">\n                                        {`Color - ${elem.colorName}`}\n                                    </p>\n                                    <p className=\"checkout-product-item-size\">\n                                        {`Size - ${elem.size}`}\n                                    </p>\n                                </div>\n                            </div>\n                            <div className=\"checkout-product-item-price\">\n                                <p>{`${elem.priceFormDB} x ${elem.amount}`}</p>\n                                <p className=\"checkout-product-item-price-bold\">\n                                    {`$${(elem.amount * elem.priceFormDB).toFixed(2)}`}\n                                </p>\n                            </div>\n\n                        </div>\n                    </li>\n                )\n\n            }\n            return null;\n\n\n        })\n\n\n        let arrayDelivery = [];\n        if (this.props.dataBasket.deliveryMethods) {\n            arrayDelivery = this.props.dataBasket.deliveryMethods.map((elem) => {\n\n                return (\n                    <li key={elem.name}>\n                        <input\n                            className=\"delivery-input\"\n                            type=\"radio\"\n                            name=\"deliveryFilter\"\n                            value={elem.name}\n                            checked={elem.name === this.props.dataBasket.checkedDelivery}\n                            id={elem.name}\n                            onChange={() => this.props.handleDeliveryRadio(elem.name)}\n                        />\n                        <label\n                            className=\"delivery-link\"\n                            title={elem.name}\n                            htmlFor={elem.name}\n                        >\n                            <div className=\"delivery-link-block\">\n                                <p>\n                                    Delivery - {elem.name}\n                                </p>\n                                <p>\n                                    Estimated delivery - {elem.duration} days\n                                </p>\n                                <p>\n                                    Price - {elem.price}\n                                </p>\n                            </div>\n\n                        </label>\n                    </li>\n                )\n\n            })\n        }\n\n        let showDeliveryClass = (this.state.showDelivery) ? \"checkout-delivery-details\" : \"d-none\";\n        let showPaymentClass = (this.state.showPayment) ? \"checkout-payment\" : \"d-none\";\n\n        return (\n            <section className=\"basket-page container\">\n                <div className=\"checkout\">\n                    <ul className=\"checkout-product-list\">\n                        {arrayProducts}\n                    </ul>\n\n                    <div className=\"checkout-delivery-method\">\n                        <p className=\"checkout-delivery-details-title\">\n                            Choose one of delivery method\n                        </p>\n\n                        <ul className=\"checkout-delivery-list\">\n                            {arrayDelivery}\n                        </ul>\n\n                        <input type=\"button\" value=\"Next step\" onClick={this.clickShowDelivery} className=\"checkout-next-btn\"/>\n                    </div>\n\n                    <div className={showDeliveryClass}>\n\n                        <p className=\"checkout-delivery-details-title\">\n                            Please enter your address\n                        </p>\n\n                        <FormDeliveryCheckout onSubmit={this.handleDeliverySubmit}/>\n                    </div>\n\n                    <div className={showPaymentClass}>\n                        <p className=\"checkout-delivery-details-title\">\n                            Please enter your payment information\n                        </p>\n\n                        <FormPaymentCheckout checkCorrectPayment={this.checkCorrectPayment} onSubmit={this.handlePaymentSubmit}/>\n                    </div>\n                </div>\n\n                <PlaceOrder enableBtn={this.state.finishOrder}/>\n\n                <SuccessOrder />\n\n\n                <div onClick={this.handleLoginUnsuccessForm}>\n                    {this.props.dataBasket.windows.unsuccessOrder && (\n                        <UnsuccessOrder />\n                    )}\n                </div>\n\n                <FinishAfterLogin />\n\n\n\n            </section>\n\n\n        )\n    }\n\n}\n\nconst mapStateToProps = state => {\n    return {\n        dataBasket: state.cart,\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n\n    handleDeliveryRadio: (radio) => {\n        dispatch({type: CHANGE_DELIVERY_METHOD, payload: {method: radio}})\n    },\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Checkout)","import React, { Component } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport {\n  selectFilters,\n  clearProductList\n} from \"../../../../actions/filterActions\";\n\nimport \"./category-filter.scss\";\n\nclass CategoryFilter extends Component {\n  changeCategoryFilters = (\n    newCategory,\n    newSubCategory,\n    newFurtherSubCategory\n  ) => {\n    let { currentFilters } = this.props;\n\n    this.props.clearProductList();\n\n    this.props.selectFilters(currentFilters, {\n      category: newCategory,\n      subCategory: newSubCategory,\n      furtherSubCategory: newFurtherSubCategory,\n      colorName: currentFilters.colorName,\n      size: currentFilters.size,\n      price: currentFilters.price,\n      pageNo: 1\n    });\n  };\n\n  render() {\n    let { category } = this.props.urlParams;\n    let { navMenuItems } = this.props;\n\n    let subCategories = navMenuItems.map(cat => {\n      if (cat.categoryName === category) {\n        return cat.subCategoryList.map(subCat => {\n          let furtherSubCatList = subCat.furtherSubCategoryList.map(\n            furtherSubCat => {\n              if (furtherSubCat.active) {\n                return (\n                  <li\n                    className=\"further-sub-category-item\"\n                    key={furtherSubCat._id}\n                  >\n                    <NavLink\n                      to={furtherSubCat.furtherSubCategoryUrl}\n                      className=\"further-sub-category-link\"\n                      activeClassName=\"further-sub-category-link-active\"\n                      onClick={() =>\n                        this.changeCategoryFilters(\n                          cat.categoryName,\n                          subCat.subCategoryName,\n                          furtherSubCat.furtherSubCategoryName\n                        )\n                      }\n                    >\n                      {furtherSubCat.furtherSubCategoryName}\n                    </NavLink>\n                  </li>\n                );\n              }\n              return null;\n            }\n          );\n\n          if (subCat.active) {\n            return (\n              <div className=\"category-item\" key={subCat._id}>\n                <div className=\"subcat-block\">\n                  <NavLink\n                    to={subCat.subCategoryUrl}\n                    className=\"category-item-title\"\n                    activeClassName=\"category-item-title-active\"\n                    onClick={() =>\n                      this.changeCategoryFilters(\n                        cat.categoryName,\n                        subCat.subCategoryName\n                      )\n                    }\n                  >\n                    {subCat.subCategoryName}\n                  </NavLink>\n                </div>\n                <ul className=\"category-item-sub-menu\">{furtherSubCatList}</ul>\n              </div>\n            );\n          }\n          return null;\n        });\n      }\n      return null;\n    });\n\n    let categoryFilters = navMenuItems.map(cat => {\n      if (cat.categoryName === category) {\n        return (\n          <div className=\"category-list border-category\" key={cat._id}>\n            <div className=\"cat-block\">\n              <NavLink\n                to={cat.categoryUrl}\n                className=\"filter-title\"\n                activeClassName=\"filter-title-active\"\n                onClick={() => this.changeCategoryFilters(cat.categoryName)}\n              >\n                {`Shop ${cat.categoryName}`}\n              </NavLink>\n            </div>\n            <div className=\"category-list-menu\">{subCategories}</div>\n          </div>\n        );\n      }\n      return null;\n    });\n\n    return <>{categoryFilters}</>;\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    navMenuItems: state.navMenu.navMenuItems,\n    currentFilters: state.filters.selected,\n    products: state.filters.products\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  {\n    selectFilters,\n    clearProductList\n  }\n)(CategoryFilter);\n","import React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport Preloader from \"../../../Preloader\";\n\nimport {\n    getFilterElems,\n    selectFilters,\n    clearProductList\n} from \"../../../../actions/filterActions\";\n\nimport \"./color-filter.scss\";\n\nclass ColorFilter extends Component {\n    // Fetching our list of colors from server\n    componentDidMount = () => {\n        this.props.getFilterElems();\n    };\n\n    // Actualizing the checked radio color in store\n    handleColorRadio = newColorName => {\n        let {currentFilters} = this.props;\n\n        this.props.clearProductList();\n\n        // If user choses \"all colors\" - delete colorName from store to not filter by color\n        if (newColorName === \"all colors\") {\n            this.props.selectFilters(currentFilters, {\n                category: currentFilters.category,\n                subCategory: currentFilters.subCategory,\n                furtherSubCategory: currentFilters.furtherSubCategory,\n                colorName: undefined,\n                size: currentFilters.size,\n                price: currentFilters.price,\n                pageNo: 1,\n            });\n            // If user choses concret color - add the chosen colorName into store to filter by this color\n        } else {\n            this.props.selectFilters(currentFilters, {\n                category: currentFilters.category,\n                subCategory: currentFilters.subCategory,\n                furtherSubCategory: currentFilters.furtherSubCategory,\n                colorName: newColorName,\n                size: currentFilters.size,\n                price: currentFilters.price,\n                pageNo: 1,\n            });\n        }\n    };\n\n    render() {\n        const {\n            colorFilters,\n            isFilterFetching,\n            currentColorName\n        } = this.props;\n\n        // The list of our unique colors? that we have in db\n        let colorItems = colorFilters.map(color => {\n            return (\n                <li className=\"filter-color-panel-item\" key={color._id}>\n                    <input\n                        className=\"filter-color-panel-input\"\n                        type=\"radio\"\n                        name=\"colorFilters\"\n                        value={color.colorName}\n                        checked={currentColorName === color.colorName}\n                        id={color.colorName}\n                        onChange={() => this.handleColorRadio(color.colorName)}\n                    />\n                    <label\n                        className=\"filter-color-panel-link\"\n                        title={color.colorName}\n                        style={{backgroundColor: color.cssHexCode}}\n                        htmlFor={color.colorName}\n                    />\n                </li>\n            );\n        });\n\n        return (\n            <div className=\"category-filter-color border-category\">\n                <div className=\"color-filter-header\">\n                    <p className=\"filter-title\">color</p>\n                    <label className=\"reset-color-filters\">\n                        all colors\n                        <input\n                            type=\"radio\"\n                            className=\"filter-color-panel-input\"\n                            name=\"colorFilters\"\n                            value=\"all colors\"\n                            onChange={() => this.handleColorRadio(\"all colors\")}\n                        />\n                    </label>\n                </div>\n                <ul className=\"filter-color-panel\">\n                    {isFilterFetching ? <Preloader/> : colorItems}\n                </ul>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        colorFilters: state.filters.colorFilters,\n        isFilterFetching: state.filters.isFilterFetching,\n        currentFilters: state.filters.selected, //The object, where we store all our actual filters\n        currentColorName: state.filters.selected.colorName\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    {getFilterElems, selectFilters, clearProductList}\n)(ColorFilter);\n","import React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport Select from \"react-select\";\n\nimport {selectFilters, selectSize, clearProductList} from \"../../../../actions/filterActions\";\n\nimport Preloader from \"../../../Preloader\";\n\nimport \"./sizeFilter.scss\";\n\nclass SizeFilter extends Component {\n    sizeFilterChange = selectedOption => {\n        this.props.selectSize(selectedOption);\n\n        this.props.clearProductList();\n        let {currentFilters} = this.props;\n\n        if (selectedOption.value === \"all sizes\") {\n            this.props.selectFilters(currentFilters, {\n                category: currentFilters.category,\n                subCategory: currentFilters.subCategory,\n                furtherSubCategory: currentFilters.furtherSubCategory,\n                colorName: currentFilters.colorName,\n                size: undefined,\n                price: currentFilters.price,\n                pageNo: 1,\n            });\n        } else {\n            this.props.selectFilters(currentFilters, {\n                category: currentFilters.category,\n                subCategory: currentFilters.subCategory,\n                furtherSubCategory: currentFilters.furtherSubCategory,\n                colorName: currentFilters.colorName,\n                size: selectedOption.value,\n                price: currentFilters.price,\n                pageNo: 1,\n            });\n        }\n    };\n\n    render() {\n        const {\n            sizeFilters,\n            isFilterFetching,\n            currentSizeOption,\n            currentFilters\n        } = this.props;\n\n        let {category, subCategory, furtherSubCategory} = currentFilters;\n        let currentCategories = `${\n            furtherSubCategory\n                ? category + \"-\" + subCategory + \"-\" + furtherSubCategory\n                : subCategory\n                ? category + \"-\" + subCategory\n                : category\n            }`;\n\n        let currentCategoriesLength;\n\n        if (currentCategories.includes(\"-\")) {\n            currentCategoriesLength = currentCategories.split(\"-\").length;\n        } else {\n            currentCategoriesLength = 1;\n        }\n\n        let relevantSizeOptions = sizeFilters\n            .map(size => {\n                let sizeIsPresentInCategories = size.categories.some(cat => {\n                    let splitedCat = cat.split(\"-\");\n                    splitedCat.length = currentCategoriesLength;\n                    let sizeCategories = splitedCat.join(\"-\");\n                    return sizeCategories === currentCategories;\n                });\n\n                if (sizeIsPresentInCategories) {\n                    return {\n                        value: size.value,\n                        label: size.value\n                    };\n                }\n            })\n            .filter(item => {\n                return item !== undefined;\n            });\n\n        relevantSizeOptions.unshift({\n            value: \"all sizes\",\n            label: \"All sizes\"\n        });\n\n        return (\n            <>\n                {isFilterFetching ? (\n                    <Preloader/>\n                ) : (\n                    <><p className=\"filter-title\">Size</p>\n                        <Select\n                            value={currentSizeOption}\n                            onChange={this.sizeFilterChange}\n                            options={relevantSizeOptions}\n                        />\n                    </>\n                )}\n\n            </>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        sizeFilters: state.filters.sizeFilters,\n        currentSizeOption: state.filters.currentSizeOption,\n        isFilterFetching: state.filters.isFilterFetching,\n        currentFilters: state.filters.selected\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    {selectFilters, selectSize, clearProductList}\n)(SizeFilter);\n","import React, {Component} from \"react\";\nimport InputRange from \"react-input-range\";\nimport {connect} from \"react-redux\";\n\nimport {selectFilters, selectPrice, clearProductList} from \"../../../../actions/filterActions\";\n\nimport \"react-input-range/lib/css/index.css\";\nimport \"./price-filter.scss\";\n\nclass PriceFilter extends Component {\n    componentDidMount = () => {\n        let {category, subCategory, furtherSubCategory} = this.props.urlParams;\n        let {currentFilters} = this.props;\n\n        let newFilters = {\n            category: category,\n            subCategory: subCategory,\n            furtherSubCategory: furtherSubCategory,\n            colorName: currentFilters.colorName,\n            size: currentFilters.size,\n            price: currentFilters.price,\n            pageNo: 1,\n        };\n\n\n\n        this.props.selectFilters(currentFilters, newFilters);\n    };\n\n    onPriceFilter = price => {\n        let {currentFilters} = this.props;\n\n        this.props.clearProductList();\n\n        let newFilters = {\n            category: currentFilters.category,\n            subCategory: currentFilters.subCategory,\n            furtherSubCategory: currentFilters.furtherSubCategory,\n            colorName: currentFilters.colorName,\n            size: currentFilters.size,\n            price: price,\n            pageNo: 1,\n        };\n        this.props.selectFilters(currentFilters, newFilters);\n    };\n\n    render() {\n        return (\n            <InputRange\n                formatLabel={value => `$ ${value}`}\n                maxValue={1000}\n                minValue={5}\n                step={5}\n                value={this.props.currentFilters.price}\n                allowSameValues={true}\n                draggableTrack={true}\n                onChange={this.props.selectPrice}\n                onChangeComplete={this.onPriceFilter}\n            />\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        currentFilters: state.filters.selected,\n        selectedPrice: state.filters.selected.price\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    {selectFilters, selectPrice, clearProductList}\n)(PriceFilter);\n","import React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport {withRouter} from \"react-router-dom\";\n\nimport {\n    selectFilters,\n    selectSize,\n    selectPrice\n} from \"../../../actions/filterActions\";\n\nimport CategoryFilter from \"./CategoryFilter\";\nimport ColorFilter from \"./ColorFilter\";\nimport SizeFilter from \"./SizeFilter\";\nimport PriceFilter from \"./PriceFilter\";\n\nimport \"./filters.scss\";\n\nclass Filters extends Component {\n    // Method for reseting all filters\n    filterReset = () => {\n        const {currentFilters, selectFilters} = this.props;\n\n        this.props.selectSize(null);\n        this.props.selectPrice({min: 5, max: 1000});\n\n        selectFilters(currentFilters, {\n            category: currentFilters.category,\n            subCategory: undefined,\n            furtherSubCategory: undefined,\n            colorName: undefined,\n            size: undefined,\n            price: {min: 5, max: 1000},\n            pageNo: 1,\n        });\n\n        this.props.history.push(`/${currentFilters.category}`);\n    };\n\n    render() {\n        return (\n            <div className=\"category-filter\">\n                <div className=\"category-filter-active border-category\">\n                    <div className=\"filter-active-title\">\n                        <h3>filters</h3>\n                        <input\n                            className=\"reset-color-filters\"\n                            type=\"button\"\n                            value=\"reset\"\n                            onClick={this.filterReset}\n                        />\n                    </div>\n                </div>\n                <CategoryFilter urlParams={this.props.urlParams}/>\n                <PriceFilter urlParams={this.props.urlParams}/>\n                <ColorFilter/>\n                <SizeFilter/>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        sizeOptions: state.filters.sizeOptions,\n        currentSizeOption: state.filters.currentSizeOption,\n        isFilterFetching: state.filters.isFilterFetching,\n        currentFilters: state.filters.selected\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    {selectFilters, selectSize, selectPrice}\n)(withRouter(Filters));\n","// @flow\n\nimport * as React from \"react\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {NavLink} from \"react-router-dom\";\nimport \"./empty-state.scss\";\n\ntype\nProps = {\n    isFilterResultEmpty: boolean,\n    category: string,\n    subCategory: string,\n    furtherSubCategory: string,\n    colorName: string,\n    size: string,\n    price: Object,\n    returnToMainPage: boolean,\n    title: string\n\n};\nexport default class EmptyState extends React.Component<Props> {\n    render() {\n        let {\n            isFilterResultEmpty,\n            category,\n            subCategory,\n            furtherSubCategory,\n            colorName,\n            size,\n            price,\n            returnToMainPage,\n            title\n        } = this.props;\n\n        return (\n            <div className=\"empty-state\">\n                <FontAwesomeIcon icon=\"question\" className=\"empty-state-icon\"/>\n                <p className=\"empty-state-title\">{title}</p>\n                {isFilterResultEmpty ? (\n                    <table>\n                        <tbody>\n                        <tr>\n                            <td className=\"filter-option-name cell\">Categories:</td>\n                            <td className=\"filter-option-value cell\">{`${\n                                furtherSubCategory\n                                    ? category + \" - \" + subCategory + \" - \" + furtherSubCategory\n                                    : subCategory\n                                    ? category + \" - \" + subCategory\n                                    : category\n                                }`}</td>\n                        </tr>\n                        <tr>\n                            <td className=\"filter-option-name cell\">Color:</td>\n                            <td className=\"filter-option-value cell\">\n                                {colorName ? colorName : \"All colors\"}\n                            </td>\n                        </tr>\n                        <tr>\n                            <td className=\"filter-option-name cell\">Size:</td>\n                            <td className=\"filter-option-value cell\">\n                                {size ? size : \"All sizes\"}\n                            </td>\n                        </tr>\n                        <tr>\n                            <td className=\"filter-option-name cell\">Price:</td>\n                            <td className=\"filter-option-value cell\">{`From $${\n                                price.min\n                                } to $${price.max}`}</td>\n                        </tr>\n                        </tbody>\n                    </table>\n                ) : null}\n\n                {returnToMainPage ? (\n                    <NavLink to=\"/\">Return to main page </NavLink>\n                ) : null}\n            </div>\n        );\n    }\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport InfiniteScroll from \"react-infinite-scroller\";\n\nimport {\n  getFilteredProducts,\n  selectFilters,\n  setNewPage\n} from \"../../actions/filterActions\";\n\nimport Filters from \"./Filters\";\nimport BreadCrumbs from \"../BreadCrumbs\";\nimport ProductCard from \"../ProductCard\";\nimport Preloader from \"../Preloader\";\nimport EmptyState from \"../EmptyState\";\nimport SearchDropDownList from \"../SearchDropDownList\";\nimport ScrollBtn from \"../ScrollBtn\";\n\nimport \"./filteredProductList.scss\";\n\nclass FilteredProductList extends Component {\n  addNumberPage = () => {\n    if (!this.props.isProductFetching) {\n      let currentValue = this.props.currentFilters.pageNo;\n\n      // let currentValue = page;\n      currentValue++;\n\n      console.log(\"currentValue\", currentValue);\n\n      let { currentFilters } = this.props;\n\n      this.props.selectFilters(currentFilters, {\n        category: currentFilters.category,\n        subCategory: currentFilters.subCategory,\n        furtherSubCategory: currentFilters.furtherSubCategory,\n        colorName: currentFilters.colorName,\n        size: currentFilters.size,\n        price: currentFilters.price,\n        pageNo: currentValue\n      });\n    }\n\n    // this.props.setNewPage(currentValue);\n  };\n\n  componentDidMount = () => {\n    let { category, subCategory, furtherSubCategory } = this.props.match.params;\n    this.props.getFilteredProducts(category, subCategory, furtherSubCategory);\n  };\n\n  render() {\n    let { products, isProductFetching, currentFilters } = this.props;\n\n    let filteredProductList = products.map(product => {\n      if (currentFilters.colorName && !currentFilters.size) {\n        return product.productFeatures.map(color => {\n          if (currentFilters.colorName === color.colorName) {\n            return (\n              <ProductCard\n                productUrl={product.productUrl}\n                key={`${product.productUrl}${color._id}`}\n                // key={color._id}\n                imageUrl={color.imageUrls[0]}\n                model={product.model}\n                colorName={color.colorName}\n                currentPrice={product.currentPrice}\n                previousPrice={product.previousPrice}\n                currentFilters={currentFilters}\n              />\n            );\n          }\n          return null;\n        });\n      } else if (currentFilters.size && !currentFilters.colorName) {\n        return product.productFeatures.map(color => {\n          let isSizePresent = color.sizes.some(size => {\n            return currentFilters.size === size.size && size.quantity > 0;\n          });\n\n          if (isSizePresent) {\n            return (\n              <ProductCard\n                productUrl={product.productUrl}\n                key={`${product.productUrl}${color._id}`}\n                // key={color._id}\n                imageUrl={color.imageUrls[0]}\n                model={product.model}\n                colorName={color.colorName}\n                currentPrice={product.currentPrice}\n                previousPrice={product.previousPrice}\n                currentFilters={currentFilters}\n              />\n            );\n          }\n          return null;\n        });\n      } else if (currentFilters.colorName && currentFilters.size) {\n        return product.productFeatures.map(color => {\n          let isSizePresent = color.sizes.some(size => {\n            return currentFilters.size === size.size && size.quantity > 0;\n          });\n\n          if (currentFilters.colorName === color.colorName && isSizePresent) {\n            return (\n              <ProductCard\n                productUrl={product.productUrl}\n                key={`${product.productUrl}${color._id}`}\n                // key={color._id}\n                imageUrl={color.imageUrls[0]}\n                model={product.model}\n                colorName={color.colorName}\n                currentPrice={product.currentPrice}\n                previousPrice={product.previousPrice}\n                currentFilters={currentFilters}\n              />\n            );\n          }\n          return null;\n        });\n      } else {\n        return product.productFeatures.map(color => {\n          return (\n            <ProductCard\n              productUrl={product.productUrl}\n              key={`${product.productUrl}${color._id}`}\n              // key={color._id}\n              imageUrl={color.imageUrls[0]}\n              model={product.model}\n              colorName={color.colorName}\n              currentPrice={product.currentPrice}\n              previousPrice={product.previousPrice}\n              currentFilters={currentFilters}\n            />\n          );\n        });\n      }\n    });\n\n    let {\n      category,\n      subCategory,\n      furtherSubCategory,\n      colorName,\n      size,\n      price\n    } = currentFilters;\n\n    let filterEmptyState = (\n      <EmptyState\n        isFilterResultEmpty={true}\n        category={category}\n        subCategory={subCategory}\n        furtherSubCategory={furtherSubCategory}\n        colorName={colorName}\n        size={size}\n        price={price}\n        returnToMainPage={false}\n        title=\"By the following filtering options you specified, no products were found. Please try the other filters.\"\n      />\n    );\n\n    return (\n      <>\n        <ScrollBtn scrollStepInPx=\"100\" delayInMs=\"12\" />\n        <SearchDropDownList />\n        <BreadCrumbs categoryAway={this.props.match.params} />\n        <section className=\"category-block\">\n          <div className=\"container\">\n            <div className=\"category-content\">\n              <Filters urlParams={this.props.match.params} />\n\n              <div className=\"category-product-listing\">\n                <InfiniteScroll\n                  className=\"listing-products\"\n                  pageStart={0}\n                  loadMore={this.addNumberPage}\n                  hasMore={\n                    this.props.currentFilters.pageNo <=\n                    this.props.currentFilters.amountPages\n                  }\n                  // useWindow={false}\n                  threshold={100}\n                >\n                  {this.props.products.length < 1 && !isProductFetching\n                    ? filterEmptyState\n                    : filteredProductList}\n                </InfiniteScroll>\n\n                {isProductFetching ? <Preloader /> : null}\n              </div>\n            </div>\n          </div>\n        </section>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    products: state.filters.products,\n    isProductFetching: state.filters.isProductFetching,\n    currentFilters: state.filters.selected\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { getFilteredProducts, selectFilters, setNewPage }\n)(FilteredProductList);\n","// @flow\n\nimport * as React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport axios from \"axios\";\nimport \"./static-pages.scss\";\n\ntype Props = {};\n\ntype State = {\n  pageTitle: string,\n  content: Array<Object>\n};\nexport default class AboutUs extends React.Component <Props, State> {\n  state = {\n    pageTitle: \"\",\n    content: []\n  };\n\n  componentDidMount() {\n    axios.get(\"/about-us\").then(res => {\n      this.setState({\n        pageTitle: res.data.title,\n        content: res.data.content\n      });\n    });\n  }\n\n  render() {\n    const content = this.state.content;\n    let pageContent = content.map(elem => {\n      return (\n        <div className=\"about-us-paragraph\">\n          <h4 className=\"about-us-title\"> &bull; {elem.title} &bull;</h4>\n          {elem.content}\n        </div>\n      );\n    });\n\n    return (\n      <>\n        <Helmet>\n          <title>{this.state.pageTitle}</title>\n        </Helmet>\n        <div className=\"container\">\n          <h2 className=\"sub-page-title\">{this.state.pageTitle}</h2>\n          <h3 className=\"sub-page-sub-title\">We have a lot to tell you</h3>\n          <div className=\"about-us-wrapper\">          \n              {pageContent[0]}\n              {pageContent[1]}\n              {pageContent[2]}\n              {pageContent[3]}\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n","// @flow\n\nimport * as React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport axios from \"axios\";\nimport \"./static-pages.scss\";\n\ntype Props = {};\n\ntype State = {\n  pageTitle: string,\n  content: Array<Object>\n};\n\nexport default class OurPolicy extends React.Component<Props, State> {\n  state = {\n    pageTitle: \"\",\n    content: []\n  };\n\n  componentDidMount() {\n    axios.get(\"/our-policy\").then(res => {\n      console.log(res);\n      this.setState({\n        pageTitle: res.data.title,\n        content: res.data.content\n      });\n    });\n  }\n\n  render() {\n    const content = this.state.content;\n    let pageContent = content.map(elem => {\n      return (\n        <li className=\"list-item\">\n          <span class=\"list-item-bold\">{elem.title}</span>\n          {elem.content}\n        </li>\n      );\n    });\n\n    return (\n      <>\n        <Helmet>\n          <title>{this.state.pageTitle}</title>\n        </Helmet>\n        <h2 className=\"sub-page-title\">{this.state.pageTitle}</h2>\n        <h3 className=\"sub-page-sub-title\">We are at the top of the market</h3>\n        <p className=\"our-policy-paragraph\">\n          When your business expands quickly, it can be hard to stay on top of\n          policy creation and management. Sure, there may be quite a few\n          unwritten rules that employees seem to be aware of and your\n          organization just hasn’t gotten around to putting on paper yet, but\n          those rules tend to cause more confusion than not. Just like the\n          telephone game we played as kids, new rules heard “through the\n          grapevine” are easily not shared correctly, misinterpreted and\n          misunderstood.\n        </p>\n        <ol className=\"list\" type=\"1\">\n          {pageContent}\n        </ol>\n      </>\n    );\n  }\n}\n","// @flow\nimport * as React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport axios from \"axios\";\n\ntype Props = {};\n\ntype State = {\n  pageTitle: string,\n  content:  Array<Object>\n};\nexport default class Careers extends React.Component<Props, State> {\n  state = {\n    pageTitle: \"\",\n    content: []\n  };\n\n  componentDidMount() {\n    axios.get(\"/careers\").then(res => {\n      console.log(res);\n      this.setState({\n        pageTitle: res.data.title,\n        content: res.data.content\n      });\n    });\n  }\n\n  render() {\n    const content = this.state.content;\n    let pageContent = content.map(elem => {\n      return (\n        <div className=\"job-description\">\n          <h3 className=\"job-description-position\">{elem.title}</h3>\n          <p className=\"job-description-text\">{elem.content}</p>\n        </div>\n      );\n    });\n\n    return (\n      <>\n        <Helmet>\n          <title>{this.state.pageTitle}</title>\n        </Helmet>\n        <div className=\"container\">\n        <h2 className=\"sub-page-title\">{this.state.pageTitle}</h2>\n        <h3 className=\"sub-page-sub-title\">\n          There are several options to suggest\n        </h3>\n        {pageContent}\n        <p className=\"job-offer-feedback\">\n          If you are interested, please send your resume: matter-hr@matter.com\n        </p>\n        </div>\n      </>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Switch, Route } from \"react-router-dom\";\n\nimport Header from \"../Header\";\nimport Footer from \"../Footer\";\nimport MainPage from \"../MainPage\";\nimport ProductPage from \"../ProductPage\";\nimport Profile from \"../Profile\";\nimport Unsubscribe from \"../Unsubscribe\";\nimport Cart from \"../Cart\";\nimport Checkout from \"../Checkout\";\nimport FilteredProductList from \"../FilteredProductList\";\nimport AboutUs from \"../StaticPages/AboutUs\";\nimport OurPolicy from \"../StaticPages/OurPolicy\";\nimport Careers from \"../StaticPages/Careers\";\n\nimport {\n    CLOSE_LOGIN_DETAILS,\n    CLOSE_LOGIN_FORM,\n    CLOSE_REG_FORM,\n    CLOSE_REG_OK_FORM\n} from \"../../actions/login\";\n\nimport { blurSearchInput } from \"../../actions/search\";\nimport {\n  CLOSE_MODAL_SUCCESS_ORDER,\n  CLOSE_MODAL_UNSUCCESS_ORDER\n} from \"../../actions/cart\";\n\nclass Dashboard extends Component {\n    handleCloseForms = e => {\n        if (\n            this.props.windowsStatus.formLoginOpen ||\n            this.props.windowsStatus.formRegisterOpen ||\n            this.props.windowsStatus.loginDetails ||\n            this.props.windowsStatus.formRegistrationOk ||\n            this.props.focus ||\n            this.props.checkoutWindows.successOrder ||\n            this.props.checkoutWindows.unsuccessOrder\n\n        ) {\n            this.props.closeLoginForm();\n            this.props.closeRegForm();\n            this.props.closeLoginDetails();\n            this.props.closeRegistrationOk();\n            this.props.closeSuccessOrder();\n            this.props.closeUnsuccessOrder();\n            this.props.blurSearchInput(e);\n        }\n    };\n\n  render() {\n    return (\n      <div onClick={this.handleCloseForms}>\n        <Header />\n        <Switch>\n          <Route exact path=\"/\" component={MainPage} />\n          <Route exact path=\"/about-us\" component={AboutUs} />\n          <Route exact path=\"/our-policy\" component={OurPolicy} />\n          <Route exact path=\"/careers\" component={Careers} />\n          <Route path=\"/users/profile\" component={Profile} />\n          <Route path=\"/checkout\" component={Checkout} />\n          <Route exact path=\"/cart\" component={Cart} />\n          <Route exact path=\"/unsubscribe/:id\" component={Unsubscribe} />\n          <Route exact path=\"/:category/:subCategory/:furtherSubCategory?/:id(\\d+)\" component={ProductPage} />\n          <Route exact path=\"/:category/:subCategory?/:furtherSubCategory?\" component={FilteredProductList} />\n        </Switch>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    windowsStatus: state.login.windowsStatus,\n    focus: state.search.focus,\n    checkoutWindows: state.cart.windows\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        closeLoginForm: () => {\n            dispatch({type: CLOSE_LOGIN_FORM});\n        },\n        closeLoginDetails: () => {\n            dispatch({type: CLOSE_LOGIN_DETAILS});\n        },\n        closeRegForm: () => {\n            dispatch({type: CLOSE_REG_FORM});\n        },\n        closeRegistrationOk: () => {\n            dispatch({type: CLOSE_REG_OK_FORM});\n        },\n\n        blurSearchInput: e => dispatch(blurSearchInput(e)),\n        closeSuccessOrder: () => {\n            dispatch({type: CLOSE_MODAL_SUCCESS_ORDER});\n        },\n        closeUnsuccessOrder: () => {\n            dispatch({type: CLOSE_MODAL_UNSUCCESS_ORDER});\n        }\n    };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Dashboard);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Preloader from \"../../Preloader\";\n\nimport {\n  getAdmNavMenuItems,\n  changeSelectedItemActiveStatus,\n  addNewCategory,\n  addNewSubCategory,\n  addNewFurtherSubCategory,\n  saveUpdatedNavMenu\n} from \"../../../actions/adminDashboard/admNavMenuActions\";\n\nimport \"./admNavMenu.scss\";\n\nclass AdmNavMenu extends Component {\n  // Calling action-creator for getting from server object with Navigation Menu Items\n  componentDidMount() {\n    this.props.getAdmNavMenuItems();\n  }\n\n  state = {\n    chosenCategory: \"\",\n    chosenSubCategory: \"\",\n    newCategotyName: \"\",\n    newSubCategotyName: \"\",\n    newFurtherSubCategotyName: \"\",\n    errorMsg: {}\n  };\n\n  resetState = e => {\n    this.setState({\n      newCategotyName: \"\",\n      newSubCategotyName: \"\",\n      newFurtherSubCategotyName: \"\"\n    });\n  };\n\n  handleNewItemsChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n\n    let errors = {};\n\n    if (e.target.value.length < 3) {\n      errors[e.target.name] = \"Must be at least 3 characters long\";\n    }\n\n    this.setState({\n      errorMsg: errors\n    });\n  };\n\n  handleCategoryRadio = e => {\n    this.setState({\n      chosenCategory: e.target.value,\n      chosenSubCategory: \"\"\n    });\n  };\n\n  handleSubCategoryRadio = e => {\n    this.setState({\n      chosenSubCategory: e.target.value\n    });\n  };\n\n  render() {\n    //Creating our Category list ===========================================================\n    let chosenCategory = this.state.chosenCategory;\n\n    let categories = this.props.navMenuItems.map(category => {\n      const isCategoryCurrent = chosenCategory === category.categoryName;\n\n      return (\n        <li className=\"admin-nav-menu-item\" key={category._id}>\n          <div className=\"admin-nav-menu-item-left\">\n            <label\n              className={\n                isCategoryCurrent\n                  ? \"admin-nav-menu-item-left-label admin-nav-menu-item-left-label--selected\"\n                  : \"admin-nav-menu-item-left-label\"\n              }\n            >\n              <input\n                className=\"admin-nav-menu-item-left-radio\"\n                type=\"radio\"\n                name=\"categories\"\n                value={category.categoryName}\n                onChange={this.handleCategoryRadio}\n              />\n              {category.categoryName.charAt(0).toUpperCase() +\n                category.categoryName.slice(1).toLowerCase()}\n            </label>\n          </div>\n          <div className=\"admin-nav-menu-item-right\">\n            <div className=\"onoffswitch\">\n              <input\n                type=\"checkbox\"\n                name=\"onoffswitch\"\n                className=\"onoffswitch-checkbox\"\n                id={category.categoryName}\n                // defaultChecked={category.active}\n                checked={category.active}\n                onChange={e =>\n                  this.props.changeSelectedItemActiveStatus(\n                    e,\n                    this.props.navMenuItems,\n                    category._id\n                  )\n                }\n              />\n              <label\n                className=\"onoffswitch-label\"\n                htmlFor={category.categoryName}\n              >\n                <span className=\"onoffswitch-inner\" />\n                <span className=\"onoffswitch-switch\" />\n              </label>\n            </div>\n          </div>\n        </li>\n      );\n    });\n\n    // Creating our Sub-category list ===========================================================\n    let chosenSubCategory = this.state.chosenSubCategory;\n\n    let subCategories = this.props.navMenuItems.map(category => {\n      if (category.categoryName === this.state.chosenCategory) {\n        return category.subCategoryList.map(subCategory => {\n          const isSubCategoryCurrent =\n            chosenSubCategory === subCategory.subCategoryName;\n\n          return (\n            <li className=\"admin-nav-menu-item\" key={subCategory._id}>\n              <div className=\"admin-nav-menu-item-left\">\n                <label\n                  className={\n                    isSubCategoryCurrent\n                      ? \"admin-nav-menu-item-left-label admin-nav-menu-item-left-label--selected\"\n                      : \"admin-nav-menu-item-left-label\"\n                  }\n                >\n                  <input\n                    className=\"admin-nav-menu-item-left-radio\"\n                    type=\"radio\"\n                    name=\"subCategories\"\n                    value={subCategory.subCategoryName}\n                    onChange={this.handleSubCategoryRadio}\n                  />\n                  {subCategory.subCategoryName.charAt(0).toUpperCase() +\n                    subCategory.subCategoryName.slice(1).toLowerCase()}\n                </label>\n              </div>\n              <div className=\"admin-nav-menu-item-right\">\n                <div className=\"onoffswitch\">\n                  <input\n                    type=\"checkbox\"\n                    name=\"onoffswitch\"\n                    className=\"onoffswitch-checkbox\"\n                    id={subCategory.subCategoryName}\n                    // defaultChecked={subCategory.active}\n                    checked={subCategory.active}\n                    onChange={e =>\n                      this.props.changeSelectedItemActiveStatus(\n                        e,\n                        this.props.navMenuItems,\n                        subCategory._id\n                      )\n                    }\n                  />\n                  <label\n                    className=\"onoffswitch-label\"\n                    htmlFor={subCategory.subCategoryName}\n                  >\n                    <span className=\"onoffswitch-inner\" />\n                    <span className=\"onoffswitch-switch\" />\n                  </label>\n                </div>\n              </div>\n            </li>\n          );\n        });\n      }\n      return null;\n    });\n\n    // Creating our Further Sub-category list ===========================================================\n    let furtherSubCategories = this.props.navMenuItems.map(category => {\n      return category.subCategoryList.map(subCategory => {\n        if (\n          category.categoryName === this.state.chosenCategory &&\n          subCategory.subCategoryName === this.state.chosenSubCategory\n        ) {\n          return subCategory.furtherSubCategoryList.map(furtherSubCategory => {\n            return (\n              <li className=\"admin-nav-menu-item\" key={furtherSubCategory._id}>\n                <div className=\"admin-nav-menu-item-left\">\n                  {furtherSubCategory.furtherSubCategoryName\n                    .charAt(0)\n                    .toUpperCase() +\n                    furtherSubCategory.furtherSubCategoryName\n                      .slice(1)\n                      .toLowerCase()}\n                </div>\n                <div className=\"admin-nav-menu-item-right\">\n                  <div className=\"onoffswitch\">\n                    <input\n                      type=\"checkbox\"\n                      name=\"onoffswitch\"\n                      className=\"onoffswitch-checkbox\"\n                      id={furtherSubCategory.furtherSubCategoryName}\n                      // defaultChecked={furtherSubCategory.active}\n                      checked={furtherSubCategory.active}\n                      onChange={e =>\n                        this.props.changeSelectedItemActiveStatus(\n                          e,\n                          this.props.navMenuItems,\n                          furtherSubCategory._id\n                        )\n                      }\n                    />\n                    <label\n                      className=\"onoffswitch-label\"\n                      htmlFor={furtherSubCategory.furtherSubCategoryName}\n                    >\n                      <span className=\"onoffswitch-inner\" />\n                      <span className=\"onoffswitch-switch\" />\n                    </label>\n                  </div>\n                </div>\n              </li>\n            );\n          });\n        }\n        return null;\n      });\n    });\n\n    return (\n      <>\n        {this.props.isMenuFetching ? (\n          <Preloader />\n        ) : (\n          <>\n            <div className=\"admin-nav-menu-wrapper\">\n              <div className=\"admin-nav-menu-block\">\n                <div className=\"admin-nav-menu-block-heading\">Category</div>\n                <div className=\"admin-nav-menu-block-content admin-nav-menu-categories\">\n                  <ul className=\"admin-nav-menu-list\">{categories}</ul>\n                  <div className=\"add-new-item-wrapper\">\n                    <input\n                      className=\"add-new-item-input\"\n                      type=\"text\"\n                      name=\"newCategotyName\"\n                      placeholder=\"Add new category\"\n                      value={this.state.newCategotyName}\n                      onChange={this.handleNewItemsChange}\n                    />\n                    <input\n                      className=\"add-new-item-save\"\n                      type=\"button\"\n                      value=\"Save\"\n                      onClick={() => {\n                        this.props.addNewCategory(\n                          this.state.newCategotyName.toLowerCase(),\n                          this.props.navMenuItems\n                        );\n                        this.resetState();\n                      }}\n                    />\n                  </div>\n                  {/* {validationText} */}\n                  <div className=\"error-message\">\n                    {this.state.errorMsg.newCategotyName}\n                  </div>\n                </div>\n              </div>\n              <div className=\"admin-nav-menu-block\">\n                <div className=\"admin-nav-menu-block-heading\">Sub-category</div>\n                <div className=\"admin-nav-menu-block-content admin-nav-menu-subcategories\">\n                  <ul className=\"admin-nav-menu-list\">{subCategories}</ul>\n                  {this.state.chosenCategory ? (\n                    <div className=\"add-new-item-wrapper\">\n                      <input\n                        className=\"add-new-item-input\"\n                        type=\"text\"\n                        name=\"newSubCategotyName\"\n                        placeholder=\"Add new sub-category\"\n                        value={this.state.newSubCategotyName}\n                        onChange={this.handleNewItemsChange}\n                      />\n                      <input\n                        className=\"add-new-item-save\"\n                        type=\"button\"\n                        value=\"Save\"\n                        onClick={() => {\n                          this.props.addNewSubCategory(\n                            this.state.chosenCategory.toLowerCase(),\n                            this.state.newSubCategotyName.toLowerCase(),\n                            this.props.navMenuItems\n                          );\n                          this.resetState();\n                        }}\n                      />\n                    </div>\n                  ) : null}\n                  {/* {validationText} */}\n                  <div className=\"error-message\">\n                    {this.state.errorMsg.newSubCategotyName}\n                  </div>\n                </div>\n              </div>\n              <div className=\"admin-nav-menu-block\">\n                <div className=\"admin-nav-menu-block-heading\">\n                  Further Sub-category\n                </div>\n                <div className=\"admin-nav-menu-block-content admin-nav-menu-furthersubcategories\">\n                  <ul className=\"admin-nav-menu-list\">\n                    {furtherSubCategories}\n                  </ul>\n                  {this.state.chosenSubCategory ? (\n                    <div className=\"add-new-item-wrapper\">\n                      <input\n                        className=\"add-new-item-input\"\n                        type=\"text\"\n                        name=\"newFurtherSubCategotyName\"\n                        placeholder=\"Add new sub-sub-category\"\n                        value={this.state.newFurtherSubCategotyName}\n                        onChange={this.handleNewItemsChange}\n                      />\n                      <input\n                        className=\"add-new-item-save\"\n                        type=\"button\"\n                        value=\"Save\"\n                        onClick={() => {\n                          this.props.addNewFurtherSubCategory(\n                            this.state.chosenCategory.toLowerCase(),\n                            this.state.chosenSubCategory.toLowerCase(),\n                            this.state.newFurtherSubCategotyName.toLowerCase(),\n                            this.props.navMenuItems\n                          );\n                          this.resetState();\n                        }}\n                      />\n                    </div>\n                  ) : null}\n                  {/* {validationText} */}\n                  <div className=\"error-message\">\n                    {this.state.errorMsg.newFurtherSubCategotyName}\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"admin-nav-menu-actions\">\n              <input\n                type=\"button\"\n                className=\"admin-nav-menu-button admin-nav-menu-reset\"\n                value=\"Reset\"\n                onClick={() => {\n                  this.props.getAdmNavMenuItems();\n                }}\n              />\n              <input\n                type=\"button\"\n                className=\"admin-nav-menu-button admin-nav-menu-submit\"\n                value=\"Save Changes\"\n                onClick={() =>\n                  this.props.saveUpdatedNavMenu(\n                    this.props.navMenuItems,\n                    this.props.getAdmNavMenuItems\n                  )\n                }\n              />\n            </div>\n          </>\n        )}\n        {this.props.resultMessage ? (\n          <div className=\"nav-menu-result-message\">\n            <p>{this.props.resultMessage}</p>\n          </div>\n        ) : null}\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    state: state,\n    navMenuItems: state.admNavMenu.navMenuItems,\n    isMenuFetching: state.admNavMenu.isMenuFetching,\n    resultMessage: state.admNavMenu.resultMessage\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  {\n    getAdmNavMenuItems,\n    changeSelectedItemActiveStatus,\n    addNewCategory,\n    addNewSubCategory,\n    addNewFurtherSubCategory,\n    saveUpdatedNavMenu\n  }\n)(AdmNavMenu);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Select from \"react-select\";\nimport Dropzone from \"react-dropzone\";\n\nimport Preloader from \"../../Preloader\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faImages } from \"@fortawesome/free-solid-svg-icons\";\n\nimport \"./admProducts.scss\";\n\nimport {\n  getCategory,\n  getSubCategory,\n  getFurtherSubCategory,\n  getProductModelName,\n  getwithdrawnStatus,\n  getActiveStatus,\n  getCurrentPrice,\n  getPreviousPrice,\n  getProductFeatures,\n  handleProductColors,\n  addColor,\n  addSize,\n  getImages,\n  onFilesRejected,\n  deleteDropzoneImage,\n  deleteSize,\n  deleteColor,\n  handleProductSizes,\n  handleProductQuantity,\n  resetModal,\n  resetForm,\n  generateNewItemNo,\n  sendNewProductToServer\n} from \"../../../actions/adminDashboard/admProductsActions\";\nimport { getAdmNavMenuItems } from \"../../../actions/adminDashboard/admNavMenuActions\";\n\nclass AdmProducts extends Component {\n  // Calling action-creator for getting from server object with Navigation Menu Items\n  componentDidMount() {\n    this.props.getAdmNavMenuItems();\n    this.props.getProductFeatures();\n  }\n\n  render() {\n    const {\n      category,\n      subCategory,\n      furtherSubCategory,\n      navMenuItems,\n      subCategoryOptions,\n      furtherSubCategoryOptions,\n      getCategory,\n      getSubCategory,\n      getFurtherSubCategory,\n      getProductModelName,\n      productModelName,\n      active,\n      withdrawnFromSale,\n      getwithdrawnStatus,\n      getActiveStatus,\n      currentPrice,\n      previousPrice,\n      getCurrentPrice,\n      getPreviousPrice,\n      productFeatures,\n      colorOptions,\n      colorStyles,\n      sizeOptions,\n      handleProductColors,\n      addColor,\n      addSize,\n      getImages,\n      onFilesRejected,\n      deleteDropzoneImage,\n      deleteSize,\n      deleteColor,\n      handleProductSizes,\n      handleProductQuantity,\n      resetModalStatus,\n      resetModal,\n      resetForm,\n      admProducts,\n      generateNewItemNo,\n      sendNewProductToServer,\n      validation,\n      fetchingNewProduct,\n      productMessage,\n      photosMessage,\n      itemNo,\n      colorCollectionUpdateMessage,\n      sizeCollectionUpdateMessage\n    } = this.props;\n\n    //Options for category input-select (men / women)\n    let categoryOptions = navMenuItems.map(cat => {\n      return {\n        value: cat.categoryName,\n        label: cat.categoryName\n      };\n    });\n\n    let productFeaturesList = productFeatures.map((color, colorIndex) => {\n      //Detecting the css-code of the color, chosen in input-select to show this color to user\n      let currentColor = colorStyles.filter(item => {\n        return item.colorName === color.colorName.value;\n      });\n\n      let currentColorCssHexCode = \"#ffffff\";\n\n      if (currentColor.length > 0) {\n        currentColorCssHexCode = currentColor[0][\"cssHexCode\"];\n      }\n\n      let dublicates = [\n        ...new Set(\n          color.previewImages\n            .map((img, i) => {\n              return img.name;\n            })\n            .sort()\n            .filter((imgName, i, imgNamesArr) => {\n              return imgNamesArr[i + 1] === imgNamesArr[i];\n            })\n        )\n      ];\n\n      console.log(\"dublicates=====================\");\n      console.log(dublicates);\n\n      //Creating image-preview component for react-dropzone\n      let previewImagesContent = color.previewImages.map((image, i, arr) => {\n        return (\n          <li className=\"image-preview-item\" key={image.preview}>\n            <img\n              src={image.preview}\n              alt=\"Files Preview\"\n              className={\n                dublicates.includes(image.name)\n                  ? \"image-preview-image image-preview-image-dublicate\"\n                  : \"image-preview-image\"\n              }\n              data-index={i}\n            />\n            <input\n              type=\"button\"\n              className={\n                dublicates.includes(image.name)\n                  ? \"delete-image delete-image-dublicate\"\n                  : \"delete-image\"\n              }\n              data-action=\"delete-image\"\n              value=\"Delete image\"\n            />\n          </li>\n        );\n      });\n\n      // Rendering product size block\n      let sizeItemList = color.sizes.map((size, sizeIndex) => {\n        return (\n          <li className=\"admin-products-sizes-item\" key={sizeIndex}>\n            <Select\n              className=\"admin-products-sizes-select\"\n              placeholder=\"Chose size\"\n              options={sizeOptions}\n              value={productFeatures[colorIndex].sizes[sizeIndex].size}\n              onChange={option =>\n                handleProductSizes(\n                  option,\n                  productFeatures,\n                  colorIndex,\n                  sizeIndex,\n                  validation\n                )\n              }\n            />\n            <input\n              type=\"number\"\n              placeholder=\"Fill quantity\"\n              className=\"admin-products-sizes-quantity\"\n              value={productFeatures[colorIndex].sizes[sizeIndex].quantity}\n              onChange={e =>\n                handleProductQuantity(\n                  e.target.value,\n                  productFeatures,\n                  colorIndex,\n                  sizeIndex\n                )\n              }\n            />\n            {sizeIndex > 0 ? (\n              <input\n                type=\"button\"\n                className=\"admin-products-sizes-delete\"\n                value=\"Delete Size\"\n                onClick={() =>\n                  deleteSize(productFeatures, colorIndex, sizeIndex, validation)\n                }\n              />\n            ) : null}\n            <div className=\"error-message\">\n              {validation.productFeatures[colorIndex].sizes[sizeIndex].size\n                ? validation.productFeatures[colorIndex].sizes[sizeIndex].size\n                : null}\n            </div>\n          </li>\n        );\n      });\n\n      return (\n        <div className=\"admin-products-productfeatures\" key={colorIndex}>\n          {colorIndex > 0 ? (\n            <input\n              type=\"button\"\n              className=\"delete-color\"\n              value=\"Delete Color\"\n              onClick={() =>\n                deleteColor(productFeatures, colorIndex, validation)\n              }\n            />\n          ) : null}\n          <div className=\"admin-products-color-item\">\n            <div className=\"admin-products-color-text\">\n              <label className=\"admin-products-input-label\">\n                Product Color #{colorIndex + 1}\n              </label>\n              <Select\n                value={productFeatures[colorIndex].colorName}\n                onChange={option =>\n                  handleProductColors(\n                    option,\n                    productFeatures,\n                    colorIndex,\n                    colorStyles,\n                    validation\n                  )\n                }\n                options={colorOptions}\n                placeholder=\"Chose color\"\n              />\n              <div className=\"error-message\">\n                {validation.productFeatures[colorIndex].colorName\n                  ? validation.productFeatures[colorIndex].colorName\n                  : null}\n              </div>\n            </div>\n            <div\n              className=\"admin-products-color-styled\"\n              style={{\n                backgroundColor: currentColorCssHexCode\n              }}\n            />\n          </div>\n          <div className=\"admin-products-photos\">\n            <p className=\"admin-products-input-label\">\n              Drop images or click to select a file to upload\n            </p>\n            <Dropzone\n              multiple\n              onDrop={files => {\n                getImages(files, productFeatures, colorIndex, validation);\n              }}\n              onDropRejected={() =>\n                onFilesRejected(productFeatures, colorIndex)\n              }\n              onClick={e =>\n                deleteDropzoneImage(e, productFeatures, colorIndex, validation)\n              }\n              accept={[\"image/png\", \"image/jpg\", \"image/jpeg\"]}\n              className=\"image-dropzone\"\n              activeClassName=\"image-dropzone-active\"\n              acceptClassName=\"image-dropzone-accepted\"\n              rejectClassName=\"image-dropzone-rejected\"\n              maxSize={5000000}\n            >\n              {color.previewImages.length < 1 ? (\n                <FontAwesomeIcon\n                  icon={faImages}\n                  className=\"dropzone-placeholder\"\n                />\n              ) : (\n                <div className=\"image-preview\">\n                  <ul className=\"image-preview-list\">{previewImagesContent}</ul>\n                </div>\n              )}\n            </Dropzone>\n            {color.filesRejected ? (\n              <div className=\"error-message\">\n                Files upload are rejected. Please, check that files extension\n                are .png / .jpg / .jpeg and there size does not exceed 1MB{\" \"}\n              </div>\n            ) : (\n              <div className=\"stansart-message\">\n                Max-size: 1MB, allowed extensions: .png / .jpg / .jpeg{\" \"}\n              </div>\n            )}\n            <div className=\"error-message\">\n              {validation.productFeatures[colorIndex].previewImages\n                ? validation.productFeatures[colorIndex].previewImages\n                : validation.productFeatures[colorIndex].imageNamesDuplicate\n                ? validation.productFeatures[colorIndex].imageNamesDuplicate\n                : null}\n            </div>\n          </div>\n\n          <div className=\"admin-products-sizes\">\n            <ul className=\"admin-products-sizes-list\">{sizeItemList}</ul>\n          </div>\n          <div className=\"error-message\">\n            {validation.productFeatures[colorIndex].sizeDublicate\n              ? validation.productFeatures[colorIndex].sizeDublicate\n              : null}\n          </div>\n          <input\n            type=\"button\"\n            value=\"Add Size\"\n            className=\"add-size-btn\"\n            onClick={() => addSize(productFeatures, colorIndex, validation)}\n          />\n        </div>\n      );\n    });\n\n    return (\n      <>\n        <div className=\"itemNo-wrapper\">\n          <input\n            type=\"button\"\n            className=\"generate-new-itemNo\"\n            value=\"Generate New ItemNo (ProductId)\"\n            onClick={generateNewItemNo}\n          />\n          <span className=\"itemNo-value\">\n            {itemNo ? itemNo : \"ItemNo is not generated\"}\n          </span>\n        </div>\n        <div className=\"admin-products-wrapper\">\n          <form\n            className=\"admin-products-form\"\n            encType=\"multipart/form-data\"\n            method=\"post\"\n          >\n            <div className=\"admin-products-category-wrapper\">\n              <div className=\"admin-products-categories\">\n                <div className=\"admin-products-categories-item\">\n                  <label className=\"admin-products-input-label\">Category</label>\n                  <Select\n                    value={category}\n                    onChange={option =>\n                      getCategory(option, navMenuItems, validation)\n                    }\n                    options={categoryOptions}\n                    placeholder=\"Chose category\"\n                    required\n                    // isClearable\n                  />\n                  <div className=\"error-message\">\n                    {validation.category ? validation.category : null}\n                  </div>\n                </div>\n                <div className=\"admin-products-categories-item\">\n                  <label className=\"admin-products-input-label\">\n                    Sub-Category\n                  </label>\n                  <Select\n                    value={subCategory}\n                    onChange={option =>\n                      getSubCategory(option, navMenuItems, category, validation)\n                    }\n                    options={subCategoryOptions}\n                    placeholder={category.value ? \"Chose sub-category\" : null}\n                    isDisabled={category.value ? false : true}\n                  />\n                  <div className=\"error-message\">\n                    {validation.subCategory ? validation.subCategory : null}\n                  </div>\n                </div>\n                <div className=\"admin-products-categories-item\">\n                  <label className=\"admin-products-input-label\">\n                    Sub-Sub-Category\n                  </label>\n                  <Select\n                    value={furtherSubCategory}\n                    onChange={option =>\n                      getFurtherSubCategory(option, validation)\n                    }\n                    options={furtherSubCategoryOptions}\n                    placeholder={\n                      subCategory.value ? \"Chose sub-sub-category\" : null\n                    }\n                    isDisabled={\n                      furtherSubCategoryOptions.length < 1\n                        ? true\n                        : subCategory.value\n                        ? false\n                        : true\n                    }\n                  />\n                  <div className=\"error-message\">\n                    {validation.furtherSubCategory\n                      ? validation.furtherSubCategory\n                      : null}\n                  </div>\n                </div>\n              </div>\n              <div className=\"admin-products-model\">\n                <label className=\"admin-products-input-label\">\n                  Product Model Name\n                </label>\n                <input\n                  className=\"admin-products-model-input\"\n                  type=\"text\"\n                  placeholder=\"Enter product model name\"\n                  value={productModelName}\n                  onChange={e =>\n                    getProductModelName(e.target.value, validation)\n                  }\n                />\n                <div className=\"error-message\">\n                  {validation.productModelName\n                    ? validation.productModelName\n                    : null}\n                </div>\n              </div>\n              <div className=\"admin-products-status\">\n                <label className=\"admin-products-status-label\">\n                  <input\n                    className=\"admin-products-checkbox\"\n                    name=\"isWithdrawn\"\n                    type=\"checkbox\"\n                    checked={withdrawnFromSale}\n                    onChange={e => getwithdrawnStatus(e.target.checked)}\n                  />\n                  <p className=\"admin-products-status-label-text\">\n                    Mark if withdrawn from sale\n                  </p>\n                </label>\n                <label className=\"admin-products-status-label\">\n                  <input\n                    className=\"admin-products-checkbox\"\n                    name=\"isActive\"\n                    type=\"checkbox\"\n                    checked={active}\n                    onChange={e => getActiveStatus(e.target.checked)}\n                  />\n                  <p className=\"admin-products-status-label-text\">\n                    Mark to not show in product lists\n                  </p>\n                </label>\n              </div>\n              <div className=\"admin-products-prices\">\n                <div className=\"admin-products-price\">\n                  <label className=\"admin-products-input-label\">\n                    Current Price:\n                  </label>\n                  <input\n                    type=\"number\"\n                    className=\"admin-products-price-input\"\n                    placeholder=\"Enter current price\"\n                    value={currentPrice}\n                    onChange={e =>\n                      getCurrentPrice(e.target.value, validation, previousPrice)\n                    }\n                  />\n                  <span className=\"dollar\">$</span>\n                  <div className=\"error-message\">\n                    {validation.currentPrice ? validation.currentPrice : null}\n                  </div>\n                </div>\n                <div className=\"admin-products-price\">\n                  <label className=\"admin-products-input-label\">\n                    Previous Price:\n                  </label>\n                  <input\n                    className=\"admin-products-price-input\"\n                    type=\"number\"\n                    placeholder=\"Enter previous price\"\n                    value={previousPrice}\n                    onChange={e =>\n                      getPreviousPrice(e.target.value, validation, currentPrice)\n                    }\n                  />\n                  <span className=\"dollar\">$</span>\n                  <div className=\"error-message\">\n                    {validation.previousPrice ? validation.previousPrice : null}\n                  </div>\n                </div>\n              </div>\n            </div>\n            {productFeaturesList}\n            <div className=\"error-message\">\n              {validation.colorDublicate ? validation.colorDublicate : null}\n            </div>\n            <input\n              type=\"button\"\n              value=\"Add Color\"\n              className=\"add-color-btn\"\n              onClick={() => addColor(productFeatures, validation)}\n            />\n            <div className=\"admin-products-final-actions\">\n              <input\n                type=\"button\"\n                className=\"admin-products-reset\"\n                value=\"Reset\"\n                onClick={() => resetModal(true)}\n              />\n              <input\n                type=\"button\"\n                className=\"admin-products-submit\"\n                value=\"Save New Product To Database\"\n                onClick={() => {\n                  sendNewProductToServer(\n                    admProducts,\n                    validation,\n                    furtherSubCategoryOptions\n                  );\n                }}\n              />\n            </div>\n          </form>\n          <div\n            className={resetModalStatus ? \"reset-modal\" : \"reset-modal-hide\"}\n          >\n            <span className=\"reset-modal-text\">\n              Are you sure you want to reset all filled information??? After\n              clearing the filled fields, they will need to be filled again to\n              add a new product to the database.\n            </span>\n            <div className=\"reset-modal-actions\">\n              <input\n                type=\"button\"\n                className=\"reset-modal-btn reset-modal-cansel\"\n                value=\"Cancel\"\n                onClick={() => resetModal(false)}\n              />\n              <input\n                type=\"button\"\n                className=\"reset-modal-btn reset-modal-confirm\"\n                value=\"Confirm\"\n                onClick={() => resetForm(admProducts)}\n              />\n            </div>\n          </div>\n        </div>\n        <div className=\"server-message\">\n          {fetchingNewProduct ? <Preloader /> : null}\n          {productMessage ? (\n            <div className=\"server-message-product\">{productMessage}</div>\n          ) : null}\n          {photosMessage ? (\n            <div className=\"server-message-images\"> {photosMessage}</div>\n          ) : null}\n          {colorCollectionUpdateMessage ? (\n            <div className=\"server-message-images\">\n              {\" \"}\n              {colorCollectionUpdateMessage}\n            </div>\n          ) : null}\n          {sizeCollectionUpdateMessage ? (\n            <div className=\"server-message-images\">\n              {\" \"}\n              {sizeCollectionUpdateMessage}\n            </div>\n          ) : null}\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    admProducts: state.admProducts,\n    navMenuItems: state.navMenu.navMenuItems,\n    category: state.admProducts.category,\n    subCategory: state.admProducts.subCategory,\n    furtherSubCategory: state.admProducts.furtherSubCategory,\n    subCategoryOptions: state.admProducts.subCategoryOptions,\n    furtherSubCategoryOptions: state.admProducts.furtherSubCategoryOptions,\n    productModelName: state.admProducts.productModelName,\n    active: state.admProducts.active,\n    withdrawnFromSale: state.admProducts.withdrawnFromSale,\n    currentPrice: state.admProducts.currentPrice,\n    previousPrice: state.admProducts.previousPrice,\n    productFeatures: state.admProducts.productFeatures,\n    colorOptions: state.admProducts.colorOptions,\n    sizeOptions: state.admProducts.sizeOptions,\n    colorStyles: state.admProducts.colorStyles,\n    itemNo: state.admProducts.itemNo,\n    resetModalStatus: state.admProducts.resetModalStatus,\n    validation: state.admProducts.validation,\n    fetchingNewProduct: state.admProducts.fetchingNewProduct,\n    productMessage: state.admProducts.productMessage,\n    photosMessage: state.admProducts.photosMessage,\n    colorCollectionUpdateMessage:\n      state.admProducts.colorCollectionUpdateMessage,\n    sizeCollectionUpdateMessage: state.admProducts.sizeCollectionUpdateMessage,\n    existingColors: state.admColors.existingColors\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  {\n    getCategory,\n    getSubCategory,\n    getFurtherSubCategory,\n    getAdmNavMenuItems,\n    getProductModelName,\n    getwithdrawnStatus,\n    getActiveStatus,\n    getCurrentPrice,\n    getPreviousPrice,\n    getProductFeatures,\n    handleProductColors,\n    addColor,\n    addSize,\n    getImages,\n    onFilesRejected,\n    deleteDropzoneImage,\n    deleteSize,\n    deleteColor,\n    handleProductSizes,\n    handleProductQuantity,\n    resetModal,\n    resetForm,\n    generateNewItemNo,\n    sendNewProductToServer\n  }\n)(AdmProducts);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { SketchPicker } from \"react-color\";\nimport Preloader from \"../../Preloader\";\n\nimport {\n  getNewColorHex,\n  getNewColorName,\n  checkNewColorInDb,\n  handleNewColorModal,\n  addOrUpdateColorInDb,\n  getExistingColorsFromDb,\n  updateColorsInAllProducts\n} from \"../../../actions/adminDashboard/admColorActions\";\n\nimport { getProductFeatures } from \"../../../actions/adminDashboard/admProductsActions\";\n\nimport \"./admColors.scss\";\n\nclass AdmColors extends Component {\n  componentDidMount() {\n    this.props.getExistingColorsFromDb();\n  }\n\n  render() {\n    const {\n      // state\n      newColorName,\n      newCssHexCode,\n      newColorModalStatus,\n      isExistingColorsFetching,\n      newColorMessage,\n      existingColorObject,\n      finalMessage,\n      newColorObject,\n      isAllColorsFetching,\n      existingColors,\n\n      // actions\n      getNewColorName,\n      getNewColorHex,\n      checkNewColorInDb,\n      handleNewColorModal,\n      addOrUpdateColorInDb,\n      getExistingColorsFromDb,\n      updateColorsInAllProducts\n    } = this.props;\n\n    let existingColorsList = existingColors.map(color => {\n      return (\n        <li className=\"existing-colors-item\" key={color._id}>\n          <div\n            className=\"existing-colors-style\"\n            style={{ backgroundColor: color.cssHexCode }}\n          />\n          <div className=\"existing-colors-text\">\n            <p>{color.colorName}</p>\n          </div>\n          <div className=\"existing-colors-text\">\n            <p>{color.cssHexCode}</p>\n          </div>\n        </li>\n      );\n    });\n\n    return (\n      <>\n        <div className=\"admin-color-wrapper\">\n          <p className=\"admin-color-title\">Add New Color</p>\n          <div className=\"add-color\">\n            <SketchPicker\n              className=\"add-color-picker\"\n              color={newCssHexCode}\n              onChangeComplete={getNewColorHex}\n            />\n            <div className=\"add-color-actions\">\n              <div className=\"add-color-item\">\n                <label className=\"add-color-label\" htmlFor=\"color-name\">\n                  Enter color name:{\" \"}\n                </label>\n                <input\n                  type=\"text\"\n                  className=\"add-color-input\"\n                  id=\"color-name\"\n                  value={newColorName}\n                  onChange={e => getNewColorName(e.target.value)}\n                />\n              </div>\n              <div className=\"add-color-item\">\n                <label className=\"add-color-label\" htmlFor=\"color-hexcode\">\n                  cssHexCode:{\" \"}\n                </label>\n                <input\n                  type=\"text\"\n                  className=\"add-color-input\"\n                  id=\"color-hexcode\"\n                  value={newCssHexCode}\n                  disabled\n                />\n              </div>\n              <input\n                type=\"button\"\n                className=\"add-color-save\"\n                value=\"Save new color\"\n                onClick={() => {\n                  checkNewColorInDb(newColorName, newCssHexCode);\n                  handleNewColorModal(true);\n                }}\n                disabled={newColorName && newCssHexCode ? false : true}\n              />\n            </div>\n          </div>\n          {newColorModalStatus ? (\n            <div className=\"color-alert-modal\">\n              {isExistingColorsFetching ? (\n                <Preloader />\n              ) : (\n                <>\n                  <div className=\"color-alert-message-1\">\n                    {newColorMessage\n                      ? \"Color with the next parameters is found in DB:\"\n                      : \"Color with the next parameters is not found in DB:\"}{\" \"}\n                  </div>\n                  <div className=\"color-alert-params\">\n                    <p className=\"color-alert-param\">\n                      Name of color:{\" \"}\n                      {newColorMessage\n                        ? existingColorObject.colorName\n                        : newColorName}\n                    </p>\n                    <p className=\"color-alert-param\">\n                      Color hex code:{\" \"}\n                      {newColorMessage\n                        ? existingColorObject.cssHexCode\n                        : newCssHexCode}\n                    </p>\n                  </div>\n                  <span\n                    className=\"color-alert-style\"\n                    style={\n                      newColorMessage\n                        ? { backgroundColor: existingColorObject.cssHexCode }\n                        : { backgroundColor: newCssHexCode }\n                    }\n                  >\n                    How color looks\n                  </span>\n                  <div className=\"color-alert-message-2\">\n                    {newColorMessage\n                      ? `If you want to update this color to DB (rewrite color parameters), click 'Update Color', othervise - click 'Cancel'. \n\t\t\t\t\t\t\t\tAttention: color will be updated in every product, where it is present.`\n                      : \"If you want to add new color to DB, click 'Add Color', othervise - click 'Cancel'\"}\n                  </div>\n                  <div className=\"color-alert-actions\">\n                    <input\n                      type=\"button\"\n                      className=\"color-alert-action cancel\"\n                      value=\"Cancel\"\n                      onClick={() => handleNewColorModal(false)}\n                    />\n                    <input\n                      type=\"button\"\n                      className=\"color-alert-action accept\"\n                      value={newColorMessage ? \"Update Color\" : \"Add Color\"}\n                      onClick={() => {\n                        addOrUpdateColorInDb(\n                          newColorName,\n                          newCssHexCode,\n                          getExistingColorsFromDb,\n                          this.props.getProductFeatures,\n                          updateColorsInAllProducts\n                        );\n                      }}\n                    />\n                  </div>\n                </>\n              )}\n            </div>\n          ) : null}\n          {finalMessage ? (\n            <div className=\"final-message\">\n              <p>{finalMessage}</p>\n              {Object.keys(newColorObject).length > 0 ? (\n                <>\n                  <div className=\"color-alert-params\">\n                    <p className=\"color-alert-param\">\n                      Name of color: {newColorObject.colorName}\n                    </p>\n                    <p className=\"color-alert-param\">\n                      Color hex code: {newColorObject.cssHexCode}\n                    </p>\n                  </div>\n                  <span\n                    className=\"color-alert-style\"\n                    style={{ backgroundColor: newColorObject.cssHexCode }}\n                  >\n                    How color looks\n                  </span>\n                </>\n              ) : null}\n            </div>\n          ) : null}\n        </div>\n        <div className=\"existing-colors\">\n          <p className=\"admin-color-title\">See Existing Colors</p>\n          <ul className=\"existing-colors-list\">\n            {isAllColorsFetching ? <Preloader /> : existingColorsList}\n          </ul>\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    newColorName: state.admColors.newColorName,\n    newCssHexCode: state.admColors.newCssHexCode,\n    newColorMessage: state.admColors.newColorMessage,\n    existingColorObject: state.admColors.existingColorObject,\n    newColorModalStatus: state.admColors.newColorModalStatus,\n    isExistingColorsFetching: state.admColors.isExistingColorsFetching,\n    finalMessage: state.admColors.finalMessage,\n    newColorObject: state.admColors.newColorObject,\n    isAllColorsFetching: state.admColors.isAllColorsFetching,\n    existingColors: state.admColors.existingColors\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  {\n    getNewColorHex,\n    getNewColorName,\n    checkNewColorInDb,\n    handleNewColorModal,\n    addOrUpdateColorInDb,\n    getExistingColorsFromDb,\n    getProductFeatures,\n    updateColorsInAllProducts\n  }\n)(AdmColors);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Preloader from \"../../Preloader\";\n\nimport {\n  getNewSizeName,\n  saveNewSizeInDb,\n  getExistingSizes,\n  getUpdatedSize,\n  updateSizeInDb,\n  updateSizesInAllProducts\n} from \"../../../actions/adminDashboard/admSizeActions\";\n\nimport \"./admSizes.scss\";\n\nclass AdmSizes extends Component {\n  componentDidMount() {\n    this.props.getExistingSizes();\n  }\n\n  render() {\n    const {\n      //state\n      newSizeName,\n      isNewSizeFetching,\n      checkNewSizeResult,\n      isExistingSizesFetching,\n      existingSizes,\n      updatingSizes,\n      sizeUpdateResults,\n      isSizeUpdating,\n      preUpdateValue,\n      updatedSizeValue,\n      errorMsg,\n      // actions\n      getNewSizeName,\n      saveNewSizeInDb,\n      getUpdatedSize,\n      updateSizeInDb,\n      getExistingSizes,\n      updateSizesInAllProducts\n    } = this.props;\n\n    let existingSizeValues = existingSizes.map(size => {\n      return (\n        <li className=\"admin-size-item\" key={size._id}>\n          {size.value}\n        </li>\n      );\n    });\n\n    let updatingSizeInputs = updatingSizes.map(size => {\n      return (\n        <li className=\"admin-size-item admin-size-item-multi\" key={size._id}>\n          <div className=\"admin-size-cell\">\n            <input\n              type=\"text\"\n              className=\"admin-size-input\"\n              value={size.value}\n              onChange={e =>\n                getUpdatedSize(updatingSizes, size._id, e.target.value)\n              }\n            />\n            <input\n              type=\"button\"\n              className=\"admin-size-save\"\n              value=\"Save changes\"\n              onClick={() =>\n                updateSizeInDb(\n                  size._id,\n                  size.value,\n                  existingSizes,\n                  getExistingSizes,\n                  updateSizesInAllProducts\n                )\n              }\n            />\n            {preUpdateValue === size.value && isSizeUpdating ? (\n              <div className=\"admin-size-minipreloader\" />\n            ) : null}\n          </div>\n          {updatedSizeValue === size.value && sizeUpdateResults ? (\n            <span className=\"admin-size-msg\">{sizeUpdateResults}</span>\n          ) : null}\n        </li>\n      );\n    });\n\n    let categoriesInSizes = existingSizes.map(size => {\n      let multiArr = size.categories.map(cat => {\n        let sizeCat = cat.split(\"-\");\n        return (\n          sizeCat[sizeCat.length - 1].charAt(0).toUpperCase() +\n          sizeCat[sizeCat.length - 1].slice(1)\n        );\n      });\n\n      let uniqueCats = [...new Set(multiArr)];\n\n      let uniqueCatsString = uniqueCats.join(\", \");\n\n      return (\n        <li key={size._id} className=\"admin-size-item\">\n          {uniqueCatsString}\n        </li>\n      );\n    });\n\n    return (\n      <div className=\"admin-size\">\n        <p className=\"admin-size-title\"> Add New Size</p>\n        <div className=\"admin-size-new\">\n          <div className=\"admin-size-add\">\n            <label htmlFor=\"add-size\" className=\"admin-size-label\">\n              Fill size value:{\" \"}\n            </label>\n            <input\n              type=\"text\"\n              className=\"admin-size-input\"\n              id=\"add-size\"\n              value={newSizeName}\n              onChange={e => getNewSizeName(e.target.value)}\n            />\n            <input\n              type=\"button\"\n              className=\"admin-size-save admin-size-save-new\"\n              value=\"Save\"\n              onClick={() => saveNewSizeInDb(newSizeName, getExistingSizes)}\n            />\n            <span className=\"admin-size-result\">\n              {isNewSizeFetching ? (\n                <div className=\"admin-size-minipreloader\" />\n              ) : (\n                checkNewSizeResult\n              )}\n            </span>\n          </div>\n        </div>\n        <p className=\"admin-size-title\"> See / Update Existing Sizes</p>\n        {errorMsg ? <p className=\"error-msg\">{errorMsg}</p> : null}\n        <div className=\"admin-size-existing\">\n          {isExistingSizesFetching ? (\n            <Preloader />\n          ) : (\n            <div className=\"admin-size-table\">\n              <div className=\"admin-size-row\">\n                <div className=\"admin-size-heading\">Current size</div>\n                <div className=\"admin-size-content\">\n                  <ul className=\"admin-size-list\">{existingSizeValues}</ul>\n                </div>\n              </div>\n              <div className=\"admin-size-row\">\n                <div className=\"admin-size-heading\">New size (update)</div>\n                <div className=\"admin-size-content\">\n                  <ul className=\"admin-size-list\">{updatingSizeInputs}</ul>\n                </div>\n              </div>\n              <div className=\"admin-size-row\">\n                <div className=\"admin-size-heading\">\n                  Categories sizes are in\n                </div>\n                <div className=\"admin-size-content\">\n                  <ul className=\"admin-size-list\">{categoriesInSizes}</ul>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    newSizeName: state.admSizes.newSizeName,\n    isNewSizeFetching: state.admSizes.isNewSizeFetching,\n    checkNewSizeResult: state.admSizes.checkNewSizeResult,\n    isExistingSizesFetching: state.admSizes.isExistingSizesFetching,\n    existingSizes: state.admSizes.existingSizes,\n    updatingSizes: state.admSizes.updatingSizes,\n    sizeUpdateResults: state.admSizes.sizeUpdateResults,\n    isSizeUpdating: state.admSizes.isSizeUpdating,\n    preUpdateValue: state.admSizes.preUpdateValue,\n    updatedSizeValue: state.admSizes.updatedSizeValue,\n    errorMsg: state.admSizes.errorMsg\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  {\n    getNewSizeName,\n    saveNewSizeInDb,\n    getExistingSizes,\n    getUpdatedSize,\n    updateSizeInDb,\n    updateSizesInAllProducts\n  }\n)(AdmSizes);\n","import React, { Component } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { Route } from \"react-router-dom\";\n\n//Components\nimport AdmNavMenu from \"./AdmNavMenu\";\nimport AdmProducts from \"./AdmProducts\";\nimport AdmColors from \"./AdmColors\";\nimport AdmSizes from \"./AdmSizes\";\nimport AdmCarousel from \"./AdmCarousel\";\nimport AdmUsers from \"./AdmUsers\";\nimport AdmFooter from \"./AdmFooter\";\nimport logo from \"../../img/matter.svg\";\n\nimport \"../../scss/resources/resources.scss\";\nimport \"./adminDashboard.scss\";\n\nclass AdminDashboard extends Component {\n  render() {\n    return (\n      <>\n        <header className=\"main-header\">\n          <div className=\"container\">\n            <div className=\"header-content\">\n              <NavLink to=\"/\" className=\"logo\">\n                <img src={logo} alt=\"Matter\" />\n              </NavLink>\n            </div>\n          </div>\n        </header>\n        <div className=\"admin-dashboard-wrapper\">\n          <div className=\"admin-dashboard\">\n            <ul className=\"admin-dashboard-list\">\n              <li className=\"admin-dashboard-item\">\n                <NavLink\n                  className=\"admin-dashboard-link\"\n                  activeClassName=\"admin-dashboard-link-active\"\n                  to=\"/admin/dashboard/navigation-menu\"\n                >\n                  Navigation menu\n                </NavLink>\n              </li>\n              <li className=\"admin-dashboard-item\">\n                <NavLink\n                  className=\"admin-dashboard-link\"\n                  activeClassName=\"admin-dashboard-link-active\"\n                  to=\"/admin/dashboard/products\"\n                >\n                  New Products\n                </NavLink>\n              </li>\n              <li className=\"admin-dashboard-item\">\n                <NavLink\n                  className=\"admin-dashboard-link\"\n                  activeClassName=\"admin-dashboard-link-active\"\n                  to=\"/admin/dashboard/colors\"\n                >\n                  Colors\n                </NavLink>\n              </li>\n              <li className=\"admin-dashboard-item\">\n                <NavLink\n                  className=\"admin-dashboard-link\"\n                  activeClassName=\"admin-dashboard-link-active\"\n                  to=\"/admin/dashboard/sizes\"\n                >\n                  Sizes\n                </NavLink>\n              </li>\n              {/* <li className=\"admin-dashboard-item\">\n              <NavLink\n                className=\"admin-dashboard-link\"\n                activeClassName=\"admin-dashboard-link-active\"\n                to=\"/admin/dashboard/carousel\"\n              >\n                Carousel\n              </NavLink>\n            </li>\n            <li className=\"admin-dashboard-item\">\n              <NavLink\n                className=\"admin-dashboard-link\"\n                activeClassName=\"admin-dashboard-link-active\"\n                to=\"/admin/dashboard/users\"\n              >\n                Users\n              </NavLink>\n            </li>\n            <li className=\"admin-dashboard-item\">\n              <NavLink\n                className=\"admin-dashboard-link\"\n                activeClassName=\"admin-dashboard-link-active\"\n                to=\"/admin/dashboard/footer\"\n              >\n                Footer\n              </NavLink>\n            </li> */}\n            </ul>\n          </div>\n\n          <div className=\"admin-dashboard-content\">\n            <Route\n              exact\n              path=\"/admin/dashboard/navigation-menu\"\n              component={AdmNavMenu}\n            />\n            <Route\n              exact\n              path=\"/admin/dashboard/products\"\n              component={AdmProducts}\n            />\n            <Route exact path=\"/admin/dashboard/colors\" component={AdmColors} />\n            <Route exact path=\"/admin/dashboard/sizes\" component={AdmSizes} />\n            {/* <Route\n            exact\n            path=\"/admin/dashboard/carousel\"\n            component={AdmCarousel}\n          />\n          <Route exact path=\"/admin/dashboard/users\" component={AdmUsers} />\n          <Route exact path=\"/admin/dashboard/footer\" component={AdmFooter} /> */}\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default AdminDashboard;\n","import React, { Component } from \"react\";\n\nclass AdmCarousel extends Component {\n  render() {\n    return (\n      <div>\n        <p>Admin AdmCarousel Menu</p>\n      </div>\n    );\n  }\n}\n\nexport default AdmCarousel;\n","import React, { Component } from \"react\";\n\nclass AdmUsers extends Component {\n  render() {\n    return (\n      <div>\n        <p>Admin AdmUsers Menu</p>\n      </div>\n    );\n  }\n}\n\nexport default AdmUsers;\n","import React, { Component } from \"react\";\n\nclass AdmFooter extends Component {\n  render() {\n    return (\n      <div>\n        <p>Admin AdmFooter Menu</p>\n      </div>\n    );\n  }\n}\n\nexport default AdmFooter;\n","import React, {Component, Fragment} from 'react';\nimport {connect} from \"react-redux\";\nimport {NavLink} from \"react-router-dom\";\nimport {withRouter} from \"react-router-dom\";\nimport FormLogin from '../LoginForm/FormLogin'\n\nimport './RedirectLogin.scss';\nimport {checkRedirectLogin} from \"../../../actions/login\";\n\nclass RedirectLogin extends Component {\n\n\n    handleSubmit = (values) => {\n        let historyLink = this.props.login.historyPath;\n\n        let sendLogin = {\n            email: values.email,\n            password: values.password\n        };\n\n        this.props.checkRedirectLogin(sendLogin, this.props.history, historyLink);\n\n    }\n\n\n    render() {\n\n        let classCheckEmail = (this.props.windowsStatus.invalidLogin) ? null : 'd-none';\n\n        return (\n            <Fragment>\n                <NavLink\n                    to=\"/\"\n                    // onClick={() => this.props.goToProfile(this.props.history)}\n                >\n                    Back to main page\n                </NavLink>\n                <div className='redirect-login'>\n                    <h2 className='login-menu_header'>Log in</h2>\n                    <p className='login-menu_par'>Please enter your account details to log in</p>\n\n\n                    <div className={classCheckEmail}>\n                        Invalid Email or password\n                    </div>\n                    <FormLogin onSubmit={this.handleSubmit}/>\n\n\n                </div>\n            </Fragment>\n        );\n    };\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        windowsStatus: state.login.windowsStatus,\n        login: state.login\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        checkRedirectLogin: (loginForm, history, link) => dispatch(checkRedirectLogin(loginForm, history, link)),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(RedirectLogin))","import React, {Component} from 'react';\nimport axios from 'axios';\n\nimport {NavLink} from \"react-router-dom\";\n\nimport \"./verify-login.scss\"\n\nclass VerifyLogin extends Component {\n\n    state = {\n        success: false,\n    }\n\n    componentDidMount() {\n\n        axios.post(\"/users/verify\", {id: this.props.match.params.id})\n            .then(res => res.data)\n            .then(data => {\n                if (data.success) {\n                    this.setState({\n                        success: true\n                    })\n                }\n            })\n            .catch()\n\n    }\n\n    render() {\n\n        return (\n            <>\n                {\n                    (!this.state.success) ?\n                        (<div className=\"verify-block\">\n\n                            <p className=\"verify-title\">\n                                Unsuccessfull verifying of email\n                            </p>\n\n                            <p className=\"verify-text\">\n                                You try to verify incorrect email\n                            </p>\n                            <p className=\"verify-text\">\n                                Please open our mail and click on link\n                            </p>\n\n                            <NavLink className=\"verify-link\" to=\"/\">\n                                Go to main page\n                            </NavLink>\n                        </div>) :\n                        (<div className=\"verify-block\">\n\n                            <p className=\"verify-title\">\n                                Successfull verifying of email\n                            </p>\n\n                            <p className=\"verify-text\">\n                                You account was successfully verified.\n                            </p>\n                            <p className=\"verify-text\">\n                                You can go to main page and log in\n                            </p>\n\n                            <NavLink className=\"verify-link\" to=\"/\">\n                                Go to main page\n                            </NavLink>\n                        </div>)\n                }\n            </>\n        )\n    }\n\n}\n\nexport default VerifyLogin","import React, { Component } from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\n\nimport Dashboard from \"./components/Dashboard\";\nimport AdminDashboard from \"./components/AdminDashboard\";\nimport RedirectLogin from \"./components/TopBlockAuth/RedirectLogin\";\nimport VerifyLogin from \"./components/VerifyLogin\";\n\nimport { checkLoginCartOnStart } from \"./actions/login\";\n\nimport \"./scss/style.scss\";\n\nclass App extends Component {\n  render() {\n    checkLoginCartOnStart();\n\n    return (\n      <Switch>\n        <Route exact path=\"/login\" component={RedirectLogin} />\n        <Route exact path=\"/verify/:id\" component={VerifyLogin} />\n        <Route path=\"/admin/dashboard\" component={AdminDashboard} />\n        <Route path=\"/\" component={Dashboard} />\n      </Switch>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/matter.5ee19603.svg\";"],"sourceRoot":""}