{"version":3,"sources":["img/user-solid.svg","img/matter-white.svg","utils/setAuthToken.js","reducers/login/index.js","actions/navMenuActions.js","reducers/navMenu/index.js","actions/addToCart.js","actions/product.js","reducers/product/index.js","actions/filterActions.js","reducers/filters/index.js","actions/productDetails.js","reducers/productDetails/index.js","actions/categoryCarousel.js","reducers/categoryCarousel/index.js","reducers/cart/index.js","actions/cart.js","reducers/addToCart/index.js","actions/search.js","reducers/search/index.js","actions/scroll.js","reducers/scroll/index.js","actions/adminDashboard/admNavMenuActions.js","reducers/adminDashboard/admNavMenuStates.js","actions/adminDashboard/admProductsActions.js","reducers/adminDashboard/admProductsStates.js","actions/adminDashboard/admColorActions.js","reducers/adminDashboard/admColorStates.js","actions/adminDashboard/admSizeActions.js","reducers/adminDashboard/admSizeStates.js","reducers/index.js","store.js","actions/login.js","validation/index.js","components/atomic/customRequiredInput.js","components/TopBlockAuth/LoginForm/FormLogin.js","components/TopBlockAuth/LoginForm/index.js","components/TopBlockAuth/RegistrationForm/FormRegistration.js","components/TopBlockAuth/RegistrationForm/index.js","components/TopBlockAuth/RegistrationOk/index.js","components/Search/index.js","components/TopBlockAuth/index.js","components/Header/NavMenu/index.js","components/Header/index.js","components/Footer/index.js","components/ProductsCarousel/index.js","components/Subscribe/index.js","components/ProductCard/index.js","components/ProductListing/index.js","components/Preloader/index.js","components/CategoryCarousel/index.js","components/ScrollBtn/index.js","components/SearchResultItem/index.js","components/SearchDropDownList/index.js","components/MainPage/index.js","components/ProductPage/PhotoGallery/index.js","components/ProductPage/ProductInfo/ProductColors/index.js","components/atomic/ProductCounter/index.js","components/ProductPage/ProductInfo/ProductSizes/index.js","components/atomic/BtnAddToCart/index.js","components/ProductPage/ProductInfo/index.js","components/BreadCrumbs/index.js","components/ProductPage/index.js","components/atomic/customCorrectEmail.js","components/Profile/PersonalContent/FormPersonalContent.js","components/Profile/PersonalContent/index.js","components/Profile/ChangePassword/FormChangePassword.js","components/Profile/ChangePassword/index.js","components/Profile/OrdersHistory/index.js","components/Profile/index.js","components/Unsubscribe/index.js","components/Cart/FinalOrder/index.js","components/Cart/index.js","components/Checkout/PlaceOrder/index.js","components/Checkout/FormDeliveryCheckout.js","components/Checkout/FormPaymentCheckout.js","components/Checkout/Modals/SuccessOrder/index.js","components/atomic/FormLogin.js","components/Checkout/Modals/UnsuccessOrder/FormCheckoutByEmail.js","components/Checkout/Modals/UnsuccessOrder/index.js","components/Checkout/Modals/FinishAfterLogin/index.js","components/Checkout/index.js","components/FilteredProductList/Filters/CategoryFilter/index.js","components/FilteredProductList/Filters/ColorFilter/index.js","components/FilteredProductList/Filters/SizeFilter/index.js","components/FilteredProductList/Filters/PriceFilter/index.js","components/FilteredProductList/Filters/index.js","components/EmptyState/index.js","components/FilteredProductList/index.js","components/StaticPages/AboutUs.js","components/StaticPages/OurPolicy.js","components/StaticPages/Careers.js","components/Dashboard/index.js","components/AdminDashboard/AdmNavMenu/index.js","components/AdminDashboard/AdmProducts/index.js","components/AdminDashboard/AdmColors/index.js","components/AdminDashboard/AdmSizes/index.js","components/AdminDashboard/index.js","components/TopBlockAuth/RedirectLogin/index.js","components/VerifyLogin/index.js","components/ErrorAccess/index.js","App.js","serviceWorker.js","index.js","img/matter.svg"],"names":["module","exports","__webpack_require__","p","setAuthToken","token","axios","defaults","headers","common","initialState","isLogged","historyPath","loggedData","id","firstName","secondName","email","isAdmin","deliveryData","country","zipcode","city","street","phone","paymentInfo","cardNumber","nameOnCard","expiryMonth","expiryYear","windowsStatus","formLoginOpen","formRegisterOpen","formRegistrationOk","loginDetails","successRegister","invalidLogin","existEmail","errorStatus","errorProfileExistEmail","errorProfileWrongPassword","login","state","arguments","length","undefined","action","type","SET_LOGGED","Object","objectSpread","SAVE_HISTORY_PATH","payload","link","SET_JWT_CURRENT_USER","LOGOUT_JWT_CURRENT_USER","SEND_NEW_USER","OPEN_LOGIN_FORM","CLOSE_LOGIN_FORM","OPEN_LOGIN_DETAILS","CLOSE_LOGIN_DETAILS","OPEN_REG_FORM","CLOSE_REG_FORM","OPEN_REG_OK_FORM","CLOSE_REG_OK_FORM","EXIST_USER","PROFILE_EXIST_EMAIL","PROFILE_INCORRECT_PASSWORD_CHANGE","PROFILE_CORRECT_PASSWORD_CHANGE","PROFILE_CORRECT_PERSONAL_CHANGE","userinfo","_id","INCORRECT_LOGIN","CORRECT_LOGIN","LOGOUT","name","RESET_WINDOW_STATUS","SEND_NAV_REQUEST","GET_NAV_MENU","OPEN_SUB_MENU","CLOSE_SUB_MENU","isMenuFetching","navMenuItems","navMenuWindowStatus","currentOnMouseOverCategory","navMenu","SET_INITIAL_STATE_ADD_CART","SET_COLOR","SET_SIZE","SET_AMOUNT","SET_IMG","SEND_PRODUCT_REQUEST","GET_PRODUCT_LISTING","SEND_PRODUCT_POP_REQUEST","GET_PRODUCT_POP_LISTING","SAVE_PRODUCT_DETAILS","productListing","productPopularListing","isProductListing","isProductPopularListing","activeColor","product","FETCH_FILTER_REQUESTED","FETCH_FILTER_SUCCEEDED","FETCH_PRODUCT_REQUESTED","FETCH_PRODUCT_SUCCEEDED","FETCH_ADD_PRODUCT_SUCCEEDED","SELECT_FILTERS","SELECT_SIZE","SELECT_PRICE","SET_DEFAULT_PAGE","SET_NUMBER_OF_PAGES","SET_PAGE","CLEAR_PRODUCTS_LIST","clearProductList","dispatch","selectFilters","currentFilters","newFilters","subCategory","furtherSubCategory","colorName","size","filters","assign","post","category","minPrice","price","min","maxPrice","max","pageNo","then","info","products","data","newProducts","JSON","parse","stringify","amountPages","amount","catch","err","console","log","selectSize","selectPrice","isFilterFetching","isProductFetching","colorFilters","sizeFilters","sizeOptions","currentSizeOption","selected","colors","newArray","map","elem","forEach","push","FETCH_PRODUCT_DETAIL_REQUEST","FETCH_PRODUCT_DETAIL_SUCCEED","FETCH_PRODUCT_DETAIL_FAIL","getProductDetails","routeDetails","get","concat","params","result","isAvailable","reasonNotAvailable","model","currentPrice","priceFormDB","productOpened","productFeatures","imageUrls","sizes","productDetails","FETCH_CATEGORY_CAROUSEL_REQUESTED","FETCH_CATEGORY_CAROUSEL_SUCCEEDED","categoriesList","isCategoriesFetching","categoryCarousel","amountInBasket","idUser","userMail","idCartInDB","orderNo","arrayProduct","arrayCheckout","windows","successOrder","unsuccessOrder","finishAfterLogin","checkedDelivery","deliveryMethods","duration","setLocalStorage","arr","localStorage","setItem","countAmount","array","count","saveInDB","dataCart","sendObj","res","success","store","SET_ID_CART_FROM_DB","updateInDB","updateIsFinished","obj","dataOrder","mail","textOrder","getListProductInHtml","sendOrder","SET_ORDER_NO","OPEN_MODAL_SUCCESS_ORDER","SET_DEFAULT_FINISHED_CART","updateCartIsFinished","cart","SET_ID_LOGGED_USER","SET_DATA_CART_FROM_DB","infoDB","DELETE_ITEM_TO_CART","CART_FROM_LOCALSTORAGE_TO_DB","CLEAR_CART_ON_LOGOUT","ADD_ITEM_TO_CART","arrProd","index","item","CHANGE_CHECK_AMOUT_OF_ITEM","changeCheckArrayAmountProd","newArr","SET_CART_FROM_LOCALSTORAGE","arrLS","UPDATE_STORE_AFTER_CHECK_IN_DB","changeAfterCheck","CHANGE_DELIVERY_METHOD","method","SET_FINISHED_CART","CLOSE_MODAL_SUCCESS_ORDER","OPEN_MODAL_UNSUCCESS_ORDER","CLOSE_MODAL_UNSUCCESS_ORDER","SET_INVALID_LOGIN","SUCCESSFULL_SEND_ORDER_BY_EMAIL","OPEN_MODAL_FINISH_ORDER_AFTER_LOGIN","CLOSE_MODAL_FINISH_ORDER_AFTER_LOGIN","availableAmount","urlPhoto","addToCart","color","url","FETCH_SEARCH_REQUESTED","FETCH_SEARCH_SUCCEEDED","TYPE_SEARCH_VALUE","FOCUS_SEARCH_INPUT","BLUR_SEARCH_INPUT","CLEAR_SEARCH_INPUT","CLOSE_SEARCH_RESULTS","VALIDATE_SEARCH_VALUE","searchStart","searchSuccess","search","call","value","cancel","CancelToken","source","query","cancelToken","response","thrown","isCancel","makeRequestCreator","focus","searchString","nonValid","closeResults","isSearchFetching","SET_OFFSET_Y","position","scroll","CHANGE_SELECTED_ITEM_ACTIVE_STATUS","ADD_NEW_CATEGORY","ADD_NEW_SUB_CATEGORY","ADD_NEW_FURTHER_SUB_CATEGORY","FETCH_NAV_MENU_REQUESTED","FETCH_NAV_MENU_SUCCEEDED","FETCH_NAV_MENU_FAILED","getAdmNavMenuItems","categoryList","navMenuItemsArr","resultMessage","admNavMenu","rand","uniqueRandom","GET_CATEGORY_NAME","GET_SUB_CATEGORY_NAME","GET_FURTHER_SUB_CATEGORY_NAME","SET_SUBCATEGORY_OPTIONS","SET_FURTHER_SUBCATEGORY_OPTIONS","GET_PRODUCT_MODEL_NAME","GET_WITHDRAWN_STATUS","GET_ACTIVE_STATUS","GET_CURRENT_PRICE","GET_PREVIOUS_PRICE","UPDATE_PRODUCT_FEATURES","SET_COLOR_OPTIONS","SET_SIZE_OPTIONS","RESET_MODAL_STATUS","RESET_PRODUCT_FORM","SET_ERROR_MSG","GENERATE_NEW_ITEM_NO","COLOR_COLLECTION_UPDATE_MESSAGE","SIZE_COLLECTION_UPDATE_MESSAGE","FETCH_NEW_PRODUCT_REQUESTED","FETCH_NEW_PRODUCT_SUCCEEDED","FETCH_NEW_PRODUCT_FAILED","FETCH_NEW_PRODUCT_PHOTOS_SUCCEEDED","FETCH_NEW_PRODUCT_PHOTOS_FAILED","getProductFeatures","all","spread","colorNameOptions","label","sort","a","b","colorStyles","cssHexCode","colorCollection","hasDublicates","arrayOfObjects","propName","subPropName","some","i","indexOf","urltoFile","_ref","asyncToGenerator","regenerator_default","mark","_callee","filename","mimeType","file","wrap","_context","prev","next","fetch","arrayBuffer","buf","File","sent","abrupt","stop","this","_x","_x2","_x3","apply","itemNo","productModelName","subCategoryOptions","furtherSubCategoryOptions","withdrawnFromSale","active","previousPrice","colorOptions","previewImages","blobUrls","filesRejected","quantity","resetModalStatus","validation","colorDublicate","imageNamesDuplicate","sizeDublicate","fetchingNewProduct","productMessage","photosMessage","colorCollectionUpdateMessage","sizeCollectionUpdateMessage","admProducts","GET_NEW_COLOR_HEX","GET_NEW_COLOR_NAME","NEW_COLOR_MESSAGE","NEW_COLOR_MODAL_STATUS","FETCH_NEW_COLOR_REQUESTED","FETCH_NEW_COLOR_SUCCEEDED","FETCH_NEW_COLOR_FAILED","FETCH_EXISTING_COLOR_REQUESTED","FETCH_EXISTING_COLOR_SUCCEEDED","existingColors","isExistingColorsFetching","newColorName","newCssHexCode","newColorMessage","existingColorObject","newColorObject","newColorModalStatus","finalMessage","isAllColorsFetching","admColors","GET_NEW_SIZE_NAME","FETCH_NEW_SIZE_REQUESTED","FETCH_NEW_SIZE_SUCCEEDED","FETCH_NEW_SIZE_FAILED","FETCH_EXISTING_SIZE_REQUESTED","FETCH_EXISTING_SIZE_SUCCEEDED","FETCH_EXISTING_SIZE_FAILED","GET_NUPDATED_SIZE_NAME","FETCH_UPDATING_SIZE_REQUESTED","FETCH_UPDATING_SIZE_SUCCEEDED","FETCH_UPDATING_SIZE_FAILED","newSizeName","isNewSizeFetching","checkNewSizeResult","isExistingSizesFetching","existingSizes","updatingSizes","sizeUpdateResults","isSizeUpdating","preUpdateValue","updatedSizeValue","errorMsg","fetchExistingSizesMessage","admSizes","rootReducer","combineReducers","form","formReducer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","sendCheckout","toFixed","checkLoginCartOnStart","jwtToken","decoded","jwt_decode","setLoggedUser","_doc","userId","readyData","currentTime","Date","now","exp","unsetLoggedUser","location","href","savedCart","checkSavedCart","removeItem","goToProfile","history","correctEmail","input","RegExp","test","cvc","dateExp","allInputs","date","requiredInput","matchPasswords","newPass","matchPasswordsReg","password","customRequiredInput","props","className","classError","placeholder","meta","react_default","createElement","react","error","touched","FormLogin","handleSubmit","onSubmit","Field","component","validate","Component","reduxForm","LoginForm","values","sendLogin","_this","checkLogin","classCheckEmail","data-btn","onClick","document","body","style","overflow","LoginForm_FormLogin","connect","loginForm","openLoginForm","closeLoginForm","openRegForm","closeRegForm","FormRegistration","classExistEmail","RegistrationForm","newForm","password2","addNewUser","RegistrationForm_FormRegistration","regForm","RegistrationOk","Search","_this$props","clearSearchInput","focusSearchInput","validateSearchValue","width","onChange","e","target","onFocus","onKeyPress","React","key","preventDefault","TopBlockAuth","clickOnLogin","clickOnRegistration","handleLoginForm","dataset","btn","stopPropagation","handleRegistrationForm","handleRegistrationOk","_this2","notLogged","isCartNotEmpty","amountCart","components_Search","src","userLogo","alt","openLoginDetails","handleDropDownProfile","NavLink","to","react_fontawesome_index_es","icon","faCogs","TopBlockAuth_LoginForm","TopBlockAuth_RegistrationForm","TopBlockAuth_RegistrationOk","closeLoginDetails","logout","withRouter","NavMenu","initiateCategoryFilters","newCategory","newSubCategory","newFurtherSubCategory","getNavMenuItems","menuList","onMouseOver","openSubMenu","categoryName","closeSubMenu","Link","categoryUrl","subMenuList","subCategoryList","subfurtherSubCategory","furtherSubCategoryList","furtherSubCategoryUrl","subCategoryName","furtherSubCategoryName","subCategoryUrl","charAt","toUpperCase","slice","subMenuSection","onMouseLeave","miniPreloader","Fragment","Header","logo","Header_NavMenu","components_TopBlockAuth","Footer","content","setState","footerContent","linksList","links","title","path","activeClassName","ProductsCarousel","dbCarousel","_this3","itemsCarousel","desc","imageUrl","productUrl","react_responsive_carousel_lib","autoPlay","interval","transitionTime","stopOnHover","showIndicators","infiniteLoop","showStatus","useKeyboardArrows","Subscribe","hintMessage","handleChange","sendMail","subMail","setTimeout","ProductCard","split","word","join","saveProductDetails","ProductListing","getProductPopular","counterItems","listProduct","productItem","children","components_ProductCard","Preloader","CategoryCarousel","getCategoryItem","listCategories","categoryImg","components_Preloader","ScrollBtn","intervalId","pageYOffset","clearInterval","scrollStepInPx","setInterval","scrollStep","delayInMs","offsetY","scrollToTop","SearchResultItem","closeSearchResults","resetColor","searchedProductList","productColors","backgroundColor","productSizes","uniqueProductSizes","toConsumableArray","Set","categoryMatches","AutosuggestHighlightMatch","categoryMatched","AutosuggestHighlightParse","part","highlight","text","subCategoryMatches","subCategoryMatched","furtherSubCategoryMatches","furtherSubCategoryMatched","modelMatches","modelMatched","itemNoMatches","itemNoMatched","sizeMatches","sizeMatched","SearchDropDownList","components_SearchResultItem","MainPage","components_ScrollBtn","components_SearchDropDownList","components_ProductsCarousel","components_ProductListing","components_CategoryCarousel","components_Subscribe","PhotoGallery","prevProps","prevState","setColorAddCart","setUrlAddCart","photoGallery","photoGalleryFiltered","filter","mainPhotoObj","mainPhotoSrc","ReactImageMagnify","smallImage","isFluidWidth","largeImage","height","ProductColors","activeElement","changeColor","ProductCounter","event","setAmountAddCart","increaseCount","maxcount","existValue","decreaseCount","inputValue","maxCount","onInput","ProductSizes","productCount","chosenSize","choseSizes","setSizeAddCart","Number","atomic_ProductCounter","BtnAddToCart","clickStatus","sendToCart","isExist","infoCart","addProductToCart","clickStatusText","ProductInfo","Helmet","rel","ProductColors_ProductColors","ProductInfo_ProductSizes","atomic_BtnAddToCart","BreadCrumbs","changeCategoryFilters","_this$props$categoryA","categoryAway","subCategories","cat","subCat","furtherSubCatList","furtherSubCat","mainCategory","modelName","ProductPage","thumbs","setInitialColor","match","_this$props$productIt","components_BreadCrumbs","ProductPage_PhotoGallery","ProductPage_ProductInfo","customCorrectEmail","FormPersonalContent","pristine","submitting","invalid","disabled","initialValues","PersonalContent","sendObject","personalInfo","profileChangePersonal","classIsLogged","classNotLogged","isNewEmailUser","PersonalContent_FormPersonalContent","status","FormChangePassword","ChangePassword","currPass","newPassword","profileChangePassword","isCorrectPassword","ChangePassword_FormChangePassword","OrdersHistory","arrOrders","arrMonths","dateOrder","dd","getDate","mm","getMonth","yy","getFullYear","listProducts","Profile","pathname","setHistoryLink","Route","exact","Unsubscribe","submitted","unsubscribeMail","FinalOrder","totalPrice","dataBasket","Cart","isBlock","isRequest","isNaN","arrayCheckProducts","checkItem","checkArrayAvailableItems","defineProperty","falseBlock","falseRequest","addAmount","newAmount","minusAmount","deleteItem","splice","nextProps","nextState","isUpdate","productList","keyItem","classIsAvailable","classIsNotAvailable","classWasChangedPrice","classWasntChangedPrice","faTimes","Cart_FinalOrder","changeArrayAmount","arrData","updatedArray","checkAvailableItem","PlaceOrder","deliveryPrice","enableBtn","setFinishedCart","FormDeliveryCheckout","FormPaymentCheckout","checkCorrectPayment","SuccessOrder","modalSuccessOrder","modalSuccessBackdrop","closeSuccessOrder","FormCheckoutByEmail","UnsuccessOrder","handleSubmitLogin","checkLoginBeforeCheckout","handleSubmitEmail","sendOrderByEmail","modalUnsuccessOrderFailLogin","atomic_FormLogin","UnsuccessOrder_FormCheckoutByEmail","closeUnsuccessOrder","FinishAfterLogin","modalFinishAfterLogin","Checkout","showDelivery","showPayment","finishOrder","clickShowDelivery","handleDeliverySubmit","handlePaymentSubmit","handleLoginUnsuccessForm","arrayProducts","arrayDelivery","checked","handleDeliveryRadio","htmlFor","showDeliveryClass","showPaymentClass","Checkout_FormDeliveryCheckout","Checkout_FormPaymentCheckout","Checkout_PlaceOrder","Modals_SuccessOrder","Modals_UnsuccessOrder","Modals_FinishAfterLogin","radio","CategoryFilter","urlParams","categoryFilters","ColorFilter","componentDidMount","getFilterElems","handleColorRadio","currentColorName","colorItems","unshift","SizeFilter","sizeFilterChange","selectedOption","currentCategoriesLength","currentCategories","includes","relevantSizeOptions","categories","splitedCat","react_select_esm","options","PriceFilter","_this$props$urlParams","onPriceFilter","js_default","formatLabel","maxValue","minValue","step","allowSameValues","draggableTrack","onChangeComplete","selectedPrice","Filters","filterReset","Filters_CategoryFilter","Filters_PriceFilter","Filters_ColorFilter","Filters_SizeFilter","EmptyState","isFilterResultEmpty","returnToMainPage","FilteredProductList","addNumberPage","currentValue","_this$props$match$par","getFilteredProducts","filteredProductList","isSizePresent","filterEmptyState","EmptyState_EmptyState","FilteredProductList_Filters","react_infinite_scroller_default","pageStart","loadMore","hasMore","threshold","setNewPage","AboutUs","pageTitle","pageContent","OurPolicy","Careers","Dashboard","handleScroll","setOffsetY","handleCloseForms","closeRegistrationOk","blurSearchInput","checkoutWindows","addEventListener","removeEventListener","components_Header","Switch","components_Footer","AdmNavMenu","chosenCategory","chosenSubCategory","newCategotyName","newSubCategotyName","newFurtherSubCategotyName","resetState","handleNewItemsChange","errors","handleCategoryRadio","handleSubCategoryRadio","isCategoryCurrent","toLowerCase","changeSelectedItemActiveStatus","isSubCategoryCurrent","furtherSubCategories","addNewCategory","addNewSubCategory","addNewFurtherSubCategory","saveUpdatedNavMenu","newState","String","Math","random","callbackGetAdmNavMenuItems","keys","updatedMenu","navigationMenuItems","AdmProducts","getCategory","getSubCategory","getFurtherSubCategory","getProductModelName","getwithdrawnStatus","getActiveStatus","getCurrentPrice","getPreviousPrice","handleProductColors","addColor","addSize","getImages","onFilesRejected","deleteDropzoneImage","deleteSize","deleteColor","handleProductSizes","handleProductQuantity","resetModal","resetForm","generateNewItemNo","sendNewProductToServer","categoryOptions","productFeaturesList","colorIndex","currentColor","currentColorCssHexCode","dublicates","img","imgName","imgNamesArr","previewImagesContent","image","preview","data-index","data-action","sizeItemList","sizeIndex","option","dist_es","multiple","onDrop","files","onDropRejected","accept","acceptClassName","rejectClassName","maxSize","faImages","encType","required","isDisabled","fSubCat","colorOption","colorCssHexCode","updatedProductFeatures","newValidation","newImages","incomingImages","lastModified","lastModifiedDate","webkitRelativePath","blobUrl","URL","createObjectURL","fileName","imgs","getAttribute","previousElementSibling","j","newValidationProductFeatures","sizeOption","quantuty","validationObject","validateForm","Array","isArray","prop","subItem","subProp","isInvalid","newProduct","_ref2","_callee2","imageUrlStaticPart","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","formData","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_iterator4","_step4","blobFile","newProductColors","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","_color","nonUniqueSizes","newProductUniqueSizes","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_iterator3","_step3","_context2","message","Symbol","iterator","done","FormData","append","t0","return","finish","content-type","t1","updatedColor","t2","updatedSize","t3","_x4","AdmColors","getExistingColorsFromDb","getNewColorName","getNewColorHex","checkNewColorInDb","handleNewColorModal","addOrUpdateColorInDb","updateColorsInAllProducts","existingColorsList","react_color_lib","colorPickerObject","hex","trim","replace","colorInfo","existingColor","callbackGetUpdatedColors","callbackGetProductFeatures","callbackUpdateColorsInAllProducts","preUpdatedProducts","updatedProducts","AdmSizes","getExistingSizes","getNewSizeName","saveNewSizeInDb","getUpdatedSize","updateSizeInDb","updateSizesInAllProducts","existingSizeValues","updatingSizeInputs","categoriesInSizes","multiArr","sizeCat","uniqueCatsString","sizeName","cbGetExistingSizes","newSize","existingSize","allSizes","sizeId","newSizes","newSizeValue","callbackGetExistingSizes","callbackUpdateSizesInAllProducts","previousSizeName","AdminDashboard","RedirectLogin","historyLink","checkRedirectLogin","VerifyLogin","ErrorAccess","App","Boolean","hostname","ReactDOM","render","es","BrowserRouter","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5ddf89cf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/user-solid.a617dfb6.svg\";","module.exports = __webpack_public_path__ + \"static/media/matter-white.87e92378.svg\";","import axios from \"axios\";\r\n\r\nconst setAuthToken = token => {\r\n    if (token) {\r\n        // Apply to every request\r\n        axios.defaults.headers.common[\"Authorization\"] = token;\r\n    } else {\r\n        // Delete auth header\r\n        delete axios.defaults.headers.common[\"Authorization\"];\r\n    }\r\n};\r\n\r\nexport default setAuthToken;","import {\r\n    SET_LOGGED, SEND_NEW_USER, OPEN_LOGIN_FORM, CLOSE_LOGIN_FORM,\r\n    OPEN_REG_FORM, CLOSE_REG_FORM, EXIST_USER, RESET_WINDOW_STATUS, INCORRECT_LOGIN,\r\n    CORRECT_LOGIN, OPEN_LOGIN_DETAILS, CLOSE_LOGIN_DETAILS, LOGOUT, PROFILE_EXIST_EMAIL,\r\n    PROFILE_CORRECT_PERSONAL_CHANGE, PROFILE_CORRECT_PASSWORD_CHANGE,\r\n    PROFILE_INCORRECT_PASSWORD_CHANGE, SET_JWT_CURRENT_USER, LOGOUT_JWT_CURRENT_USER,\r\n    SAVE_HISTORY_PATH, OPEN_REG_OK_FORM, CLOSE_REG_OK_FORM\r\n} from '../../actions/login'\r\n\r\nconst initialState = {\r\n    isLogged: false,\r\n    historyPath: '',\r\n    loggedData: {\r\n        id: '',\r\n        firstName: '',\r\n        secondName: '',\r\n        email: '',\r\n        isAdmin: false,\r\n        deliveryData: {\r\n            country: '',\r\n            zipcode: '',\r\n            city: '',\r\n            street: '',\r\n            phone: ''\r\n\r\n        },\r\n        paymentInfo: {\r\n            cardNumber: '',\r\n            nameOnCard: '',\r\n            expiryMonth: '',\r\n            expiryYear: ''\r\n        }\r\n    },\r\n    windowsStatus: {\r\n        formLoginOpen: false,\r\n        formRegisterOpen: false,\r\n        formRegistrationOk: false,\r\n        loginDetails: false,\r\n        successRegister: false,\r\n        invalidLogin: false,\r\n        existEmail: false,\r\n    },\r\n    errorStatus: {\r\n        errorProfileExistEmail: false,\r\n        errorProfileWrongPassword: false\r\n\r\n    }\r\n}\r\n\r\nfunction login(state = initialState, action) {\r\n\r\n    switch (action.type) {\r\n        case SET_LOGGED:\r\n            return {...state}\r\n\r\n        case SAVE_HISTORY_PATH:\r\n            return {\r\n                ...state,\r\n                historyPath: action.payload.link,\r\n            }\r\n\r\n        case SET_JWT_CURRENT_USER:\r\n            return {\r\n                ...state,\r\n                isLogged: true,\r\n                loggedData: {...action.payload},\r\n                windowsStatus: {\r\n                    formLoginOpen: false,\r\n                    formRegisterOpen: false,\r\n                    formRegistrationOk: false,\r\n                    loginDetails: false,\r\n                    successRegister: false,\r\n                    invalidLogin: false,\r\n                    existEmail: false,\r\n                },\r\n\r\n            }\r\n        case LOGOUT_JWT_CURRENT_USER:\r\n            return {\r\n                ...state,\r\n                isLogged: false,\r\n                loggedData: {\r\n                    id: '',\r\n                    firstName: '',\r\n                    secondName: '',\r\n                    email: '',\r\n                    isAdmin: false,\r\n                    deliveryData: {\r\n                        country: '',\r\n                        zipcode: '',\r\n                        city: '',\r\n                        street: '',\r\n                        phone: ''\r\n\r\n                    },\r\n                    paymentInfo: {\r\n                        cardNumber: '',\r\n                        nameOnCard: '',\r\n                        expiryMonth: '',\r\n                        expiryYear: ''\r\n                    }\r\n                },\r\n                windowsStatus: {\r\n                    formLoginOpen: false,\r\n                    formRegisterOpen: false,\r\n                    formRegistrationOk: false,\r\n                    loginDetails: false,\r\n                    successRegister: false,\r\n                    invalidLogin: false,\r\n                    existEmail: false,\r\n                },\r\n            }\r\n\r\n        case SEND_NEW_USER:\r\n            return {...state}\r\n\r\n        case OPEN_LOGIN_FORM:\r\n            return {\r\n                ...state,\r\n                windowsStatus: {\r\n                    ...state.windowsStatus,\r\n                    formLoginOpen: true,\r\n                }\r\n            }\r\n        case CLOSE_LOGIN_FORM:\r\n            return {\r\n                ...state,\r\n                windowsStatus: {\r\n                    ...state.windowsStatus,\r\n                    formLoginOpen: false,\r\n                }\r\n            }\r\n        case OPEN_LOGIN_DETAILS:\r\n            return {\r\n                ...state,\r\n                windowsStatus: {\r\n                    ...state.windowsStatus,\r\n                    loginDetails: true,\r\n                }\r\n            }\r\n        case CLOSE_LOGIN_DETAILS:\r\n            return {\r\n                ...state,\r\n                windowsStatus: {\r\n                    ...state.windowsStatus,\r\n                    loginDetails: false,\r\n                }\r\n            }\r\n        case OPEN_REG_FORM:\r\n            return {\r\n                ...state,\r\n                windowsStatus: {\r\n                    ...state.windowsStatus,\r\n                    formRegisterOpen: true,\r\n                }\r\n            }\r\n        case CLOSE_REG_FORM:\r\n            return {\r\n                ...state,\r\n                windowsStatus: {\r\n                    ...state.windowsStatus,\r\n                    formRegisterOpen: false,\r\n                    // formRegistrationOk: true,\r\n                }\r\n            }\r\n\r\n        case OPEN_REG_OK_FORM:\r\n            return {\r\n                ...state,\r\n                windowsStatus: {\r\n                    ...state.windowsStatus,\r\n                    formRegisterOpen: false,\r\n                    formRegistrationOk: true,\r\n                }\r\n            }\r\n        case CLOSE_REG_OK_FORM:\r\n            return {\r\n                ...state,\r\n                windowsStatus: {\r\n                    ...state.windowsStatus,\r\n                    formRegistrationOk: false,\r\n                }\r\n            }\r\n\r\n        case EXIST_USER:\r\n            return {\r\n                ...state,\r\n                windowsStatus: {\r\n                    ...state.windowsStatus,\r\n                    existEmail: true,\r\n                }\r\n            }\r\n        case PROFILE_EXIST_EMAIL:\r\n            return {\r\n                ...state,\r\n                errorStatus: {\r\n                    ...state.errorStatus,\r\n                    errorProfileExistEmail: true,\r\n                }\r\n            }\r\n\r\n\r\n\r\n        case PROFILE_INCORRECT_PASSWORD_CHANGE:\r\n            return {\r\n                ...state,\r\n                errorStatus: {\r\n                    ...state.errorStatus,\r\n                    errorProfileWrongPassword: true,\r\n                }\r\n            }\r\n        case PROFILE_CORRECT_PASSWORD_CHANGE:\r\n            return {\r\n                ...state,\r\n                errorStatus: {\r\n                    ...state.errorStatus,\r\n                    errorProfileWrongPassword: false,\r\n                }\r\n            }\r\n\r\n\r\n\r\n        case PROFILE_CORRECT_PERSONAL_CHANGE:\r\n            return {\r\n                ...state,\r\n                windowsStatus: {\r\n                    formLoginOpen: false,\r\n                    formRegisterOpen: false,\r\n                    successRegister: false,\r\n                    formRegistrationOk: false,\r\n                    invalidLogin: false,\r\n                    existEmail: false,\r\n                },\r\n                isLogged: true,\r\n                loggedData: {\r\n                    id: action.payload.userinfo._id,\r\n                    firstName: action.payload.userinfo.firstName,\r\n                    secondName: action.payload.userinfo.secondName,\r\n                    email: action.payload.userinfo.email,\r\n                    isAdmin: action.payload.userinfo.isAdmin,\r\n                    deliveryData: {...action.payload.userinfo.deliveryData},\r\n                    paymentInfo: {...action.payload.userinfo.paymentInfo},\r\n                },\r\n                errorStatus: {\r\n                    ...state.errorStatus,\r\n                    errorProfileExistEmail: false,\r\n\r\n                }\r\n            }\r\n\r\n\r\n\r\n        case INCORRECT_LOGIN:\r\n            return {\r\n                ...state,\r\n                windowsStatus: {\r\n                    ...state.windowsStatus,\r\n                    invalidLogin: true,\r\n                }\r\n            }\r\n        case CORRECT_LOGIN:\r\n            return {\r\n                ...state,\r\n                windowsStatus: {\r\n                    formLoginOpen: false,\r\n                    formRegisterOpen: false,\r\n                    formRegistrationOk: false,\r\n                    successRegister: false,\r\n                    invalidLogin: false,\r\n                    existEmail: false,\r\n                },\r\n                isLogged: true,\r\n                loggedData: {\r\n                    id: action.payload.userinfo._id,\r\n                    firstName: action.payload.userinfo.firstName,\r\n                    secondName: action.payload.userinfo.secondName,\r\n                    email: action.payload.userinfo.email,\r\n                    isAdmin: action.payload.userinfo.isAdmin,\r\n                    deliveryData: {...action.payload.userinfo.deliveryData},\r\n                    paymentInfo: {...action.payload.userinfo.paymentInfo},\r\n                },\r\n                errorStatus: {\r\n                    ...state.errorStatus,\r\n                    errorProfileExistEmail: false,\r\n\r\n                }\r\n\r\n            }\r\n\r\n        case LOGOUT:\r\n            return {\r\n                ...state,\r\n                windowsStatus: {\r\n                    formLoginOpen: false,\r\n                    formRegisterOpen: false,\r\n                    formRegistrationOk: false,\r\n                    successRegister: false,\r\n                    invalidLogin: false,\r\n                    existEmail: false,\r\n                },\r\n                isLogged: false,\r\n                loggedData: {\r\n                    id: '',\r\n                    name: '',\r\n                    email: '',\r\n                    isAdmin: false,\r\n                },\r\n                errorStatus: {\r\n                    ...state.errorStatus\r\n\r\n                }\r\n\r\n            }\r\n        case RESET_WINDOW_STATUS:\r\n            return {\r\n                ...state,\r\n                windowsStatus: {\r\n                    formLoginOpen: false,\r\n                    formRegisterOpen: false,\r\n                    formRegistrationOk: false,\r\n                    successRegister: false,\r\n                    invalidLogin: false,\r\n                    existEmail: false,\r\n                }\r\n            }\r\n        default:\r\n            return {...state}\r\n\r\n    }\r\n}\r\n\r\nexport default login","import axios from \"axios\";\r\n\r\nexport const SEND_NAV_REQUEST = \"SEND_NAV_REQUEST\"; // Preloader while executing asynchronous action\r\nexport const GET_NAV_MENU = \"GET_NAV_MENU\"; // Get Navigation menu items from server\r\n\r\nexport const OPEN_SUB_MENU = \"OPEN_SUB_MENU\";\r\nexport const CLOSE_SUB_MENU = \"CLOSE_SUB_MENU\";\r\n\r\nexport const getNavMenuItems = () => dispatch => {\r\n  dispatch({\r\n    type: SEND_NAV_REQUEST\r\n  });\r\n\r\n  axios.get(\"/nav-menu\").then(navMenuItems => {\r\n    dispatch({\r\n      type: GET_NAV_MENU,\r\n      payload: navMenuItems.data[0].categoryList // The Array with the hierarchy Of Navigation menu categories (e.g. women) / subcategories (e.g. clothing) / further subcategories (e.g. pants, dresses)\r\n    });\r\n  });\r\n};\r\n\r\nexport const openSubMenu = category => dispatch => {\r\n  dispatch({\r\n    type: OPEN_SUB_MENU,\r\n    payload: category\r\n  });\r\n};\r\n\r\nexport const closeSubMenu = () => dispatch => {\r\n  dispatch({\r\n    type: CLOSE_SUB_MENU\r\n  });\r\n};\r\n","import {\r\n  GET_NAV_MENU,\r\n  SEND_NAV_REQUEST,\r\n  OPEN_SUB_MENU,\r\n  CLOSE_SUB_MENU\r\n} from \"../../actions/navMenuActions\";\r\n\r\nconst initialState = {\r\n  isMenuFetching: false,\r\n  navMenuItems: [],\r\n  navMenuWindowStatus: false,\r\n  currentOnMouseOverCategory: null\r\n};\r\n\r\nfunction navMenu(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SEND_NAV_REQUEST:\r\n      return {\r\n        ...state,\r\n        isMenuFetching: true\r\n      };\r\n    case GET_NAV_MENU:\r\n      return {\r\n        ...state,\r\n        navMenuItems: action.payload,\r\n        isMenuFetching: false\r\n      };\r\n    case OPEN_SUB_MENU:\r\n      return {\r\n        ...state,\r\n        currentOnMouseOverCategory: action.payload,\r\n        navMenuWindowStatus: true\r\n      };\r\n    case CLOSE_SUB_MENU:\r\n      return {\r\n        ...state,\r\n        currentOnMouseOverCategory: null,\r\n        navMenuWindowStatus: false\r\n      };\r\n    default:\r\n      return { ...state };\r\n  }\r\n}\r\n\r\nexport default navMenu;\r\n","export const SET_INITIAL_STATE_ADD_CART = 'SET_INITIAL_STATE_ADD_CART';\r\nexport const SET_COLOR = 'SET_COLOR';\r\nexport const SET_SIZE = 'SET_SIZE';\r\nexport const SET_AMOUNT = 'SET_AMOUNT';\r\nexport const SET_IMG = 'SET_IMG';","import axios from \"axios\";\r\nimport { SET_COLOR } from \"../actions/addToCart\";\r\nexport const SEND_PRODUCT_REQUEST = \"SEND_PRODUCT_REQUEST\";\r\nexport const GET_PRODUCT_LISTING = \"GET_PRODUCT_LISTING\";\r\n\r\nexport const SEND_PRODUCT_POP_REQUEST = \"SEND_PRODUCT_POP_REQUEST\";\r\nexport const GET_PRODUCT_POP_LISTING = \"GET_PRODUCT_POP_LISTING\";\r\n\r\nexport const SAVE_PRODUCT_DETAILS = \"SAVE_PRODUCT_DETAILS\";\r\n\r\nexport const getProductPopular = () => dispatch => {\r\n  dispatch({\r\n    type: SEND_PRODUCT_POP_REQUEST\r\n  });\r\n\r\n  axios.get(\"/popular-items\").then(productPopularListing => {\r\n    dispatch({\r\n      type: GET_PRODUCT_POP_LISTING,\r\n      payload: productPopularListing.data.map(item => item.product)\r\n    });\r\n  });\r\n};\r\n\r\nexport const getProductItem = () => dispatch => {\r\n  dispatch({\r\n    type: SEND_PRODUCT_REQUEST\r\n  });\r\n\r\n  axios.get(\"/products\").then(productListing => {\r\n    dispatch({\r\n      type: GET_PRODUCT_LISTING,\r\n      payload: productListing.data\r\n    });\r\n  });\r\n};\r\n\r\nexport const saveProductDetails = data => dispatch => {\r\n  // console.log(data);\r\n\r\n  dispatch({\r\n    type: SET_COLOR,\r\n    payload: { color: data }\r\n  });\r\n\r\n  dispatch({\r\n    type: SAVE_PRODUCT_DETAILS,\r\n    payload: data\r\n  });\r\n};\r\n\r\nexport const resetColor = () => dispatch => {\r\n  dispatch({\r\n    type: SAVE_PRODUCT_DETAILS,\r\n    payload: \"\"\r\n  });\r\n};\r\n","import {\r\n  SEND_PRODUCT_REQUEST,\r\n  GET_PRODUCT_LISTING,\r\n  SEND_PRODUCT_POP_REQUEST,\r\n  GET_PRODUCT_POP_LISTING,\r\n  SAVE_PRODUCT_DETAILS\r\n} from \"../../actions/product\";\r\n\r\nconst initialState = {\r\n  productListing: [],\r\n  productPopularListing: [],\r\n  isProductListing: false,\r\n  isProductPopularListing: false,\r\n  activeColor: \"\"\r\n};\r\n\r\nfunction product(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SEND_PRODUCT_REQUEST:\r\n      return {\r\n        ...state,\r\n        isProductListing: true\r\n      };\r\n    case SAVE_PRODUCT_DETAILS:\r\n      return {\r\n        ...state,\r\n        activeColor: action.payload\r\n      };\r\n    case GET_PRODUCT_LISTING:\r\n      return {\r\n        ...state,\r\n        // productListing: action.payload.productListing,\r\n        productListing: action.payload,\r\n        isProductListing: false\r\n      };\r\n    case SEND_PRODUCT_POP_REQUEST:\r\n      return {\r\n        ...state,\r\n        isProductPopularListing: true\r\n      };\r\n    case GET_PRODUCT_POP_LISTING:\r\n      return {\r\n        ...state,\r\n        // productListing: action.payload.productListing,\r\n        productPopularListing: action.payload,\r\n        isProductPopularListing: false\r\n      };\r\n\r\n    default:\r\n      return { ...state };\r\n  }\r\n}\r\n\r\nexport default product;\r\n","import axios from \"axios\";\r\n\r\nexport const FETCH_FILTER_REQUESTED = \"FETCH_FILTER_REQUESTED\";\r\nexport const FETCH_FILTER_SUCCEEDED = \"FETCH_FILTER_SUCCEEDED\";\r\n\r\nexport const FETCH_PRODUCT_REQUESTED = \"FETCH_PRODUCT_REQUESTED\";\r\nexport const FETCH_PRODUCT_SUCCEEDED = \"FETCH_PRODUCT_SUCCEEDED\";\r\n\r\nexport const FETCH_ADD_PRODUCT_SUCCEEDED = \"FETCH_ADD_PRODUCT_SUCCEEDED\";\r\n\r\nexport const SELECT_FILTERS = \"SELECT_FILTERS\";\r\n\r\nexport const SELECT_SIZE = \"SELECT_SIZE\";\r\nexport const SELECT_PRICE = \"SELECT_PRICE\";\r\n\r\nexport const SET_DEFAULT_PAGE = \"SET_DEFAULT_PAGE\";\r\nexport const SET_NUMBER_OF_PAGES = \"SET_NUMBER_OF_PAGES\";\r\nexport const SET_PAGE = \"SET_PAGE\";\r\n\r\nexport const CLEAR_PRODUCTS_LIST = \"CLEAR_PRODUCTS_LIST\";\r\n\r\nexport const setNewPage = pageNo => dispatch => {\r\n  dispatch({\r\n    type: SET_PAGE,\r\n    payload: { pageNo: pageNo }\r\n  });\r\n};\r\n\r\nexport const clearProductList = () => dispatch => {\r\n  dispatch({\r\n    type: CLEAR_PRODUCTS_LIST\r\n  });\r\n};\r\n\r\nexport const getFilterElems = () => dispatch => {\r\n  dispatch({\r\n    type: FETCH_FILTER_REQUESTED\r\n  });\r\n\r\n  axios.all([axios.get(\"/filters/colors\"), axios.get(\"/filters/sizes\")]).then(\r\n    axios.spread((colorFilters, sizeFilters) => {\r\n      let sizes = sizeFilters.data.sort((a, b) => {\r\n        if (a.value < b.value) {\r\n          return 1;\r\n        }\r\n        if (a.value > b.value) {\r\n          return -1;\r\n        }\r\n        return 0;\r\n      });\r\n\r\n      let sizeOptions = sizes.map(size => {\r\n        return {\r\n          value: size.value,\r\n          label: size.value\r\n        };\r\n      });\r\n\r\n      sizeOptions.unshift({\r\n        value: \"all sizes\",\r\n        label: \"All sizes\"\r\n      });\r\n\r\n      dispatch({\r\n        type: FETCH_FILTER_SUCCEEDED,\r\n        colors: colorFilters.data,\r\n        filters: sizeFilters.data,\r\n        sizeOptions: sizeOptions\r\n      });\r\n    })\r\n  );\r\n};\r\n\r\nexport const getFilteredProducts = (\r\n  category,\r\n  subCategory,\r\n  furtherSubCategory,\r\n  colorName,\r\n  size\r\n) => dispatch => {\r\n  dispatch({\r\n    type: FETCH_PRODUCT_REQUESTED\r\n  });\r\n\r\n  axios\r\n    .post(\"/products/filtered-products\", {\r\n      category: category,\r\n      subCategory: subCategory,\r\n      furtherSubCategory: furtherSubCategory,\r\n      colorName: colorName,\r\n      size: size\r\n    })\r\n    .then(info => {\r\n      let products = info.data.products;\r\n      let newProducts = JSON.parse(JSON.stringify(products));\r\n      dispatch({\r\n        type: FETCH_PRODUCT_SUCCEEDED,\r\n        payload: newProducts\r\n      });\r\n    })\r\n    .catch(err => console.log(err));\r\n};\r\n\r\nexport const selectFilters = (currentFilters, newFilters) => dispatch => {\r\n  if (newFilters.subCategory === undefined) {\r\n    delete currentFilters.subCategory;\r\n  }\r\n  if (newFilters.furtherSubCategory === undefined) {\r\n    delete currentFilters.furtherSubCategory;\r\n  }\r\n  if (newFilters.colorName === undefined) {\r\n    delete currentFilters.colorName;\r\n  }\r\n  if (newFilters.size === undefined) {\r\n    delete currentFilters.size;\r\n  }\r\n\r\n  let filters = Object.assign(currentFilters, newFilters);\r\n\r\n  dispatch({\r\n    type: SELECT_FILTERS,\r\n    payload: filters\r\n  });\r\n\r\n  dispatch({\r\n    type: FETCH_PRODUCT_REQUESTED\r\n  });\r\n\r\n  // axios\r\n  //   .post(\"/products/filtered-products\", {\r\n  //     category: filters.category,\r\n  //     subCategory: filters.subCategory,\r\n  //     furtherSubCategory: filters.furtherSubCategory,\r\n  //     colorName: filters.colorName,\r\n  //     size: filters.size,\r\n  //     minPrice: filters.price.min,\r\n  //     maxPrice: filters.price.max\r\n  //   })\r\n  //   .then(products => {\r\n  //     let newProducts = JSON.parse(JSON.stringify(products.data));\r\n  //     dispatch({\r\n  //       type: FETCH_PRODUCT_SUCCEEDED,\r\n  //       payload: newProducts\r\n  //     });\r\n  //   })\r\n  //   .catch(err => console.log(err));\r\n\r\n  axios\r\n    .post(\"/products/filtered-products\", {\r\n      category: filters.category,\r\n      subCategory: filters.subCategory,\r\n      furtherSubCategory: filters.furtherSubCategory,\r\n      colorName: filters.colorName,\r\n      size: filters.size,\r\n      minPrice: filters.price.min,\r\n      maxPrice: filters.price.max,\r\n      pageNo: filters.pageNo\r\n    })\r\n    .then(info => {\r\n      let products = info.data.products;\r\n\r\n      let newProducts = JSON.parse(JSON.stringify(products));\r\n\r\n      dispatch({\r\n        type: FETCH_ADD_PRODUCT_SUCCEEDED,\r\n        payload: newProducts\r\n      });\r\n\r\n      dispatch({\r\n        type: SET_NUMBER_OF_PAGES,\r\n        payload: {\r\n          amountPages: info.data.amount,\r\n          pageNo: filters.pageNo\r\n        }\r\n      });\r\n    })\r\n    .catch(err => console.log(err));\r\n};\r\n\r\nexport const selectSize = size => dispatch => {\r\n  dispatch({\r\n    type: SELECT_SIZE,\r\n    payload: size\r\n  });\r\n};\r\n\r\nexport const selectPrice = price => dispatch => {\r\n  dispatch({\r\n    type: SELECT_PRICE,\r\n    payload: price\r\n  });\r\n};\r\n","import {\r\n  FETCH_FILTER_REQUESTED,\r\n  FETCH_FILTER_SUCCEEDED,\r\n  FETCH_PRODUCT_REQUESTED,\r\n  FETCH_PRODUCT_SUCCEEDED,\r\n  FETCH_ADD_PRODUCT_SUCCEEDED,\r\n  SELECT_FILTERS,\r\n  SELECT_SIZE,\r\n  SELECT_PRICE,\r\n  SET_DEFAULT_PAGE,\r\n  SET_NUMBER_OF_PAGES,\r\n  SET_PAGE,\r\n  CLEAR_PRODUCTS_LIST\r\n} from \"../../actions/filterActions\";\r\n\r\nconst initialState = {\r\n  isFilterFetching: false,\r\n  isProductFetching: false,\r\n  colorFilters: [],\r\n  sizeFilters: [],\r\n  sizeOptions: [],\r\n  currentSizeOption: null,\r\n  products: [],\r\n  selected: {\r\n    price: { min: 5, max: 1000 },\r\n    pageNo: 1,\r\n    amountPages: 1\r\n  }\r\n};\r\n\r\nfunction filters(state = initialState, action) {\r\n  switch (action.type) {\r\n    case FETCH_FILTER_REQUESTED:\r\n      return {\r\n        ...state,\r\n        isFilterFetching: true\r\n      };\r\n    case FETCH_FILTER_SUCCEEDED:\r\n      return {\r\n        ...state,\r\n        colorFilters: action.colors,\r\n        sizeFilters: action.filters,\r\n        sizeOptions: action.sizeOptions,\r\n        isFilterFetching: false\r\n      };\r\n    case FETCH_PRODUCT_REQUESTED:\r\n      return {\r\n        ...state,\r\n        isProductFetching: true\r\n      };\r\n    case FETCH_PRODUCT_SUCCEEDED:\r\n      return {\r\n        ...state,\r\n        products: action.payload,\r\n        isProductFetching: false\r\n      };\r\n\r\n    case FETCH_ADD_PRODUCT_SUCCEEDED:\r\n      let newArray = [];\r\n      newArray = state.products.map(elem => {\r\n        return elem;\r\n      });\r\n\r\n      action.payload.forEach(elem => {\r\n        newArray.push(elem);\r\n      });\r\n\r\n      return {\r\n        ...state,\r\n        products: newArray,\r\n        isProductFetching: false\r\n      };\r\n    case SELECT_FILTERS:\r\n      return {\r\n        ...state,\r\n        selected: {\r\n          ...state.selected,\r\n          ...action.payload\r\n        }\r\n      };\r\n    case SELECT_SIZE:\r\n      return {\r\n        ...state,\r\n        currentSizeOption: action.payload\r\n      };\r\n    case SELECT_PRICE:\r\n      return {\r\n        ...state,\r\n        selected: {\r\n          ...state.selected,\r\n          price: action.payload\r\n        }\r\n      };\r\n\r\n    case SET_DEFAULT_PAGE:\r\n      return {\r\n        ...state,\r\n        selected: {\r\n          ...state.selected,\r\n          pageNo: 1,\r\n          amountPages: 1\r\n        }\r\n      };\r\n\r\n    case SET_NUMBER_OF_PAGES:\r\n      return {\r\n        ...state,\r\n        selected: {\r\n          ...state.selected,\r\n          amountPages: action.payload.amountPages,\r\n          pageNo: action.payload.pageNo\r\n        }\r\n      };\r\n\r\n    case SET_PAGE:\r\n      return {\r\n        ...state,\r\n        selected: {\r\n          ...state.selected,\r\n          pageNo: action.payload.pageNo\r\n        }\r\n      };\r\n\r\n    case CLEAR_PRODUCTS_LIST:\r\n      return {\r\n        ...state,\r\n        products: [],\r\n        selected: {\r\n          ...state.selected,\r\n          pageNo: 1,\r\n          amountPages: 1\r\n        }\r\n      };\r\n\r\n    default:\r\n      return { ...state };\r\n  }\r\n}\r\n\r\nexport default filters;\r\n","import axios from \"axios\";\r\nimport {SET_INITIAL_STATE_ADD_CART} from \"./addToCart\";\r\n\r\nexport const FETCH_PRODUCT_DETAIL_REQUEST = \"FETCH_PRODUCT_DETAIL_REQUEST\";\r\nexport const FETCH_PRODUCT_DETAIL_SUCCEED = \"FETCH_PRODUCT_DETAIL_SUCCEED\";\r\nexport const FETCH_PRODUCT_DETAIL_FAIL = \"FETCH_PRODUCT_DETAIL_FAIL\";\r\n\r\nexport const getProductDetails = routeDetails => dispatch => {\r\n    dispatch({\r\n        type: FETCH_PRODUCT_DETAIL_REQUEST\r\n    });\r\n\r\n    const {category, subCategory, furtherSubCategory, id} = routeDetails;\r\n\r\n    axios\r\n        .get(`/products/${category}/${subCategory}/${furtherSubCategory}/${id}`, {\r\n            params: {\r\n                id: id\r\n            }\r\n        })\r\n        .then(result => {\r\n\r\n            let data = {\r\n                id: result.data[0]._id,\r\n                isAvailable: true,\r\n                reasonNotAvailable: \"\",\r\n                model: result.data[0].model,\r\n                amount: 1,\r\n                price: result.data[0].currentPrice,\r\n                priceFormDB: result.data[0].currentPrice,\r\n            }\r\n\r\n            dispatch({\r\n                type: SET_INITIAL_STATE_ADD_CART,\r\n                payload: {data: data}\r\n            });\r\n\r\n            dispatch({\r\n                type: FETCH_PRODUCT_DETAIL_SUCCEED,\r\n                payload: result.data[0]\r\n            });\r\n        });\r\n};\r\n","import {\r\n  FETCH_PRODUCT_DETAIL_REQUEST,\r\n  FETCH_PRODUCT_DETAIL_SUCCEED,\r\n  FETCH_PRODUCT_DETAIL_FAIL\r\n} from \"../../actions/productDetails\";\r\n\r\nconst initialState = {\r\n  productOpened: {\r\n    productFeatures: [{ colorName: \"\", imageUrls: [], sizes: [{}] }]\r\n  }\r\n};\r\n\r\nfunction productDetails(state = initialState, action) {\r\n  switch (action.type) {\r\n    case FETCH_PRODUCT_DETAIL_REQUEST:\r\n      return {\r\n        ...state\r\n      };\r\n    case FETCH_PRODUCT_DETAIL_SUCCEED:\r\n      return {\r\n        ...state,\r\n        productOpened: action.payload\r\n      };\r\n    case FETCH_PRODUCT_DETAIL_FAIL:\r\n      return {\r\n        ...state\r\n      };\r\n    default:\r\n      return { ...state };\r\n  }\r\n}\r\n\r\nexport default productDetails;\r\n","import axios from \"axios\";\r\nexport const FETCH_CATEGORY_CAROUSEL_REQUESTED = \"FETCH_CATEGORY_CAROUSEL_REQUESTED\";\r\nexport const FETCH_CATEGORY_CAROUSEL_SUCCEEDED = \"FETCH_CATEGORY_CAROUSEL_SUCCEEDED\";\r\n\r\n\r\nexport const getCategoryItem = () => dispatch =>{\r\n    dispatch({\r\n        type: FETCH_CATEGORY_CAROUSEL_REQUESTED\r\n    });\r\n\r\n    axios.get(\"/categoryCarousels\").then(categoriesList => {\r\n        dispatch({\r\n            type: FETCH_CATEGORY_CAROUSEL_SUCCEEDED,\r\n            payload: categoriesList.data\r\n        })\r\n    })\r\n};","import {\r\n    FETCH_CATEGORY_CAROUSEL_REQUESTED,\r\n    FETCH_CATEGORY_CAROUSEL_SUCCEEDED\r\n} from \"../../actions/categoryCarousel\";\r\n\r\nconst initialState = {\r\n    categoriesList: [],\r\n    isCategoriesFetching: false\r\n};\r\n\r\nfunction categoryCarousel(state = initialState, action) {\r\n    switch (action.type) {\r\n        case FETCH_CATEGORY_CAROUSEL_REQUESTED:\r\n            return {\r\n                ...state,\r\n                isCategoriesFetching: true\r\n            }\r\n        case FETCH_CATEGORY_CAROUSEL_SUCCEEDED:\r\n            return{\r\n                ...state,\r\n                categoriesList: action.payload,\r\n                isCategoriesFetching: false\r\n            }\r\n\r\n\r\n\r\n        default:\r\n            return{...state}\r\n    }\r\n}\r\n\r\nexport default categoryCarousel;","import {\r\n  ADD_ITEM_TO_CART,\r\n  SET_CART_FROM_LOCALSTORAGE,\r\n  SET_ID_LOGGED_USER,\r\n  SET_ID_CART_FROM_DB,\r\n  SET_DATA_CART_FROM_DB,\r\n  CLEAR_CART_ON_LOGOUT,\r\n  CART_FROM_LOCALSTORAGE_TO_DB,\r\n  DELETE_ITEM_TO_CART,\r\n  UPDATE_STORE_AFTER_CHECK_IN_DB,\r\n  CHANGE_CHECK_AMOUT_OF_ITEM,\r\n  CHANGE_DELIVERY_METHOD,\r\n  SET_FINISHED_CART,\r\n  SET_DEFAULT_FINISHED_CART,\r\n  addNewCart,\r\n  updateCart,\r\n  updateCartIsFinished,\r\n  CLOSE_MODAL_SUCCESS_ORDER,\r\n  OPEN_MODAL_SUCCESS_ORDER,\r\n  CLOSE_MODAL_UNSUCCESS_ORDER,\r\n  OPEN_MODAL_UNSUCCESS_ORDER,\r\n  SET_INVALID_LOGIN,\r\n  SUCCESSFULL_SEND_ORDER_BY_EMAIL,\r\n  CLOSE_MODAL_FINISH_ORDER_AFTER_LOGIN,\r\n  OPEN_MODAL_FINISH_ORDER_AFTER_LOGIN,\r\n  SET_ORDER_NO\r\n} from \"../../actions/cart\";\r\n\r\nconst initialState = {\r\n  amountInBasket: 0,\r\n  idUser: \"\",\r\n  userMail: \"\",\r\n  idCartInDB: \"\",\r\n  orderNo: \"\",\r\n  arrayProduct: [],\r\n  arrayCheckout: [],\r\n  windows: {\r\n    successOrder: false,\r\n    unsuccessOrder: false,\r\n    invalidLogin: false,\r\n    finishAfterLogin: false\r\n  },\r\n  checkedDelivery: \"standart\",\r\n  deliveryMethods: [\r\n    {\r\n      name: \"economical\",\r\n      duration: 14,\r\n      price: 0\r\n    },\r\n    {\r\n      name: \"standart\",\r\n      duration: 7,\r\n      price: 5\r\n    },\r\n    {\r\n      name: \"express\",\r\n      duration: 3,\r\n      price: 10\r\n    }\r\n  ]\r\n};\r\n\r\nfunction setLocalStorage(arr) {\r\n  localStorage.setItem(\"savedCart\", JSON.stringify(arr));\r\n}\r\n\r\nfunction countAmount(array) {\r\n  let count = 0;\r\n  if (array) {\r\n    array.forEach(elem => {\r\n      count = count + elem.amount;\r\n    });\r\n  }\r\n\r\n  return count;\r\n}\r\n\r\nfunction saveInDB(id, arr) {\r\n  let sendObj = {\r\n    idUser: id,\r\n    arrayProduct: JSON.stringify(arr)\r\n  };\r\n  addNewCart(sendObj);\r\n}\r\n\r\nfunction updateInDB(id, arr) {\r\n  let sendObj = {\r\n    idCartInDB: id,\r\n    arrayProduct: JSON.stringify(arr)\r\n  };\r\n\r\n  updateCart(sendObj);\r\n}\r\n\r\nfunction updateIsFinished(data) {\r\n  updateCartIsFinished(data);\r\n}\r\n\r\nfunction cart(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_ID_LOGGED_USER:\r\n      return {\r\n        ...state,\r\n        userMail: action.payload.mail,\r\n        idUser: action.payload.idUser\r\n      };\r\n\r\n    case SET_ID_CART_FROM_DB:\r\n      return {\r\n        ...state,\r\n\r\n        idCartInDB: action.payload.idCartInDB\r\n      };\r\n\r\n    case SET_DATA_CART_FROM_DB:\r\n      return {\r\n        ...state,\r\n        idCartInDB: action.payload.infoDB._id,\r\n        idUser: action.payload.infoDB.idUser,\r\n        arrayProduct: action.payload.infoDB.arrayProduct,\r\n        amountInBasket: countAmount(action.payload.infoDB.arrayProduct)\r\n      };\r\n\r\n    case DELETE_ITEM_TO_CART:\r\n      if (state.idUser) {\r\n        if (state.idCartInDB) {\r\n          updateInDB(state.idCartInDB, action.payload.array);\r\n        } else {\r\n          saveInDB(state.idUser, action.payload.array);\r\n        }\r\n      } else {\r\n        setLocalStorage(action.payload.array);\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        arrayProduct: action.payload.array,\r\n        amountInBasket: countAmount(action.payload.array)\r\n      };\r\n\r\n    case CART_FROM_LOCALSTORAGE_TO_DB:\r\n      return {\r\n        ...state,\r\n        idCartInDB: action.payload.infoDB._id,\r\n        idUser: action.payload.infoDB.idUser,\r\n        arrayProduct: action.payload.infoDB.arrayProduct,\r\n        amountInBasket: countAmount(action.payload.infoDB.arrayProduct)\r\n      };\r\n\r\n    case CLEAR_CART_ON_LOGOUT:\r\n      return {\r\n        ...state,\r\n        amountInBasket: 0,\r\n        idUser: \"\",\r\n        idCartInDB: \"\",\r\n        userMail: \"\",\r\n        orderNo: \"\",\r\n        windows: {\r\n          successOrder: false,\r\n          unsuccessOrder: false\r\n        },\r\n        arrayProduct: [],\r\n        arrayCheckout: []\r\n      };\r\n\r\n    case ADD_ITEM_TO_CART:\r\n      let arrProd = [];\r\n      state.arrayProduct.forEach((elem, index) => {\r\n        arrProd[index] = { ...elem };\r\n      });\r\n\r\n      arrProd.push(action.payload.item);\r\n\r\n      if (state.idUser) {\r\n        if (state.idCartInDB) {\r\n          updateInDB(state.idCartInDB, arrProd);\r\n        } else {\r\n          saveInDB(state.idUser, arrProd);\r\n        }\r\n      } else {\r\n        setLocalStorage(arrProd);\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        arrayProduct: arrProd,\r\n        amountInBasket: countAmount(arrProd)\r\n      };\r\n\r\n    case CHANGE_CHECK_AMOUT_OF_ITEM:\r\n      let changeCheckArrayAmountProd = action.payload.newArr.map(elem => {\r\n        return elem;\r\n      });\r\n\r\n      if (state.idUser) {\r\n        if (state.idCartInDB) {\r\n          updateInDB(state.idCartInDB, changeCheckArrayAmountProd);\r\n        } else {\r\n          saveInDB(state.idUser, changeCheckArrayAmountProd);\r\n        }\r\n      } else {\r\n        setLocalStorage(changeCheckArrayAmountProd);\r\n      }\r\n      return {\r\n        ...state,\r\n        arrayProduct: changeCheckArrayAmountProd,\r\n        amountInBasket: countAmount(changeCheckArrayAmountProd)\r\n      };\r\n\r\n    case SET_CART_FROM_LOCALSTORAGE:\r\n      return {\r\n        ...state,\r\n        arrayProduct: action.payload.arrLS,\r\n        amountInBasket: countAmount(action.payload.arrLS)\r\n      };\r\n\r\n    case UPDATE_STORE_AFTER_CHECK_IN_DB:\r\n      let changeAfterCheck = [];\r\n      state.arrayProduct.forEach((elem, index) => {\r\n        changeAfterCheck[index] = {\r\n          ...elem,\r\n          id: action.payload.newArr[index].id,\r\n          isAvailable: action.payload.newArr[index].isAvailable,\r\n          reasonNotAvailable: action.payload.newArr[index].reasonNotAvailable,\r\n          colorName: action.payload.newArr[index].colorName,\r\n          size: action.payload.newArr[index].size,\r\n          amount: action.payload.newArr[index].amount,\r\n          priceFormDB: action.payload.newArr[index].priceFormDB\r\n        };\r\n      });\r\n\r\n      if (state.idUser) {\r\n        if (state.idCartInDB) {\r\n          updateInDB(state.idCartInDB, changeAfterCheck);\r\n        } else {\r\n          saveInDB(state.idUser, changeAfterCheck);\r\n        }\r\n      } else {\r\n        setLocalStorage(changeAfterCheck);\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        arrayProduct: changeAfterCheck,\r\n        amountInBasket: countAmount(changeAfterCheck)\r\n      };\r\n\r\n    case CHANGE_DELIVERY_METHOD:\r\n      return {\r\n        ...state,\r\n        checkedDelivery: action.payload.method\r\n      };\r\n\r\n    case SET_FINISHED_CART:\r\n      // console.log('SET_FINISHED_CART');\r\n\r\n      updateIsFinished(state);\r\n\r\n      // updateIsFinished(state.idCartInDB);\r\n      // sendOrder(state);\r\n\r\n      // console.log('SET_FINISHED_CART 111');\r\n\r\n      return {\r\n        ...state\r\n      };\r\n    case SET_DEFAULT_FINISHED_CART:\r\n      return {\r\n        ...state,\r\n        amountInBasket: 0,\r\n        idCartInDB: \"\",\r\n        arrayProduct: []\r\n      };\r\n\r\n    case OPEN_MODAL_SUCCESS_ORDER:\r\n      return {\r\n        ...state,\r\n        windows: {\r\n          successOrder: true,\r\n          unsuccessOrder: false,\r\n          invalidLogin: false,\r\n          finishAfterLogin: false\r\n        }\r\n      };\r\n    case CLOSE_MODAL_SUCCESS_ORDER:\r\n      return {\r\n        ...state,\r\n        orderNo: \"\",\r\n        arrayProduct: [],\r\n        windows: {\r\n          successOrder: false,\r\n          unsuccessOrder: false,\r\n          invalidLogin: false,\r\n          finishAfterLogin: false\r\n        }\r\n      };\r\n\r\n    case SET_ORDER_NO:\r\n      return {\r\n        ...state,\r\n        orderNo: action.payload.orderNo\r\n      };\r\n\r\n    case OPEN_MODAL_UNSUCCESS_ORDER:\r\n      return {\r\n        ...state,\r\n        windows: {\r\n          successOrder: false,\r\n          unsuccessOrder: true,\r\n          invalidLogin: false,\r\n          finishAfterLogin: false\r\n        }\r\n      };\r\n    case CLOSE_MODAL_UNSUCCESS_ORDER:\r\n      return {\r\n        ...state,\r\n        windows: {\r\n          successOrder: false,\r\n          unsuccessOrder: false,\r\n          invalidLogin: false,\r\n          finishAfterLogin: false\r\n        }\r\n      };\r\n    case SET_INVALID_LOGIN:\r\n      return {\r\n        ...state,\r\n        windows: {\r\n          successOrder: false,\r\n          unsuccessOrder: true,\r\n          invalidLogin: true,\r\n          finishAfterLogin: false\r\n        }\r\n      };\r\n\r\n    case SUCCESSFULL_SEND_ORDER_BY_EMAIL:\r\n      return {\r\n        ...state,\r\n        orderNo: action.payload.orderNo,\r\n        windows: {\r\n          successOrder: true,\r\n          unsuccessOrder: false,\r\n          invalidLogin: false,\r\n          finishAfterLogin: false\r\n        }\r\n      };\r\n\r\n    case OPEN_MODAL_FINISH_ORDER_AFTER_LOGIN:\r\n      return {\r\n        ...state,\r\n        windows: {\r\n          successOrder: false,\r\n          unsuccessOrder: false,\r\n          invalidLogin: false,\r\n          finishAfterLogin: true\r\n        }\r\n      };\r\n\r\n    case CLOSE_MODAL_FINISH_ORDER_AFTER_LOGIN:\r\n      return {\r\n        ...state,\r\n        windows: {\r\n          successOrder: false,\r\n          unsuccessOrder: false,\r\n          invalidLogin: false,\r\n          finishAfterLogin: false\r\n        }\r\n      };\r\n\r\n    default:\r\n      return { ...state };\r\n  }\r\n}\r\n\r\nexport default cart;\r\n","import axios from \"axios\";\r\nimport store from \"../store\";\r\n\r\nexport const ADD_ITEM_TO_CART = \"ADD_ITEM_TO_CART\";\r\nexport const DELETE_ITEM_TO_CART = \"DELETE_ITEM_TO_CART\";\r\nexport const CHANGE_AMOUT_OF_ITEM = \"CHANGE_AMOUT_OF_ITEM\";\r\nexport const CHANGE_ARRAY_AMOUT_OF_ITEM = \"CHANGE_ARRAY_AMOUT_OF_ITEM\";\r\n\r\nexport const SET_CART_FROM_LOCALSTORAGE = \"SET_CART_FROM_LOCALSTORAGE\";\r\n\r\nexport const CART_FROM_LOCALSTORAGE_TO_DB = \"CART_FROM_LOCALSTORAGE_TO_DB\";\r\n\r\nexport const SET_ID_LOGGED_USER = \"SET_ID_LOGGED_USER\";\r\n\r\nexport const SET_ID_CART_FROM_DB = \"SET_ID_CART_FROM_DB\";\r\n\r\nexport const SET_DATA_CART_FROM_DB = \"SET_DATA_CART_FROM_DB\";\r\n\r\nexport const CLEAR_CART_ON_LOGOUT = \"CLEAR_CART_ON_LOGOUT\";\r\n\r\nexport const UPDATE_STORE_AFTER_CHECK_IN_DB = \"UPDATE_STORE_AFTER_CHECK_IN_DB\";\r\n\r\nexport const CHANGE_CHECK_AMOUT_OF_ITEM = \"CHANGE_CHECK_AMOUT_OF_ITEM\";\r\n\r\nexport const CHANGE_DELIVERY_METHOD = \"CHANGE_DELIVERY_METHOD\";\r\n\r\nexport const SET_FINISHED_CART = \"SET_FINISHED_CART\";\r\nexport const SET_DEFAULT_FINISHED_CART = \"SET_DEFAULT_FINISHED_CART\";\r\nexport const SET_ORDER_NO = \"SET_ORDER_NO\";\r\n\r\nexport const OPEN_MODAL_SUCCESS_ORDER = \"OPEN_MODAL_SUCCESS_ORDER\";\r\nexport const CLOSE_MODAL_SUCCESS_ORDER = \"CLOSE_MODAL_SUCCESS_ORDER\";\r\n\r\nexport const OPEN_MODAL_UNSUCCESS_ORDER = \"OPEN_MODAL_UNSUCCESS_ORDER\";\r\nexport const CLOSE_MODAL_UNSUCCESS_ORDER = \"CLOSE_MODAL_UNSUCCESS_ORDER\";\r\n\r\nexport const OPEN_MODAL_FINISH_ORDER_AFTER_LOGIN =\r\n  \"OPEN_MODAL_FINISH_ORDER_AFTER_LOGIN\";\r\nexport const CLOSE_MODAL_FINISH_ORDER_AFTER_LOGIN =\r\n  \"CLOSE_MODAL_FINISH_ORDER_AFTER_LOGIN\";\r\n\r\nexport const SUCCESSFULL_SEND_ORDER_BY_EMAIL =\r\n  \"SUCCESSFULL_SEND_ORDER_BY_EMAIL\";\r\n\r\nexport const SET_INVALID_LOGIN = \"SET_INVALID_LOGIN\";\r\n\r\n//Request from FRONT - is logged or not.\r\n\r\nexport function sendCheckout() {\r\n  return dispatch => {\r\n    axios\r\n      .get(\"/users/checkout\")\r\n      .then(() => {\r\n        dispatch({ type: SET_FINISHED_CART });\r\n      })\r\n      .catch(err => {\r\n        dispatch({ type: OPEN_MODAL_UNSUCCESS_ORDER });\r\n      });\r\n  };\r\n}\r\n\r\nexport function updateCartIsFinished(dataCart) {\r\n  let obj = {\r\n    idCartInDB: dataCart.idCartInDB\r\n  };\r\n\r\n  axios\r\n    .post(\"/updateCartIsFinished\", obj)\r\n    .then(res => res.data)\r\n    .then(data => {\r\n      sendOrder(dataCart, data.orderNo);\r\n      store.dispatch({\r\n        type: SET_ORDER_NO,\r\n        payload: { orderNo: data.orderNo }\r\n      });\r\n      store.dispatch({ type: OPEN_MODAL_SUCCESS_ORDER });\r\n      store.dispatch({ type: SET_DEFAULT_FINISHED_CART });\r\n    })\r\n    .catch(err => console.log(err));\r\n}\r\n\r\nfunction getListProductInHtml(dataOrder) {\r\n  let textOrder = `<ul style=\"margin: 5px; border: 1px solid #eee;\">`;\r\n\r\n  dataOrder.arrayProduct.forEach(elem => {\r\n    textOrder += `\r\n                    <li style=\"display: flex; flex-direction: row; justify-content: space-between; align-items: center;\">\r\n                        <div style=\"width: calc(100% - 110px);\">\r\n                            <div>\r\n                                <div>\r\n                                    <p style=\"font-weight: 600; font-size: 20px; margin-bottom: 10px; margin-top: 15px;\">\r\n                                        ${elem.model}\r\n                                    </p>\r\n                                    <p style=\"text-transform: uppercase; margin-bottom: 10px;\">\r\n                                        Color - ${elem.colorName}\r\n                                    </p>\r\n                                    <p style=\"text-transform: uppercase; margin-bottom: 20px;\">\r\n                                        Size - ${elem.size}\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                            <div style=\"display: flex; flex-direction: row; justify-content: space-between; align-items: center;\r\n                            border-top: 1px solid #eee; margin-right: 30px; padding-top: 10px; padding-bottom: 10px;\">\r\n                                <p>${elem.priceFormDB} x ${elem.amount}</p>\r\n                                <p style=\"font-weight: 600;\">\r\n                                    $${(elem.amount * elem.priceFormDB).toFixed(\r\n                                      2\r\n                                    )}\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </li>\r\n        `;\r\n  });\r\n\r\n  textOrder += `</ul>`;\r\n\r\n  return textOrder;\r\n}\r\n\r\nexport function sendOrderByEmail(dataOrder) {\r\n  return dispatch => {\r\n    let mail = dataOrder.userMail;\r\n\r\n    let textOrder = getListProductInHtml(dataOrder);\r\n\r\n    axios\r\n      .post(\"/sendOrderByEmail\", {\r\n        mail: mail,\r\n        textOrder: textOrder,\r\n        dataOrder: dataOrder\r\n      })\r\n      .then(res => res.data)\r\n      .then(data => {\r\n        if (data.success) {\r\n          dispatch({ type: CLEAR_CART_ON_LOGOUT });\r\n          dispatch({\r\n            type: SUCCESSFULL_SEND_ORDER_BY_EMAIL,\r\n            payload: { orderNo: data.orderNo }\r\n          });\r\n          localStorage.removeItem(\"savedCart\");\r\n        }\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n}\r\n\r\nfunction sendOrder(dataOrder, orderNo) {\r\n  let mail = dataOrder.userMail;\r\n\r\n  let textOrder = getListProductInHtml(dataOrder);\r\n\r\n  axios\r\n    .post(\"/sendOrder\", { mail: mail, textOrder: textOrder, orderNo: orderNo })\r\n    .then(res => res.data)\r\n    .then(data => {})\r\n    .catch(err => console.log(err));\r\n}\r\n\r\nexport function checkAvailableItem(arrData) {\r\n  return dispatch => {\r\n    axios\r\n      .post(\"/checkAvailableItem\", { arrData: arrData })\r\n      .then(res => res.data)\r\n      .then(data => {\r\n        setTimeout(\r\n          dispatch({\r\n            type: CHANGE_CHECK_AMOUT_OF_ITEM,\r\n            payload: { newArr: data.updatedArray }\r\n          }),\r\n          500\r\n        );\r\n      })\r\n      .catch(err => {});\r\n  };\r\n}\r\n\r\nexport function getCart(userId) {\r\n  axios\r\n    .post(\"/getCart\", userId)\r\n    .then(res => res.data)\r\n    .then(data => {\r\n      let readyData = JSON.parse(data.infoDB);\r\n\r\n      if (data.success) {\r\n        store.dispatch({\r\n          type: SET_DATA_CART_FROM_DB,\r\n          payload: { infoDB: readyData }\r\n        });\r\n      }\r\n    })\r\n    .catch(err => console.log(err));\r\n}\r\n\r\nexport function addNewCart(dataCart) {\r\n  axios\r\n    .post(\"/addCart\", dataCart)\r\n    .then(res => res.data)\r\n    .then(data => {\r\n      if (data.success) {\r\n        store.dispatch({\r\n          type: SET_ID_CART_FROM_DB,\r\n          payload: { idCartInDB: data.idCartInDB }\r\n        });\r\n      }\r\n    })\r\n    .catch(err => console.log(err));\r\n}\r\n\r\nexport function updateCart(dataCart) {\r\n  axios\r\n    .post(\"/updateCart\", dataCart)\r\n    .then(res => res.data)\r\n    .then(data => {\r\n      console.log(data.success);\r\n    })\r\n    .catch(err => console.log(err));\r\n}\r\n","import {\r\n    SET_INITIAL_STATE_ADD_CART, SET_COLOR, SET_SIZE, SET_AMOUNT, SET_IMG\r\n} from '../../actions/addToCart'\r\n\r\n\r\nconst initialState = {\r\n    id: \"\",\r\n    isAvailable: true,\r\n    reasonNotAvailable: \"\",\r\n    model: \"\",\r\n    colorName: \"\",\r\n    size: \"\",\r\n    amount: 1,\r\n    availableAmount: 0,\r\n    price: 0,\r\n    priceFormDB: 0,\r\n    urlPhoto: \"\"\r\n}\r\n\r\n\r\nfunction addToCart(state = initialState, action) {\r\n\r\n    switch (action.type) {\r\n\r\n        case SET_INITIAL_STATE_ADD_CART:\r\n            return {\r\n                ...state,\r\n                ...action.payload.data\r\n            }\r\n\r\n        case SET_COLOR:\r\n            return {\r\n                ...state,\r\n                colorName: action.payload.color\r\n            }\r\n        case SET_IMG:\r\n            return {\r\n                ...state,\r\n                urlPhoto: action.payload.url\r\n            }\r\n        case SET_SIZE:\r\n            return {\r\n                ...state,\r\n                size: action.payload.size\r\n            }\r\n        case SET_AMOUNT:\r\n            return {\r\n                ...state,\r\n                amount: action.payload.amount\r\n            }\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\n\r\nexport default addToCart","import axios from \"axios\";\r\n\r\nexport const FETCH_SEARCH_REQUESTED = \"FETCH_SEARCH_REQUESTED\";\r\nexport const FETCH_SEARCH_SUCCEEDED = \"FETCH_SEARCH_SUCCEEDED\";\r\nexport const FETCH_SEARCH_FAILED = \"FETCH_SEARCH_FAILED\";\r\nexport const TYPE_SEARCH_VALUE = \"TYPE_SEARCH_VALUE\";\r\nexport const FOCUS_SEARCH_INPUT = \"FOCUS_SEARCH_INPUT\";\r\nexport const BLUR_SEARCH_INPUT = \"BLUR_SEARCH_INPUT\";\r\nexport const CLEAR_SEARCH_INPUT = \"CLEAR_SEARCH_INPUT\";\r\nexport const CLOSE_SEARCH_RESULTS = \"CLOSE_SEARCH_RESULTS\";\r\nexport const VALIDATE_SEARCH_VALUE = \"VALIDATE_SEARCH_VALUE\";\r\n\r\n// Handling situations when search input is focused (to change input width)\r\nexport const focusSearchInput = () => dispatch => {\r\n  dispatch({\r\n    type: FOCUS_SEARCH_INPUT\r\n  });\r\n};\r\n\r\n// Handling situations when search input is blured (to change input width)\r\n\r\nexport const blurSearchInput = e => dispatch => {\r\n  if (e.target.name === \"search\") {\r\n    e.preventDefault();\r\n  } else if (e.target.className === \"clearable__clear\") {\r\n    dispatch({\r\n      type: CLEAR_SEARCH_INPUT\r\n    });\r\n    dispatch({\r\n      type: BLUR_SEARCH_INPUT\r\n    });\r\n  } else {\r\n    dispatch({\r\n      type: BLUR_SEARCH_INPUT\r\n    });\r\n  }\r\n};\r\n\r\n// Handling situations when close button clicked in input (to clear input value)\r\nexport const clearSearchInput = () => dispatch => {\r\n  dispatch({\r\n    type: CLEAR_SEARCH_INPUT\r\n  });\r\n};\r\n\r\n// Handling situations when search input is filling by unallowed characters (to show error)\r\nexport const validateSearchValue = e => dispatch => {\r\n  const re = /[0-9a-zA-Z- ]+/g;\r\n  if (!re.test(e.key)) {\r\n    e.preventDefault();\r\n    dispatch({\r\n      type: VALIDATE_SEARCH_VALUE,\r\n      payload: true\r\n    });\r\n  } else {\r\n    dispatch({\r\n      type: VALIDATE_SEARCH_VALUE,\r\n      payload: false\r\n    });\r\n  }\r\n};\r\n\r\n// Handling situations when item in search results is clicked (to hide results and redirect to product details page)\r\nexport const closeSearchResults = () => dispatch => {\r\n  dispatch({\r\n    type: CLOSE_SEARCH_RESULTS\r\n  });\r\n};\r\n\r\n//Showing preloader while async request is going on\r\nexport const searchStart = () => {\r\n  return {\r\n    type: FETCH_SEARCH_REQUESTED\r\n  };\r\n};\r\n\r\n//Showing error if async request finished by error\r\nexport const searchFail = () => {\r\n  return {\r\n    type: FETCH_SEARCH_FAILED\r\n  };\r\n};\r\n\r\n//Showing results when async request is finished successfully\r\nexport const searchSuccess = data => {\r\n  return {\r\n    type: FETCH_SEARCH_SUCCEEDED,\r\n    payload: data\r\n  };\r\n};\r\n\r\n// This function makes search requests.\r\n// If the previous request is not finished when current request\r\n// is called this function calcells the previous one.\r\nfunction makeRequestCreator() {\r\n  let call;\r\n\r\n  return value => dispatch => {\r\n    dispatch({\r\n      type: TYPE_SEARCH_VALUE,\r\n      payload: value\r\n    });\r\n    if (call) {\r\n      call.cancel();\r\n    }\r\n    dispatch(searchStart());\r\n    call = axios.CancelToken.source();\r\n    return axios\r\n      .post(\r\n        \"/search/search-products\",\r\n        { query: value },\r\n        {\r\n          cancelToken: call.token\r\n        }\r\n      )\r\n      .then(response => {\r\n        dispatch(searchSuccess(response.data));\r\n      })\r\n      .catch(thrown => {\r\n        // dispatch(searchFail());\r\n        if (axios.isCancel(thrown)) {\r\n          console.log(\"request is canceled\", thrown);\r\n        } else {\r\n          console.log(thrown);\r\n        }\r\n      });\r\n  };\r\n}\r\n\r\nexport const search = makeRequestCreator();\r\n","import {\r\n  FETCH_SEARCH_REQUESTED,\r\n  FETCH_SEARCH_SUCCEEDED,\r\n  TYPE_SEARCH_VALUE,\r\n  FOCUS_SEARCH_INPUT,\r\n  BLUR_SEARCH_INPUT,\r\n  CLEAR_SEARCH_INPUT,\r\n  VALIDATE_SEARCH_VALUE,\r\n  CLOSE_SEARCH_RESULTS\r\n} from \"../../actions/search\";\r\n\r\nconst initialState = {\r\n  focus: false,\r\n  searchString: \"\",\r\n  nonValid: false,\r\n  closeResults: false,\r\n  isSearchFetching: false,\r\n  products: []\r\n};\r\n\r\nfunction search(state = initialState, action) {\r\n  switch (action.type) {\r\n    case TYPE_SEARCH_VALUE:\r\n      return {\r\n        ...state,\r\n        searchString: action.payload\r\n      };\r\n    case FOCUS_SEARCH_INPUT:\r\n      return {\r\n        ...state,\r\n        focus: true\r\n      };\r\n    case BLUR_SEARCH_INPUT:\r\n      return {\r\n        ...state,\r\n        focus: false,\r\n        nonValid: false\r\n      };\r\n    case VALIDATE_SEARCH_VALUE:\r\n      return {\r\n        ...state,\r\n        nonValid: action.payload\r\n      };\r\n    case FETCH_SEARCH_REQUESTED:\r\n      return {\r\n        ...state,\r\n        isSearchFetching: true\r\n      };\r\n    case FETCH_SEARCH_SUCCEEDED:\r\n      return {\r\n        ...state,\r\n        isSearchFetching: false,\r\n        closeResults: false,\r\n        products: action.payload\r\n      };\r\n    case CLOSE_SEARCH_RESULTS:\r\n      return {\r\n        ...state,\r\n        closeResults: true,\r\n        searchString: \"\",\r\n        products: []\r\n      };\r\n    case CLEAR_SEARCH_INPUT:\r\n      return {\r\n        ...state,\r\n        searchString: \"\"\r\n      };\r\n    default:\r\n      return { ...state };\r\n  }\r\n}\r\n\r\nexport default search;\r\n","export const SET_OFFSET_Y = 'SET_OFFSET_Y';","import {\r\n    SET_OFFSET_Y\r\n} from '../../actions/scroll'\r\n\r\nconst initialState = {\r\n    position: 0\r\n}\r\n\r\nfunction scroll (state = initialState, action) {\r\n\r\n    switch (action.type) {\r\n        case SET_OFFSET_Y:\r\n            return {\r\n                position: action.payload.value\r\n            }\r\n\r\n        default:\r\n            return {\r\n                ...state\r\n            }\r\n    }\r\n}\r\n\r\nexport default scroll","import axios from \"axios\";\r\n\r\nexport const SEND_NAV_REQUEST = \"SEND_NAV_REQUEST\"; // Preloader while executing asynchronous action\r\nexport const GET_NAV_MENU = \"GET_NAV_MENU\"; // Get Navigation menu items from server\r\nexport const CHANGE_SELECTED_ITEM_ACTIVE_STATUS =\r\n  \"CHANGE_SELECTED_ITEM_ACTIVE_STATUS\";\r\nexport const ADD_NEW_CATEGORY = \"ADD_NEW_CATEGORY\";\r\nexport const ADD_NEW_SUB_CATEGORY = \"ADD_NEW_SUB_CATEGORY\";\r\nexport const ADD_NEW_FURTHER_SUB_CATEGORY = \"ADD_NEW_FURTHER_SUB_CATEGORY\";\r\n\r\nexport const FETCH_NAV_MENU_REQUESTED = \"FETCH_NAV_MENU_REQUESTED\";\r\nexport const FETCH_NAV_MENU_SUCCEEDED = \"FETCH_NAV_MENU_SUCCEEDED\";\r\nexport const FETCH_NAV_MENU_FAILED = \"FETCH_NAV_MENU_FAILED\";\r\n\r\n// Get nav-menu items from mongoDB for initializing store\r\nexport const getAdmNavMenuItems = () => dispatch => {\r\n  dispatch({\r\n    type: SEND_NAV_REQUEST\r\n  });\r\n\r\n  axios.get(\"/nav-menu\").then(navMenuItems => {\r\n    let categoryList = navMenuItems.data[0].categoryList;\r\n    let navMenuItemsArr = JSON.parse(JSON.stringify(categoryList));\r\n\r\n    dispatch({\r\n      type: GET_NAV_MENU,\r\n      payload: navMenuItemsArr // The Array with the hierarchy Of Navigation menu categories (e.g. women) / subcategories (e.g. clothing) / further subcategories (e.g. pants, dresses)\r\n    });\r\n  });\r\n};\r\n\r\n// Change the parameter \"active\" for chosen nav-menu item in store\r\nexport const changeSelectedItemActiveStatus = (\r\n  e,\r\n  navMenuItems,\r\n  id\r\n) => dispatch => {\r\n  navMenuItems.forEach(category => {\r\n    if (category._id === id) {\r\n      category.active = e.target.checked;\r\n    } else {\r\n      category.subCategoryList.forEach(subCategory => {\r\n        if (subCategory._id === id) {\r\n          subCategory.active = e.target.checked;\r\n        } else {\r\n          subCategory.furtherSubCategoryList.forEach(furtherSubCategory => {\r\n            if (furtherSubCategory._id === id) {\r\n              furtherSubCategory.active = e.target.checked;\r\n            }\r\n          });\r\n        }\r\n      });\r\n    }\r\n  });\r\n\r\n  let newState = JSON.parse(JSON.stringify(navMenuItems));\r\n\r\n  dispatch({\r\n    type: CHANGE_SELECTED_ITEM_ACTIVE_STATUS,\r\n    payload: newState\r\n  });\r\n};\r\n\r\n// Add new category in nav-menu in store\r\nexport const addNewCategory = (categoryName, state) => dispatch => {\r\n  if (categoryName.length < 3) {\r\n    return null;\r\n  }\r\n\r\n  let newCategory = {\r\n    active: true,\r\n    subCategoryList: [],\r\n    _id: String(Math.random() * (100000 - 1) + 1),\r\n    categoryName: categoryName,\r\n    categoryUrl: `/${categoryName}`\r\n  };\r\n\r\n  state.push(newCategory);\r\n\r\n  let newState = JSON.parse(JSON.stringify(state));\r\n\r\n  dispatch({\r\n    type: ADD_NEW_CATEGORY,\r\n    payload: newState\r\n  });\r\n};\r\n\r\n// Add new sub-category in nav-menu in store\r\nexport const addNewSubCategory = (\r\n  categoryName,\r\n  subCategoryName,\r\n  state\r\n) => dispatch => {\r\n  if (subCategoryName.length < 3) {\r\n    return null;\r\n  }\r\n\r\n  let newSubCategory = {\r\n    active: true,\r\n    furtherSubCategoryList: [],\r\n    _id: String(Math.random() * (100000 - 1) + 1),\r\n    subCategoryName: subCategoryName,\r\n    subCategoryUrl: `/${categoryName}/${subCategoryName}`\r\n  };\r\n\r\n  state.forEach(category => {\r\n    if (category.categoryName === categoryName) {\r\n      category.subCategoryList.push(newSubCategory);\r\n    }\r\n  });\r\n\r\n  let newState = JSON.parse(JSON.stringify(state));\r\n\r\n  dispatch({\r\n    type: ADD_NEW_SUB_CATEGORY,\r\n    payload: newState\r\n  });\r\n};\r\n\r\n// Add new sub-sub-category in nav-menu in store\r\nexport const addNewFurtherSubCategory = (\r\n  categoryName,\r\n  subCategoryName,\r\n  furtherSubCategoryName,\r\n  state\r\n) => dispatch => {\r\n  if (furtherSubCategoryName.length < 3) {\r\n    return null;\r\n  }\r\n\r\n  let newFurtherSubCategory = {\r\n    active: true,\r\n    _id: String(Math.random() * (100000 - 1) + 1),\r\n    furtherSubCategoryName: furtherSubCategoryName,\r\n    furtherSubCategoryUrl: `/${categoryName}/${subCategoryName}/${furtherSubCategoryName}`\r\n  };\r\n\r\n  state.forEach(category => {\r\n    if (category.categoryName === categoryName) {\r\n      category.subCategoryList.forEach(subCategory => {\r\n        if (subCategory.subCategoryName === subCategoryName) {\r\n          subCategory.furtherSubCategoryList.push(newFurtherSubCategory);\r\n        }\r\n      });\r\n    }\r\n  });\r\n\r\n  let newState = JSON.parse(JSON.stringify(state));\r\n\r\n  dispatch({\r\n    type: ADD_NEW_FURTHER_SUB_CATEGORY,\r\n    payload: newState\r\n  });\r\n};\r\n\r\n// Save changes into mongoDB\r\nexport const saveUpdatedNavMenu = (\r\n  event,\r\n  state,\r\n  callbackGetAdmNavMenuItems,\r\n  errors\r\n) => dispatch => {\r\n  if (Object.keys(errors).length > 0) {\r\n    event.preventDefault();\r\n\r\n    dispatch({\r\n      type: FETCH_NAV_MENU_FAILED,\r\n      payload: \"You have to handle all mistakes to submit changes\"\r\n    });\r\n  } else {\r\n    dispatch({\r\n      type: FETCH_NAV_MENU_REQUESTED\r\n    });\r\n\r\n    state.forEach(category => {\r\n      delete category._id;\r\n      category.subCategoryList.forEach(subCategory => {\r\n        delete subCategory._id;\r\n        subCategory.furtherSubCategoryList.forEach(furtherSubCategory => {\r\n          delete furtherSubCategory._id;\r\n        });\r\n      });\r\n    });\r\n\r\n    let updatedMenu = JSON.parse(JSON.stringify(state));\r\n\r\n    axios\r\n      .post(\"/navigation-menu/add-list\", { navigationMenuItems: updatedMenu })\r\n      .then(response => {\r\n        dispatch({\r\n          type: FETCH_NAV_MENU_SUCCEEDED,\r\n          payload: \"Navigation Menu is successfully updated.\"\r\n        });\r\n\r\n        callbackGetAdmNavMenuItems();\r\n      })\r\n      .catch(err => {\r\n        dispatch({\r\n          type: FETCH_NAV_MENU_FAILED,\r\n          payload: \"An error occured. Please, check DB.\"\r\n        });\r\n      });\r\n  }\r\n};\r\n","import {\r\n  GET_NAV_MENU,\r\n  SEND_NAV_REQUEST,\r\n  CHANGE_SELECTED_ITEM_ACTIVE_STATUS,\r\n  ADD_NEW_CATEGORY,\r\n  ADD_NEW_SUB_CATEGORY,\r\n  ADD_NEW_FURTHER_SUB_CATEGORY,\r\n  FETCH_NAV_MENU_REQUESTED,\r\n  FETCH_NAV_MENU_SUCCEEDED,\r\n  FETCH_NAV_MENU_FAILED\r\n} from \"../../actions/adminDashboard/admNavMenuActions\";\r\n\r\nconst initialState = {\r\n  isMenuFetching: false,\r\n  navMenuItems: [],\r\n  resultMessage: \"\"\r\n};\r\n\r\nfunction admNavMenu(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SEND_NAV_REQUEST:\r\n      return {\r\n        ...state,\r\n        isMenuFetching: true\r\n      };\r\n    case GET_NAV_MENU:\r\n      return {\r\n        ...state,\r\n        navMenuItems: action.payload,\r\n        isMenuFetching: false\r\n      };\r\n    case CHANGE_SELECTED_ITEM_ACTIVE_STATUS:\r\n      return {\r\n        ...state,\r\n        navMenuItems: action.payload\r\n      };\r\n    case ADD_NEW_CATEGORY:\r\n      return {\r\n        ...state,\r\n        navMenuItems: action.payload\r\n      };\r\n    case ADD_NEW_SUB_CATEGORY:\r\n      return {\r\n        ...state,\r\n        navMenuItems: action.payload\r\n      };\r\n    case ADD_NEW_FURTHER_SUB_CATEGORY:\r\n      return {\r\n        ...state,\r\n        navMenuItems: action.payload\r\n      };\r\n    case FETCH_NAV_MENU_REQUESTED:\r\n      return {\r\n        ...state,\r\n        isMenuFetching: true,\r\n        resultMessage: \"\"\r\n      };\r\n\r\n    case FETCH_NAV_MENU_SUCCEEDED:\r\n      return {\r\n        ...state,\r\n        resultMessage: action.payload,\r\n        isMenuFetching: false\r\n      };\r\n    case FETCH_NAV_MENU_FAILED:\r\n      return {\r\n        ...state,\r\n        resultMessage: action.payload,\r\n        isMenuFetching: false\r\n      };\r\n\r\n    default:\r\n      return { ...state };\r\n  }\r\n}\r\n\r\nexport default admNavMenu;\r\n","import axios from \"axios\";\r\nimport uniqueRandom from \"unique-random\";\r\nconst rand = uniqueRandom(0, 999999);\r\n\r\nexport const GET_CATEGORY_NAME = \"GET_CATEGORY_NAME\";\r\nexport const GET_SUB_CATEGORY_NAME = \"GET_SUB_CATEGORY_NAME\";\r\nexport const GET_FURTHER_SUB_CATEGORY_NAME = \"GET_FURTHER_SUB_CATEGORY_NAME\";\r\nexport const SET_SUBCATEGORY_OPTIONS = \"SET_SUBCATEGORY_OPTIONS\";\r\nexport const SET_FURTHER_SUBCATEGORY_OPTIONS =\r\n  \"SET_FURTHER_SUBCATEGORY_OPTIONS\";\r\nexport const GET_PRODUCT_MODEL_NAME = \"GET_PRODUCT_MODEL_NAME\";\r\nexport const GET_WITHDRAWN_STATUS = \"GET_WITHDRAWN_STATUS\";\r\nexport const GET_ACTIVE_STATUS = \"GET_ACTIVE_STATUS\";\r\nexport const GET_CURRENT_PRICE = \"GET_CURRENT_PRICE\";\r\nexport const GET_PREVIOUS_PRICE = \"GET_PREVIOUS_PRICE\";\r\nexport const UPDATE_PRODUCT_FEATURES = \"UPDATE_PRODUCT_FEATURES\";\r\nexport const SET_COLOR_OPTIONS = \"SET_COLOR_OPTIONS\";\r\nexport const SET_SIZE_OPTIONS = \"SET_SIZE_OPTIONS\";\r\nexport const RESET_MODAL_STATUS = \"RESET_MODAL_STATUS\";\r\nexport const RESET_PRODUCT_FORM = \"RESET_PRODUCT_FORM\";\r\nexport const SET_ERROR_MSG = \"SET_ERROR_MSG\";\r\nexport const GENERATE_NEW_ITEM_NO = \"GENERATE_NEW_ITEM_NO\";\r\nexport const COLOR_COLLECTION_UPDATE_MESSAGE =\r\n  \"COLOR_COLLECTION_UPDATE_MESSAGE\";\r\nexport const SIZE_COLLECTION_UPDATE_MESSAGE = \"SIZE_COLLECTION_UPDATE_MESSAGE\";\r\n\r\nexport const FETCH_NEW_PRODUCT_REQUESTED = \"FETCH_NEW_PRODUCT_REQUESTED\";\r\nexport const FETCH_NEW_PRODUCT_SUCCEEDED = \"FETCH_NEW_PRODUCT_SUCCEEDED\";\r\nexport const FETCH_NEW_PRODUCT_FAILED = \"FETCH_NEW_PRODUCT_FAILED\";\r\n\r\nexport const FETCH_NEW_PRODUCT_PHOTOS_SUCCEEDED =\r\n  \"FETCH_NEW_PRODUCT_PHOTOS_SUCCEEDED\";\r\nexport const FETCH_NEW_PRODUCT_PHOTOS_FAILED =\r\n  \"FETCH_NEW_PRODUCT_PHOTOS_FAILED\";\r\n\r\n//Handling category chose in Select\r\nexport const getCategory = (option, navMenuItems, validation) => dispatch => {\r\n  dispatch({\r\n    type: GET_CATEGORY_NAME,\r\n    payload: option\r\n  });\r\n\r\n  dispatch({\r\n    type: GET_SUB_CATEGORY_NAME,\r\n    payload: \"\"\r\n  });\r\n\r\n  dispatch({\r\n    type: GET_FURTHER_SUB_CATEGORY_NAME,\r\n    payload: \"\"\r\n  });\r\n\r\n  //Creating sub-category options for select input, which should be relevent to chosen category\r\n  let subCategoryOptions = navMenuItems\r\n    .map((cat, i) => {\r\n      if (cat.categoryName === option.value) {\r\n        return cat.subCategoryList.map(subCat => {\r\n          return {\r\n            value: subCat.subCategoryName,\r\n            label: subCat.subCategoryName\r\n          };\r\n        });\r\n      }\r\n      return null;\r\n    })\r\n    .filter(item => {\r\n      return item !== null;\r\n    });\r\n\r\n  let result = subCategoryOptions[0];\r\n\r\n  dispatch({\r\n    type: SET_SUBCATEGORY_OPTIONS,\r\n    payload: result\r\n  });\r\n\r\n  if (option.value) {\r\n    validation.category = \"\";\r\n  }\r\n\r\n  dispatch({\r\n    type: SET_ERROR_MSG,\r\n    payload: validation\r\n  });\r\n};\r\n\r\n//Handling sub-gategory chose in Select\r\nexport const getSubCategory = (\r\n  option,\r\n  navMenuItems,\r\n  category,\r\n  validation\r\n) => dispatch => {\r\n  dispatch({\r\n    type: GET_SUB_CATEGORY_NAME,\r\n    payload: option\r\n  });\r\n\r\n  dispatch({\r\n    type: GET_FURTHER_SUB_CATEGORY_NAME,\r\n    payload: \"\"\r\n  });\r\n\r\n  //Creating sub-sub-category options for select input, which should be relevent to chosen category and sub-category\r\n  let furtherSubCategoryOptions = navMenuItems\r\n    .map(cat => {\r\n      if (cat.categoryName === category.value) {\r\n        return cat.subCategoryList\r\n          .map(subCat => {\r\n            if (subCat.subCategoryName === option.value) {\r\n              return subCat.furtherSubCategoryList.map(fSubCat => {\r\n                return {\r\n                  value: fSubCat.furtherSubCategoryName,\r\n                  label: fSubCat.furtherSubCategoryName\r\n                };\r\n              });\r\n            }\r\n            return undefined;\r\n          })\r\n          .filter(item => {\r\n            return item !== null && item !== undefined;\r\n          });\r\n      }\r\n      return null;\r\n    })\r\n    .filter(item => {\r\n      return item !== null && item !== undefined;\r\n    });\r\n\r\n  let result = furtherSubCategoryOptions[0][0];\r\n\r\n  dispatch({\r\n    type: SET_FURTHER_SUBCATEGORY_OPTIONS,\r\n    payload: result\r\n  });\r\n\r\n  if (option.value) {\r\n    validation.subCategory = \"\";\r\n  }\r\n\r\n  dispatch({\r\n    type: SET_ERROR_MSG,\r\n    payload: validation\r\n  });\r\n};\r\n\r\n//Handling sub-sub-gategory chose in Select\r\nexport const getFurtherSubCategory = (option, validation) => dispatch => {\r\n  dispatch({\r\n    type: GET_FURTHER_SUB_CATEGORY_NAME,\r\n    payload: option\r\n  });\r\n\r\n  if (option.value) {\r\n    validation.furtherSubCategory = \"\";\r\n  }\r\n\r\n  dispatch({\r\n    type: SET_ERROR_MSG,\r\n    payload: validation\r\n  });\r\n};\r\n\r\n//Handling entering product model name in input\r\nexport const getProductModelName = (model, validation) => dispatch => {\r\n  dispatch({\r\n    type: GET_PRODUCT_MODEL_NAME,\r\n    payload: model\r\n  });\r\n\r\n  if (model.length >= 5 && model.length <= 50) {\r\n    validation.productModelName = \"\";\r\n  } else {\r\n    validation.productModelName =\r\n      \"Product model name length must be between 5 and 50 characters\";\r\n  }\r\n\r\n  dispatch({\r\n    type: SET_ERROR_MSG,\r\n    payload: validation\r\n  });\r\n};\r\n\r\n//Handling filling product withdrawnStatus in checkbox\r\nexport const getwithdrawnStatus = status => dispatch => {\r\n  dispatch({\r\n    type: GET_WITHDRAWN_STATUS,\r\n    payload: status\r\n  });\r\n};\r\n\r\n//Handling filling product activeStatus in checkbox\r\nexport const getActiveStatus = status => dispatch => {\r\n  dispatch({\r\n    type: GET_ACTIVE_STATUS,\r\n    payload: status\r\n  });\r\n};\r\n\r\n//Handling entering product CurrentPrice in input\r\nexport const getCurrentPrice = (\r\n  price,\r\n  validation,\r\n  previousPrice\r\n) => dispatch => {\r\n  dispatch({\r\n    type: GET_CURRENT_PRICE,\r\n    payload: Number(price)\r\n  });\r\n\r\n  if (price > 0) {\r\n    validation.currentPrice = \"\";\r\n  } else {\r\n    validation.currentPrice =\r\n      \"Current-price field is required and should be > 0\";\r\n  }\r\n\r\n  dispatch({\r\n    type: SET_ERROR_MSG,\r\n    payload: validation\r\n  });\r\n};\r\n\r\n//Handling entering product PreviousPrice in input\r\nexport const getPreviousPrice = (\r\n  price,\r\n  validation,\r\n  currentPrice\r\n) => dispatch => {\r\n  dispatch({\r\n    type: GET_PREVIOUS_PRICE,\r\n    payload: Number(price)\r\n  });\r\n\r\n  if ((price > 0 && price > currentPrice) || price === 0) {\r\n    validation.previousPrice = \"\";\r\n  } else {\r\n    validation.previousPrice =\r\n      \"Previous price-price field should be > current price\";\r\n  }\r\n\r\n  dispatch({\r\n    type: SET_ERROR_MSG,\r\n    payload: validation\r\n  });\r\n};\r\n\r\n//Taking existing colors and sizes from DB to show in Select options for Colors/ Sizes\r\nexport const getProductFeatures = () => dispatch => {\r\n  axios.all([axios.get(\"/filters/colors\"), axios.get(\"/filters/sizes\")]).then(\r\n    axios.spread((colors, sizes) => {\r\n      // Get colors and create options for Select\r\n      let productColors = colors.data.map(color => {\r\n        return {\r\n          value: color.colorName,\r\n          label: color.colorName\r\n        };\r\n      });\r\n\r\n      // Sort color values by alphabet\r\n      let colorNameOptions = productColors.sort((a, b) => {\r\n        if (a.value < b.value) {\r\n          return -1;\r\n        }\r\n        if (a.value > b.value) {\r\n          return 1;\r\n        }\r\n        return 0;\r\n      });\r\n\r\n      // Get cssHexCodes for showing colors in interface (not only words)\r\n      let colorStyles = colors.data.map(color => {\r\n        return {\r\n          cssHexCode: color.cssHexCode,\r\n          colorName: color.colorName\r\n        };\r\n      });\r\n\r\n      let productSizes = sizes.data.map(size => {\r\n        return {\r\n          value: size.value,\r\n          label: size.value\r\n        };\r\n      });\r\n\r\n      let sizeOptions = productSizes.sort((a, b) => {\r\n        if (a.value < b.value) {\r\n          return 1;\r\n        }\r\n        if (a.value > b.value) {\r\n          return -1;\r\n        }\r\n        return 0;\r\n      });\r\n\r\n      dispatch({\r\n        type: SET_COLOR_OPTIONS,\r\n        colors: colorNameOptions,\r\n        colorCollection: colorStyles\r\n      });\r\n\r\n      dispatch({\r\n        type: SET_SIZE_OPTIONS,\r\n        payload: sizeOptions\r\n      });\r\n    })\r\n  );\r\n};\r\n\r\n//Handling actions, when user chose product color\r\nexport const handleProductColors = (\r\n  colorOption,\r\n  productFeatures,\r\n  colorIndex,\r\n  colorStyles,\r\n  validation\r\n) => dispatch => {\r\n  let colorCssHexCode = colorStyles.filter(item => {\r\n    return item.colorName === colorOption.value;\r\n  })[0][\"cssHexCode\"];\r\n\r\n  productFeatures[colorIndex].colorName = colorOption;\r\n  productFeatures[colorIndex].color = colorCssHexCode;\r\n\r\n  let updatedProductFeatures = JSON.parse(JSON.stringify(productFeatures));\r\n\r\n  dispatch({\r\n    type: UPDATE_PRODUCT_FEATURES,\r\n    payload: updatedProductFeatures\r\n  });\r\n\r\n  if (!hasDublicates(productFeatures, \"colorName\", \"value\")) {\r\n    validation.colorDublicate = \"\";\r\n  } else if (hasDublicates(productFeatures, \"colorName\", \"value\")) {\r\n    validation.colorDublicate =\r\n      \"You have color dublicates in product, colors must be unique\";\r\n  }\r\n\r\n  updatedProductFeatures.forEach((color, i) => {\r\n    if (color.colorName.value) {\r\n      validation.productFeatures[i].colorName = \"\";\r\n    }\r\n  });\r\n\r\n  dispatch({\r\n    type: SET_ERROR_MSG,\r\n    payload: validation\r\n  });\r\n};\r\n\r\n//Handling actions, when user add new color for product\r\nexport const addColor = (productFeatures, validation) => dispatch => {\r\n  let newColor = {\r\n    color: \"#ffffff\",\r\n    colorName: \"white\",\r\n    imageUrls: [],\r\n    previewImages: [],\r\n    filesRejected: false,\r\n    sizes: [\r\n      {\r\n        size: \"\",\r\n        quantity: 0\r\n      }\r\n    ]\r\n  };\r\n\r\n  productFeatures.push(newColor);\r\n\r\n  let updatedProductFeatures = JSON.parse(JSON.stringify(productFeatures));\r\n\r\n  dispatch({\r\n    type: UPDATE_PRODUCT_FEATURES,\r\n    payload: updatedProductFeatures\r\n  });\r\n\r\n  let newColorValidation = {\r\n    colorName: \"\",\r\n    previewImages: \"\",\r\n    imageNamesDuplicate: \"\",\r\n    sizes: [\r\n      {\r\n        size: \"\",\r\n        quantity: \"\"\r\n      }\r\n    ],\r\n    sizeDublicate: \"\"\r\n  };\r\n\r\n  validation.productFeatures.push(newColorValidation);\r\n\r\n  let newValidation = JSON.parse(JSON.stringify(validation));\r\n\r\n  dispatch({\r\n    type: SET_ERROR_MSG,\r\n    payload: newValidation\r\n  });\r\n};\r\n\r\n// Handling actions, when user add images to our Dropzone\r\nexport const getImages = (\r\n  newImages,\r\n  productFeatures,\r\n  colorIndex,\r\n  validation\r\n) => dispatch => {\r\n  // Information about files to show them in preview in our Dropzone component\r\n  let incomingImages = newImages.map(img => {\r\n    return {\r\n      lastModified: img.lastModified,\r\n      lastModifiedDate: img.lastModifiedDate,\r\n      name: img.name,\r\n      preview: img.preview,\r\n      size: img.size,\r\n      type: img.type,\r\n      webkitRelativePath: img.webkitRelativePath\r\n    };\r\n  });\r\n\r\n  // Saving files (blob-objects) in urls to fill our redux store with them, because it is not possible to store file-objects (blob) in store? only plain objects.\r\n  // Then we could be able to convert them to files again for sending to our server when submit form\r\n  const blobUrls = newImages.map(img => {\r\n    return {\r\n      blobUrl: window.URL.createObjectURL(img),\r\n      fileName: img.name,\r\n      mimeType: img.type\r\n    };\r\n  });\r\n\r\n  let imgs = productFeatures[colorIndex].previewImages.concat(incomingImages);\r\n  productFeatures[colorIndex].previewImages = imgs; // We save images for preview in productFeatures.previewImages\r\n  productFeatures[colorIndex].filesRejected = false;\r\n  productFeatures[colorIndex].blobUrls = blobUrls; // We urls (links) that will be available files in productFeatures.previewImages\r\n  let updatedProductFeatures = JSON.parse(JSON.stringify(productFeatures)); // Deep object copy\r\n\r\n  dispatch({\r\n    type: UPDATE_PRODUCT_FEATURES,\r\n    payload: updatedProductFeatures\r\n  });\r\n\r\n  updatedProductFeatures.forEach((color, i) => {\r\n    if (color.previewImages.length > 0) {\r\n      validation.productFeatures[i].previewImages = \"\";\r\n    }\r\n\r\n    if (!hasDublicates(color.previewImages, null, \"name\")) {\r\n      validation.productFeatures[i].imageNamesDuplicate = \"\";\r\n    } else if (hasDublicates(color.previewImages, null, \"name\")) {\r\n      validation.productFeatures[i].imageNamesDuplicate =\r\n        \"You have duplicates in your image names, must be unique\";\r\n    }\r\n  });\r\n\r\n  dispatch({\r\n    type: SET_ERROR_MSG,\r\n    payload: validation\r\n  });\r\n};\r\n\r\n//Handling actions, when files, added by user into Dropzone, are rejected because of unacceptable file-size or format\r\nexport const onFilesRejected = (productFeatures, colorIndex) => dispatch => {\r\n  productFeatures[colorIndex].filesRejected = true;\r\n  let updatedProductFeatures = JSON.parse(JSON.stringify(productFeatures));\r\n\r\n  dispatch({\r\n    type: UPDATE_PRODUCT_FEATURES,\r\n    payload: updatedProductFeatures\r\n  });\r\n};\r\n\r\n//Handling actions, when user deletes image, added in Dropzone\r\nexport const deleteDropzoneImage = (\r\n  e,\r\n  productFeatures,\r\n  colorIndex,\r\n  validation\r\n) => dispatch => {\r\n  if (e.target.getAttribute(\"data-action\") === \"delete-image\") {\r\n    e.preventDefault();\r\n\r\n    let index = +e.target.previousElementSibling.dataset.index;\r\n\r\n    let newImages = productFeatures[colorIndex].previewImages.filter(\r\n      (image, i) => {\r\n        return i !== index;\r\n      }\r\n    );\r\n\r\n    productFeatures[colorIndex].previewImages = newImages;\r\n\r\n    let updatedProductFeatures = JSON.parse(JSON.stringify(productFeatures));\r\n\r\n    dispatch({\r\n      type: UPDATE_PRODUCT_FEATURES,\r\n      payload: updatedProductFeatures\r\n    });\r\n\r\n    updatedProductFeatures.forEach((color, i) => {\r\n      if (color.previewImages.length < 1) {\r\n        validation.productFeatures[i].previewImages =\r\n          \"You must upload at least 1 image for adding product\";\r\n      } else {\r\n        validation.productFeatures[i].previewImages = \"\";\r\n      }\r\n\r\n      if (!hasDublicates(color.previewImages, null, \"name\")) {\r\n        validation.productFeatures[i].imageNamesDuplicate = \"\";\r\n      } else if (hasDublicates(color.previewImages, null, \"name\")) {\r\n        validation.productFeatures[i].imageNamesDuplicate =\r\n          \"You have duplicates in your image names, must be unique\";\r\n      }\r\n    });\r\n\r\n    dispatch({\r\n      type: SET_ERROR_MSG,\r\n      payload: validation\r\n    });\r\n  }\r\n};\r\n\r\n//Handling actions, when user deletes added color to product\r\nexport const deleteColor = (\r\n  productFeatures,\r\n  colorIndex,\r\n  validation\r\n) => dispatch => {\r\n  let updatedProductFeatures = productFeatures.filter((color, i) => {\r\n    return i !== Number(colorIndex);\r\n  });\r\n\r\n  dispatch({\r\n    type: UPDATE_PRODUCT_FEATURES,\r\n    payload: updatedProductFeatures\r\n  });\r\n\r\n  let newValidationProductFeatures = validation.productFeatures.filter(\r\n    (color, i) => {\r\n      return i !== Number(colorIndex);\r\n    }\r\n  );\r\n\r\n  validation.productFeatures = newValidationProductFeatures;\r\n\r\n  if (!hasDublicates(updatedProductFeatures, \"colorName\", \"value\")) {\r\n    validation.colorDublicate = \"\";\r\n  } else if (hasDublicates(productFeatures, \"colorName\", \"value\")) {\r\n    validation.colorDublicate =\r\n      \"You have color dublicates in product, colors must be unique\";\r\n  }\r\n\r\n  dispatch({\r\n    type: SET_ERROR_MSG,\r\n    payload: validation\r\n  });\r\n};\r\n\r\n//Handling actions, when user chose product size\r\nexport const handleProductSizes = (\r\n  sizeOption,\r\n  productFeatures,\r\n  colorIndex,\r\n  sizeIndex,\r\n  validation\r\n) => dispatch => {\r\n  productFeatures[colorIndex].sizes[sizeIndex].size = sizeOption;\r\n\r\n  let updatedProductFeatures = JSON.parse(JSON.stringify(productFeatures));\r\n\r\n  dispatch({\r\n    type: UPDATE_PRODUCT_FEATURES,\r\n    payload: updatedProductFeatures\r\n  });\r\n\r\n  updatedProductFeatures.forEach((color, i) => {\r\n    if (!hasDublicates(color.sizes, \"size\", \"value\")) {\r\n      validation.productFeatures[i].sizeDublicate = \"\";\r\n    } else if (hasDublicates(color.sizes, \"size\", \"value\")) {\r\n      validation.productFeatures[i].sizeDublicate =\r\n        \"Sizes has dublicate values, must be unique\";\r\n    }\r\n\r\n    color.sizes.forEach((size, j) => {\r\n      if (size.size.value) {\r\n        validation.productFeatures[i].sizes[j].size = \"\";\r\n      }\r\n    });\r\n  });\r\n\r\n  let newValidation = JSON.parse(JSON.stringify(validation));\r\n\r\n  dispatch({\r\n    type: SET_ERROR_MSG,\r\n    payload: newValidation\r\n  });\r\n};\r\n\r\n//Handling actions, when user fills product quantity\r\nexport const handleProductQuantity = (\r\n  quantuty,\r\n  productFeatures,\r\n  colorIndex,\r\n  sizeIndex\r\n) => dispatch => {\r\n  productFeatures[colorIndex].sizes[sizeIndex].quantity = quantuty;\r\n\r\n  let updatedProductFeatures = JSON.parse(JSON.stringify(productFeatures));\r\n\r\n  dispatch({\r\n    type: UPDATE_PRODUCT_FEATURES,\r\n    payload: updatedProductFeatures\r\n  });\r\n};\r\n\r\n//Handling actions, when user adds nes size for product\r\nexport const addSize = (\r\n  productFeatures,\r\n  colorIndex,\r\n  validation\r\n) => dispatch => {\r\n  let newSize = {\r\n    size: \"\",\r\n    quantity: 0\r\n  };\r\n\r\n  productFeatures[colorIndex].sizes.push(newSize);\r\n\r\n  let updatedProductFeatures = JSON.parse(JSON.stringify(productFeatures));\r\n\r\n  dispatch({\r\n    type: UPDATE_PRODUCT_FEATURES,\r\n    payload: updatedProductFeatures\r\n  });\r\n\r\n  let newSizeValidation = {\r\n    size: \"\",\r\n    quantity: \"\"\r\n  };\r\n\r\n  validation.productFeatures[colorIndex].sizes.push(newSizeValidation);\r\n\r\n  let newValidation = JSON.parse(JSON.stringify(validation));\r\n\r\n  dispatch({\r\n    type: SET_ERROR_MSG,\r\n    payload: newValidation\r\n  });\r\n};\r\n\r\n//Handling actions, when user deletes added size for product\r\nexport const deleteSize = (\r\n  productFeatures,\r\n  colorIndex,\r\n  sizeIndex,\r\n  validation\r\n) => dispatch => {\r\n  productFeatures.forEach((color, i) => {\r\n    if (i === Number(colorIndex)) {\r\n      color.sizes = color.sizes.filter((size, j) => {\r\n        return j !== Number(sizeIndex);\r\n      });\r\n    }\r\n  });\r\n\r\n  let updatedProductFeatures = JSON.parse(JSON.stringify(productFeatures));\r\n\r\n  dispatch({\r\n    type: UPDATE_PRODUCT_FEATURES,\r\n    payload: updatedProductFeatures\r\n  });\r\n\r\n  validation.productFeatures.forEach((color, i) => {\r\n    if (i === Number(colorIndex)) {\r\n      color.sizes = color.sizes.filter((size, j) => {\r\n        return j !== Number(sizeIndex);\r\n      });\r\n    }\r\n  });\r\n\r\n  updatedProductFeatures.forEach((color, i) => {\r\n    if (!hasDublicates(color.sizes, \"size\", \"value\")) {\r\n      validation.productFeatures[i].sizeDublicate = \"\";\r\n    } else if (hasDublicates(color.sizes, \"size\", \"value\")) {\r\n      validation.productFeatures[i].sizeDublicate =\r\n        \"Sizes has dublicate values, must be unique\";\r\n    }\r\n  });\r\n\r\n  dispatch({\r\n    type: SET_ERROR_MSG,\r\n    payload: validation\r\n  });\r\n};\r\n\r\n// Handling situations, when user undo reseting the form in warning modal window\r\nexport const resetModal = status => dispatch => {\r\n  dispatch({\r\n    type: RESET_MODAL_STATUS,\r\n    payload: status\r\n  });\r\n};\r\n\r\n// Handling situations, when user reset the form (delet all filled information, returning form to its initial state)\r\nexport const resetForm = state => dispatch => {\r\n  let initialState = {\r\n    itemNo: rand(),\r\n    category: \"\",\r\n    subCategory: \"\",\r\n    furtherSubCategory: \"\",\r\n    productModelName: \"\",\r\n    subCategoryOptions: [],\r\n    furtherSubCategoryOptions: [],\r\n    withdrawnFromSale: false,\r\n    active: true,\r\n    currentPrice: 0,\r\n    previousPrice: 0,\r\n    colorOptions: state.colorOptions,\r\n    sizeOptions: state.sizeOptions,\r\n    colorStyles: state.colorStyles,\r\n    productFeatures: [\r\n      {\r\n        color: \"#ffffff\",\r\n        colorName: \"white\",\r\n        imageUrls: [],\r\n        previewImages: [],\r\n        filesRejected: false,\r\n        sizes: [\r\n          {\r\n            size: \"\",\r\n            quantity: 0\r\n          }\r\n        ]\r\n      }\r\n    ],\r\n    resetModalStatus: false,\r\n    validation: {\r\n      category: \"\",\r\n      subCategory: \"\",\r\n      furtherSubCategory: \"\",\r\n      productModelName: \"\",\r\n      currentPrice: \"\",\r\n      previousPrice: \"\",\r\n      colorDublicate: \"\",\r\n      productFeatures: [\r\n        {\r\n          colorName: \"\",\r\n          previewImages: \"\",\r\n          imageNamesDuplicate: \"\",\r\n          sizes: [\r\n            {\r\n              size: \"\",\r\n              quantity: \"\"\r\n            }\r\n          ],\r\n          sizeDublicate: \"\"\r\n        }\r\n      ]\r\n    },\r\n    fetchingNewProduct: false,\r\n    productMessage: \"\",\r\n    photosMessage: \"\",\r\n    colorCollectionUpdateMessage: \"\",\r\n    sizeCollectionUpdateMessage: \"\"\r\n  };\r\n\r\n  let newState = JSON.parse(JSON.stringify(initialState));\r\n\r\n  dispatch({\r\n    type: RESET_PRODUCT_FORM,\r\n    payload: newState\r\n  });\r\n};\r\n\r\nexport const generateNewItemNo = () => dispatch => {\r\n  dispatch({\r\n    type: GENERATE_NEW_ITEM_NO\r\n  });\r\n};\r\n\r\n// Function for cheking if one of the form fields is invalid (if invalid - function returns true)\r\n// export const isInvalid = obj => {\r\n//   for (let propertyName in obj) {\r\n//     if (\r\n//       typeof obj[propertyName] != \"object\" &&\r\n//       obj[propertyName] !== null &&\r\n//       !Array.isArray(obj[propertyName])\r\n//     ) {\r\n//       if (obj[propertyName]) {\r\n//         console.log(obj[propertyName]);\r\n//         return true;\r\n//       }\r\n//     } else {\r\n//       console.log(\"Nested : \");\r\n//       console.log(obj[propertyName]);\r\n//       isInvalid(obj[propertyName]);\r\n//     }\r\n\r\n//     return false;\r\n//   }\r\n// };\r\n\r\n//НУЖНА ПОМОЩЬ ПЕРЕПИСАТЬ ЭТУ ЖУТКУЮ ФУНКЦИЮ, ПРОБОВАЛ РЕКУРСИЮ, НО ЧТО-ТО НЕ ВЫХОДИТ, ЛОГИКУ ГДЕ-ТО ТЕРЯЮ (одну попытку выше оставил, остальные удалил)\r\nconst isInvalid = obj => {\r\n  let error = false;\r\n\r\n  for (let key in obj) {\r\n    if (\r\n      typeof obj[key] != \"object\" &&\r\n      obj[key] !== null &&\r\n      !Array.isArray(obj[key])\r\n    ) {\r\n      if (obj[key]) {\r\n        error = true;\r\n      }\r\n    } else if (Array.isArray(obj[key])) {\r\n      obj[key].forEach(item => {\r\n        for (let prop in item) {\r\n          if (\r\n            typeof item[prop] != \"object\" &&\r\n            item[prop] !== null &&\r\n            !Array.isArray(item[prop])\r\n          ) {\r\n            if (item[prop]) {\r\n              error = true;\r\n            }\r\n          } else {\r\n            item[prop].forEach(subItem => {\r\n              for (let subProp in subItem) {\r\n                if (subItem[subProp]) {\r\n                  error = true;\r\n                }\r\n              }\r\n            });\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  return error;\r\n};\r\n\r\n// Function for cheking if array of object with nested object has dublicate value (same sizes)\r\nfunction hasDublicates(arrayOfObjects, propName, subPropName) {\r\n  if (!propName) {\r\n    let arrayOfProperties = arrayOfObjects.map(item => {\r\n      return item[subPropName];\r\n    });\r\n\r\n    let isDublicate = arrayOfProperties.some((item, i, arr) => {\r\n      return arr.indexOf(item) !== i;\r\n    });\r\n\r\n    return isDublicate;\r\n  } else {\r\n    let arrayOfProperties = arrayOfObjects.map(item => {\r\n      return item[propName][subPropName];\r\n    });\r\n    let isDublicate = arrayOfProperties.some((item, i, arr) => {\r\n      return arr.indexOf(item) !== i;\r\n    });\r\n\r\n    return isDublicate;\r\n  }\r\n}\r\n\r\n// Validating all fields in form\r\nexport const validateForm = (state, validation, furtherSubCategoryOptions) => {\r\n  if (!state.category) {\r\n    validation.category = \"Category field is required\";\r\n  }\r\n\r\n  if (!state.subCategory) {\r\n    validation.subCategory = \"Sub-category field is required\";\r\n  }\r\n\r\n  if (furtherSubCategoryOptions.length > 0 && !state.furtherSubCategory) {\r\n    validation.furtherSubCategory = \"Sub-sub-category field is required\";\r\n  }\r\n\r\n  if (!state.productModelName) {\r\n    validation.productModelName = \"Product model name field is required\";\r\n  }\r\n\r\n  if (\r\n    state.productModelName &&\r\n    (state.productModelName.length < 5 || state.productModelName.length > 50)\r\n  ) {\r\n    validation.productModelName =\r\n      \"Product model name length must be between 5 and 50 characters\";\r\n  }\r\n\r\n  if (!state.currentPrice || state.currentPrice === 0) {\r\n    validation.currentPrice =\r\n      \"Current-price field is required and should be > 0\";\r\n  }\r\n\r\n  if (state.previousPrice > 0 && state.previousPrice < state.currentPrice) {\r\n    validation.previousPrice =\r\n      \"Previous price-price field should be > current price\";\r\n  }\r\n\r\n  if (hasDublicates(state.productFeatures, \"colorName\", \"value\")) {\r\n    validation.colorDublicate =\r\n      \"You have color dublicates in product, colors must be unique\";\r\n  }\r\n\r\n  state.productFeatures.forEach((color, i) => {\r\n    if (!color.colorName.value) {\r\n      validation.productFeatures[i].colorName = \"Color field is required\";\r\n    }\r\n\r\n    if (color.previewImages.length < 1) {\r\n      validation.productFeatures[i].previewImages =\r\n        \"You must upload at least 1 image for adding product\";\r\n    }\r\n\r\n    if (hasDublicates(color.sizes, \"size\", \"value\")) {\r\n      validation.productFeatures[i].sizeDublicate =\r\n        \"Sizes has dublicate values, must be unique\";\r\n    }\r\n\r\n    if (hasDublicates(color.previewImages, null, \"name\")) {\r\n      validation.productFeatures[i].imageNamesDuplicate =\r\n        \"You have duplicates in your image names, must be unique\";\r\n    }\r\n\r\n    color.sizes.forEach((size, j) => {\r\n      if (!size.size.value) {\r\n        validation.productFeatures[i].sizes[j].size = \"Size field is required\";\r\n      }\r\n    });\r\n  });\r\n\r\n  let newValidation = JSON.parse(JSON.stringify(validation));\r\n\r\n  return newValidation;\r\n};\r\n\r\n// Function for cextracting files, that are available in redux-store by blob-url (we save them to redux store by executing function getImages)\r\nconst urltoFile = async (url, filename, mimeType) => {\r\n  let file = await fetch(url)\r\n    .then(function(res) {\r\n      return res.arrayBuffer();\r\n    })\r\n    .then(function(buf) {\r\n      return new File([buf], filename, { type: mimeType });\r\n    });\r\n  return file;\r\n};\r\n\r\n// Sending information about our new product and photos to server to process data and save new product to database\r\nexport const sendNewProductToServer = (\r\n  state,\r\n  validation,\r\n  furtherSubCategoryOptions\r\n) => dispatch => {\r\n  let validationObject = validateForm(\r\n    state,\r\n    validation,\r\n    furtherSubCategoryOptions\r\n  );\r\n\r\n  dispatch({\r\n    type: SET_ERROR_MSG,\r\n    payload: validationObject\r\n  });\r\n\r\n  // If the form is invalid - do not send product to server\r\n  if (isInvalid(validationObject)) {\r\n    return;\r\n  } else {\r\n    // If the form is valid - send product to DB\r\n    dispatch({\r\n      type: FETCH_NEW_PRODUCT_REQUESTED\r\n    });\r\n\r\n    let newProduct = {\r\n      withdrawnFromSale: state.withdrawnFromSale,\r\n      active: state.active,\r\n      itemNo: state.itemNo,\r\n      category: state.category.value,\r\n      subCategory: state.subCategory.value,\r\n      furtherSubCategory: state.furtherSubCategory.value,\r\n      model: state.productModelName,\r\n      currentPrice: Number(state.currentPrice),\r\n      previousPrice: Number(state.previousPrice),\r\n      productFeatures: state.productFeatures\r\n    };\r\n\r\n    axios\r\n      .post(\"/products/admin-panel/add-products\", newProduct)\r\n      .then(async response => {\r\n        dispatch({\r\n          type: FETCH_NEW_PRODUCT_SUCCEEDED,\r\n          payload: response.data.message\r\n        });\r\n\r\n        // If our product object are successfully saved in DB, we receive response.data.success = true and can save photos to DB\r\n        if (response.data.success) {\r\n          // Creating statis part of image urls (this part are the same for every image that belong to product)\r\n          let imageUrlStaticPart = `./client/build/img/products/${\r\n            state.furtherSubCategory.value\r\n              ? state.category.value +\r\n                \"/\" +\r\n                state.subCategory.value +\r\n                \"/\" +\r\n                state.furtherSubCategory.value\r\n              : state.subCategory.value\r\n              ? state.category.value + \"/\" + state.subCategory.value\r\n              : state.category.value\r\n          }/${state.itemNo}`;\r\n\r\n          // Iterating or productFeatures in \"for of\" loop to use conveniently async - await functions, because in for / forEach loop it is hard to handle async - await\r\n          for (let color of state.productFeatures) {\r\n            const formData = new FormData();\r\n\r\n            for (let file of color.blobUrls) {\r\n              //Taking every blob-url, creating new files with function \"urltoFile\" that has been declared above, writing file to variable \"blobFile\" using async-await\r\n              let blobFile = await urltoFile(\r\n                file.blobUrl,\r\n                file.fileName,\r\n                file.mimeType\r\n              );\r\n              formData.append(`photos`, blobFile);\r\n            }\r\n\r\n            debugger;\r\n\r\n            axios\r\n              .post(\"/products/admin-panel/upload-product-images\", formData, {\r\n                // With files we are sending to server the path, where the files have to be saved (using multer)\r\n                headers: {\r\n                  path: `${imageUrlStaticPart}/${color.color.slice(1)}/`, // Static part of image url + colorCssHexCode without \"#\"\r\n                  \"content-type\": \"multipart/form-data\"\r\n                }\r\n              })\r\n              .then(response => {\r\n                dispatch({\r\n                  type: FETCH_NEW_PRODUCT_PHOTOS_SUCCEEDED,\r\n                  payload: response.data.message\r\n                });\r\n              })\r\n              .catch(error => {\r\n                dispatch({\r\n                  type: FETCH_NEW_PRODUCT_PHOTOS_FAILED,\r\n                  payload:\r\n                    \"Something wrong with receiving photos at server. Please, check the path folder\"\r\n                });\r\n              });\r\n          }\r\n\r\n          // Updating information about products in color collection\r\n          let newProductColors = newProduct.productFeatures.map(color => {\r\n            return {\r\n              cssHexCode: color.color,\r\n              colorName: color.colorName.value\r\n            };\r\n          });\r\n\r\n          for (let color of newProductColors) {\r\n            axios\r\n              .post(\"/filters/colors/add-color\", color)\r\n              .then(updatedColor => {\r\n                dispatch({\r\n                  type: COLOR_COLLECTION_UPDATE_MESSAGE,\r\n                  payload:\r\n                    \"Collor collection is successfully updated by information about new product\"\r\n                });\r\n              })\r\n              .catch(err => {\r\n                dispatch({\r\n                  type: COLOR_COLLECTION_UPDATE_MESSAGE,\r\n                  payload:\r\n                    \"Something wrong with updating collor collection by information about new product\"\r\n                });\r\n              });\r\n          }\r\n\r\n          // Updating information about products in size collection\r\n          let nonUniqueSizes = [];\r\n          newProduct.productFeatures.forEach(color => {\r\n            color.sizes.forEach(size => {\r\n              nonUniqueSizes.push(size.size.value);\r\n            });\r\n          });\r\n\r\n          let newProductUniqueSizes = [...new Set(nonUniqueSizes)];\r\n\r\n          for (let size of newProductUniqueSizes) {\r\n            axios\r\n              .post(\"/filters/sizes/add-size\", { value: size })\r\n              .then(updatedSize => {\r\n                dispatch({\r\n                  type: SIZE_COLLECTION_UPDATE_MESSAGE,\r\n                  payload:\r\n                    \"Size collection is successfully updated by information about new product\"\r\n                });\r\n              })\r\n              .catch(err => {\r\n                dispatch({\r\n                  type: SIZE_COLLECTION_UPDATE_MESSAGE,\r\n                  payload:\r\n                    \"Something wrong with updating size collection by information about new product\"\r\n                });\r\n              });\r\n          }\r\n        } else {\r\n          dispatch({\r\n            type: FETCH_NEW_PRODUCT_PHOTOS_FAILED,\r\n            payload: \"\"\r\n          });\r\n        }\r\n      })\r\n      .catch(error => {\r\n        dispatch({\r\n          type: FETCH_NEW_PRODUCT_FAILED,\r\n          payload: \"Something wrong with saving product in DB. Check DB.\"\r\n        });\r\n      });\r\n  }\r\n};\r\n","import {\r\n  GET_CATEGORY_NAME,\r\n  GET_SUB_CATEGORY_NAME,\r\n  GET_FURTHER_SUB_CATEGORY_NAME,\r\n  SET_SUBCATEGORY_OPTIONS,\r\n  SET_FURTHER_SUBCATEGORY_OPTIONS,\r\n  GET_PRODUCT_MODEL_NAME,\r\n  GET_WITHDRAWN_STATUS,\r\n  GET_ACTIVE_STATUS,\r\n  GET_CURRENT_PRICE,\r\n  GET_PREVIOUS_PRICE,\r\n  UPDATE_PRODUCT_FEATURES,\r\n  SET_COLOR_OPTIONS,\r\n  SET_SIZE_OPTIONS,\r\n  RESET_MODAL_STATUS,\r\n  RESET_PRODUCT_FORM,\r\n  SET_ERROR_MSG,\r\n  GENERATE_NEW_ITEM_NO,\r\n  FETCH_NEW_PRODUCT_REQUESTED,\r\n  FETCH_NEW_PRODUCT_SUCCEEDED,\r\n  FETCH_NEW_PRODUCT_FAILED,\r\n  FETCH_NEW_PRODUCT_PHOTOS_SUCCEEDED,\r\n  FETCH_NEW_PRODUCT_PHOTOS_FAILED,\r\n  COLOR_COLLECTION_UPDATE_MESSAGE,\r\n  SIZE_COLLECTION_UPDATE_MESSAGE\r\n} from \"../../actions/adminDashboard/admProductsActions\";\r\nimport uniqueRandom from \"unique-random\";\r\nconst rand = uniqueRandom(0, 999999);\r\n\r\nconst initialState = {\r\n  itemNo: rand(),\r\n  category: \"\",\r\n  subCategory: \"\",\r\n  furtherSubCategory: \"\",\r\n  productModelName: \"\",\r\n  subCategoryOptions: [],\r\n  furtherSubCategoryOptions: [],\r\n  withdrawnFromSale: false,\r\n  active: true,\r\n  currentPrice: 0,\r\n  previousPrice: 0,\r\n  colorOptions: [],\r\n  sizeOptions: [],\r\n  colorStyles: [],\r\n  productFeatures: [\r\n    {\r\n      color: \"#ffffff\",\r\n      colorName: \"white\",\r\n      imageUrls: [],\r\n      previewImages: [],\r\n      blobUrls: [],\r\n      filesRejected: false,\r\n      sizes: [\r\n        {\r\n          size: \"\",\r\n          quantity: 0\r\n        }\r\n      ]\r\n    }\r\n  ],\r\n  resetModalStatus: false,\r\n  validation: {\r\n    category: \"\",\r\n    subCategory: \"\",\r\n    furtherSubCategory: \"\",\r\n    productModelName: \"\",\r\n    currentPrice: \"\",\r\n    previousPrice: \"\",\r\n    colorDublicate: \"\",\r\n    productFeatures: [\r\n      {\r\n        colorName: \"\",\r\n        previewImages: \"\",\r\n        imageNamesDuplicate: \"\",\r\n        sizes: [\r\n          {\r\n            size: \"\",\r\n            quantity: \"\"\r\n          }\r\n        ],\r\n        sizeDublicate: \"\"\r\n      }\r\n    ]\r\n  },\r\n  fetchingNewProduct: false,\r\n  productMessage: \"\",\r\n  photosMessage: \"\",\r\n  colorCollectionUpdateMessage: \"\",\r\n  sizeCollectionUpdateMessage: \"\"\r\n};\r\n\r\nfunction admProducts(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_CATEGORY_NAME:\r\n      return {\r\n        ...state,\r\n        category: action.payload\r\n      };\r\n    case GET_SUB_CATEGORY_NAME:\r\n      return {\r\n        ...state,\r\n        subCategory: action.payload\r\n      };\r\n    case GET_FURTHER_SUB_CATEGORY_NAME:\r\n      return {\r\n        ...state,\r\n        furtherSubCategory: action.payload\r\n      };\r\n    case SET_SUBCATEGORY_OPTIONS:\r\n      return {\r\n        ...state,\r\n        subCategoryOptions: action.payload\r\n      };\r\n    case SET_FURTHER_SUBCATEGORY_OPTIONS:\r\n      return {\r\n        ...state,\r\n        furtherSubCategoryOptions: action.payload\r\n      };\r\n    case GET_PRODUCT_MODEL_NAME:\r\n      return {\r\n        ...state,\r\n        productModelName: action.payload\r\n      };\r\n    case GET_WITHDRAWN_STATUS:\r\n      return {\r\n        ...state,\r\n        withdrawnFromSale: action.payload\r\n      };\r\n    case GET_ACTIVE_STATUS:\r\n      return {\r\n        ...state,\r\n        active: action.payload\r\n      };\r\n    case GET_CURRENT_PRICE:\r\n      return {\r\n        ...state,\r\n        currentPrice: action.payload\r\n      };\r\n    case GET_PREVIOUS_PRICE:\r\n      return {\r\n        ...state,\r\n        previousPrice: action.payload\r\n      };\r\n    case SET_COLOR_OPTIONS:\r\n      return {\r\n        ...state,\r\n        colorOptions: action.colors,\r\n        colorStyles: action.colorCollection\r\n      };\r\n    case SET_SIZE_OPTIONS:\r\n      return {\r\n        ...state,\r\n        sizeOptions: action.payload\r\n      };\r\n    case UPDATE_PRODUCT_FEATURES:\r\n      return {\r\n        ...state,\r\n        productFeatures: action.payload\r\n      };\r\n    case RESET_MODAL_STATUS:\r\n      return {\r\n        ...state,\r\n        resetModalStatus: action.payload\r\n      };\r\n    case RESET_PRODUCT_FORM:\r\n      return {\r\n        ...action.payload\r\n      };\r\n    case SET_ERROR_MSG:\r\n      return {\r\n        ...state,\r\n        validation: action.payload\r\n      };\r\n    case GENERATE_NEW_ITEM_NO:\r\n      return {\r\n        ...state,\r\n        itemNo: rand()\r\n      };\r\n    case FETCH_NEW_PRODUCT_REQUESTED:\r\n      return {\r\n        ...state,\r\n        fetchingNewProduct: true\r\n      };\r\n    case FETCH_NEW_PRODUCT_SUCCEEDED:\r\n      return {\r\n        ...state,\r\n        fetchingNewProduct: false,\r\n        productMessage: action.payload\r\n      };\r\n    case FETCH_NEW_PRODUCT_FAILED:\r\n      return {\r\n        ...state,\r\n        fetchingNewProduct: false,\r\n        productMessage: action.payload\r\n      };\r\n    case FETCH_NEW_PRODUCT_PHOTOS_SUCCEEDED:\r\n      return {\r\n        ...state,\r\n        fetchingNewProduct: false,\r\n        photosMessage: action.payload\r\n      };\r\n    case FETCH_NEW_PRODUCT_PHOTOS_FAILED:\r\n      return {\r\n        ...state,\r\n        fetchingNewProduct: false,\r\n        photosMessage: action.payload\r\n      };\r\n    case COLOR_COLLECTION_UPDATE_MESSAGE:\r\n      return {\r\n        ...state,\r\n        colorCollectionUpdateMessage: action.payload\r\n      };\r\n    case SIZE_COLLECTION_UPDATE_MESSAGE:\r\n      return {\r\n        ...state,\r\n        sizeCollectionUpdateMessage: action.payload\r\n      };\r\n    default:\r\n      return { ...state };\r\n  }\r\n}\r\n\r\nexport default admProducts;\r\n","import axios from \"axios\";\r\n\r\nexport const GET_NEW_COLOR_HEX = \"GET_NEW_COLOR_HEX\";\r\nexport const GET_NEW_COLOR_NAME = \"GET_NEW_COLOR_NAME\";\r\nexport const NEW_COLOR_MESSAGE = \"NEW_COLOR_MESSAGE\";\r\nexport const NEW_COLOR_MODAL_STATUS = \"NEW_COLOR_MODAL_STATUS\";\r\n\r\nexport const FETCH_NEW_COLOR_REQUESTED = \"FETCH_NEW_COLOR_REQUESTED\";\r\nexport const FETCH_NEW_COLOR_SUCCEEDED = \"FETCH_NEW_COLOR_SUCCEEDED\";\r\nexport const FETCH_NEW_COLOR_FAILED = \"FETCH_NEW_COLOR_FAILED\";\r\n\r\nexport const FETCH_EXISTING_COLOR_REQUESTED = \"FETCH_EXISTING_COLOR_REQUESTED\";\r\nexport const FETCH_EXISTING_COLOR_SUCCEEDED = \"FETCH_EXISTING_COLOR_SUCCEEDED\";\r\nexport const FETCH_EXISTING_COLOR_FAILED = \"FETCH_EXISTING_COLOR_FAILED\";\r\n\r\n// Handle chosing color in react-color (color-picker)\r\nexport const getNewColorHex = colorPickerObject => dispatch => {\r\n  dispatch({\r\n    type: GET_NEW_COLOR_HEX,\r\n    payload: colorPickerObject.hex\r\n  });\r\n};\r\n\r\n// Handle entering color name into input\r\nexport const getNewColorName = colorName => dispatch => {\r\n  dispatch({\r\n    type: GET_NEW_COLOR_NAME,\r\n    payload: colorName\r\n  });\r\n};\r\n\r\n// Handling situations, when modal window about updating color in DB should be showed\r\nexport const handleNewColorModal = status => dispatch => {\r\n  dispatch({\r\n    type: NEW_COLOR_MODAL_STATUS,\r\n    payload: status\r\n  });\r\n};\r\n\r\n// Function for checking if the color is already exists in DB\r\nexport const checkNewColorInDb = (newColorName, newCssHexCode) => dispatch => {\r\n  // Preloader\r\n  dispatch({\r\n    type: FETCH_NEW_COLOR_REQUESTED,\r\n    payload: true\r\n  });\r\n\r\n  //Request to server\r\n  axios\r\n    .post(\"/filters/colors/check-color\", {\r\n      colorName: newColorName\r\n        .toLowerCase()\r\n        .trim()\r\n        .replace(/\\s\\s+/g, \" \"),\r\n      cssHexCode: newCssHexCode\r\n    })\r\n    .then(colorInfo => {\r\n      if (colorInfo.data.message) {\r\n        // If color exists, show modal about existing color and update / cancel buttons\r\n        dispatch({\r\n          type: NEW_COLOR_MESSAGE,\r\n          newColorMessage: colorInfo.data.message,\r\n          existingColorObject: colorInfo.data.existingColor[0],\r\n          isExistingColorsFetching: false\r\n        });\r\n      } else {\r\n        // If color does not exists, show modal with save / cancel buttons\r\n        dispatch({\r\n          type: NEW_COLOR_MESSAGE,\r\n          newColorMessage: colorInfo.data.message,\r\n          existingColorObject: {},\r\n          isExistingColorsFetching: false\r\n        });\r\n      }\r\n    });\r\n};\r\n\r\n// Update in all products information about colors\r\nexport const updateColorsInAllProducts = (\r\n  newColorName,\r\n  newCssHexCode\r\n) => dispatch => {\r\n  let color = newColorName\r\n    .toLowerCase()\r\n    .trim()\r\n    .replace(/\\s\\s+/g, \" \");\r\n\r\n  let query = {\r\n    colorName: color,\r\n    cssHexCode: newCssHexCode\r\n  };\r\n\r\n  axios\r\n    // Taking product objects as they must be transformed to (pre-update-version)\r\n    .post(\"/colors/get-pre-updated-products\", query)\r\n    .then(preUpdatedProducts => {\r\n      if (preUpdatedProducts.data.message) {\r\n        // Save new product versions to DB (with new colors), requesting to server in loop throwing every product, than must be updated\r\n        for (let product of preUpdatedProducts.data.updatedProducts) {\r\n          axios\r\n            .post(\"/colors/update-colors-in-products\", { product })\r\n            .then(updatedProducts => {\r\n              console.log(updatedProducts);\r\n            });\r\n        }\r\n      }\r\n    });\r\n};\r\n\r\n/*Handling situations, for:\r\n1. If color does-not exist - save new color to DB.\r\n2. If color exists - update existing color in DB and update all products (color in products), callback - callbackUpdateColorsInAllProducts().\r\n*/\r\nexport const addOrUpdateColorInDb = (\r\n  newColorName,\r\n  newCssHexCode,\r\n  callbackGetUpdatedColors,\r\n  callbackGetProductFeatures,\r\n  callbackUpdateColorsInAllProducts\r\n) => dispatch => {\r\n  // Preloader\r\n  dispatch({\r\n    type: FETCH_NEW_COLOR_REQUESTED,\r\n    payload: true\r\n  });\r\n\r\n  // Save/update color\r\n  axios\r\n    .post(\"/filters/colors/add-color\", {\r\n      colorName: newColorName\r\n        .toLowerCase()\r\n        .trim()\r\n        .replace(/\\s\\s+/g, \" \"),\r\n      cssHexCode: newCssHexCode\r\n    })\r\n    .then(color => {\r\n      console.log(color);\r\n      dispatch({\r\n        type: FETCH_NEW_COLOR_SUCCEEDED,\r\n        finalMessage: \"Information in DB successfully updated\",\r\n        newColorObject: color.data,\r\n        newColorModalStatus: false\r\n      });\r\n\r\n      callbackGetUpdatedColors(); // Update block with existing colors at interface\r\n      callbackUpdateColorsInAllProducts(newColorName, newCssHexCode); // Update colors in products\r\n      setTimeout(callbackGetProductFeatures, 2000);\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n      dispatch({\r\n        type: FETCH_NEW_COLOR_FAILED,\r\n        finalMessage: \"An error occured, check DB\",\r\n        newColorModalStatus: false\r\n      });\r\n    });\r\n};\r\n\r\n// Get all existing colors to shoe them in interface\r\nexport const getExistingColorsFromDb = () => dispatch => {\r\n  dispatch({\r\n    type: FETCH_EXISTING_COLOR_REQUESTED\r\n  });\r\n\r\n  axios.get(\"/filters/colors\").then(colors => {\r\n    let colorNameOptions = colors.data.sort((a, b) => {\r\n      if (a.colorName < b.colorName) {\r\n        return -1;\r\n      }\r\n      if (a.colorName > b.colorName) {\r\n        return 1;\r\n      }\r\n      return 0;\r\n    });\r\n\r\n    dispatch({\r\n      type: FETCH_EXISTING_COLOR_SUCCEEDED,\r\n      payload: colorNameOptions\r\n    });\r\n  });\r\n};\r\n","import {\r\n  GET_NEW_COLOR_HEX,\r\n  GET_NEW_COLOR_NAME,\r\n  NEW_COLOR_MODAL_STATUS,\r\n  FETCH_NEW_COLOR_REQUESTED,\r\n  FETCH_NEW_COLOR_SUCCEEDED,\r\n  FETCH_NEW_COLOR_FAILED,\r\n  NEW_COLOR_MESSAGE,\r\n  FETCH_EXISTING_COLOR_REQUESTED,\r\n  FETCH_EXISTING_COLOR_SUCCEEDED\r\n} from \"../../actions/adminDashboard/admColorActions\";\r\n\r\nconst initialState = {\r\n  existingColors: [],\r\n  isExistingColorsFetching: false,\r\n  newColorName: \"\",\r\n  newCssHexCode: \"\",\r\n  newColorMessage: false,\r\n  existingColorObject: {},\r\n  newColorObject: {},\r\n  newColorModalStatus: false,\r\n  finalMessage: \"\",\r\n  isAllColorsFetching: false\r\n};\r\n\r\nfunction admColors(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_NEW_COLOR_HEX:\r\n      return {\r\n        ...state,\r\n        newCssHexCode: action.payload\r\n      };\r\n    case GET_NEW_COLOR_NAME:\r\n      return {\r\n        ...state,\r\n        newColorName: action.payload,\r\n        finalMessage: \"\"\r\n      };\r\n    case NEW_COLOR_MESSAGE:\r\n      return {\r\n        ...state,\r\n        newColorMessage: action.newColorMessage,\r\n        existingColorObject: action.existingColorObject,\r\n        isExistingColorsFetching: action.isExistingColorsFetching\r\n      };\r\n    case NEW_COLOR_MODAL_STATUS:\r\n      return {\r\n        ...state,\r\n        newColorModalStatus: action.payload\r\n      };\r\n    case FETCH_NEW_COLOR_REQUESTED:\r\n      return {\r\n        ...state,\r\n        isExistingColorsFetching: action.payload,\r\n        finalMessage: \"\"\r\n      };\r\n    case FETCH_NEW_COLOR_SUCCEEDED:\r\n      return {\r\n        ...state,\r\n        finalMessage: action.finalMessage,\r\n        newColorObject: action.newColorObject,\r\n        newColorModalStatus: action.newColorModalStatus,\r\n        isExistingColorsFetching: false\r\n      };\r\n    case FETCH_NEW_COLOR_FAILED:\r\n      return {\r\n        ...state,\r\n        finalMessage: action.finalMessage,\r\n        newColorModalStatus: action.newColorModalStatus,\r\n        isExistingColorsFetching: false\r\n      };\r\n    case FETCH_EXISTING_COLOR_REQUESTED:\r\n      return {\r\n        ...state,\r\n        isAllColorsFetching: true\r\n      };\r\n    case FETCH_EXISTING_COLOR_SUCCEEDED:\r\n      return {\r\n        ...state,\r\n        isAllColorsFetching: false,\r\n        existingColors: action.payload\r\n      };\r\n\r\n    default:\r\n      return { ...state };\r\n  }\r\n}\r\n\r\nexport default admColors;\r\n","import axios from \"axios\";\r\n\r\nexport const GET_NEW_SIZE_NAME = \"GET_NEW_SIZE_NAME\";\r\n\r\nexport const FETCH_NEW_SIZE_REQUESTED = \"FETCH_NEW_SIZE_REQUESTED\";\r\nexport const FETCH_NEW_SIZE_SUCCEEDED = \"FETCH_NEW_SIZE_SUCCEEDED\";\r\nexport const FETCH_NEW_SIZE_FAILED = \"FETCH_NEW_SIZE_FAILED\";\r\n\r\nexport const FETCH_EXISTING_SIZE_REQUESTED = \"FETCH_EXISTING_SIZE_REQUESTED\";\r\nexport const FETCH_EXISTING_SIZE_SUCCEEDED = \"FETCH_EXISTING_SIZE_SUCCEEDED\";\r\nexport const FETCH_EXISTING_SIZE_FAILED = \"FETCH_EXISTING_SIZE_FAILED\";\r\n\r\nexport const GET_NUPDATED_SIZE_NAME = \"GET_NUPDATED_SIZE_NAME\";\r\n\r\nexport const FETCH_UPDATING_SIZE_REQUESTED = \"FETCH_UPDATING_SIZE_REQUESTED\";\r\nexport const FETCH_UPDATING_SIZE_SUCCEEDED = \"FETCH_UPDATING_SIZE_SUCCEEDED\";\r\nexport const FETCH_UPDATING_SIZE_FAILED = \"FETCH_UPDATING_SIZE_FAILED\";\r\n\r\n// New size input value\r\nexport const getNewSizeName = sizeName => dispatch => {\r\n  dispatch({\r\n    type: GET_NEW_SIZE_NAME,\r\n    payload: sizeName\r\n  });\r\n};\r\n\r\n//Save new size to DB\r\nexport const saveNewSizeInDb = (sizeName, cbGetExistingSizes) => dispatch => {\r\n  let newSize = sizeName.trim().replace(/\\s\\s+/g, \" \");\r\n  // Preloader\r\n  dispatch({\r\n    type: FETCH_NEW_SIZE_REQUESTED\r\n  });\r\n\r\n  axios\r\n    .post(\"/filters/sizes/check-size\", { newSize: newSize })\r\n    .then(size => {\r\n      // If new size already exists in DB\r\n      if (size.data.message) {\r\n        dispatch({\r\n          type: FETCH_NEW_SIZE_FAILED,\r\n          payload: `Size vith value \"${\r\n            size.data.existingSize.value\r\n          }\" is already exists`\r\n        });\r\n      } else {\r\n        axios\r\n          .post(\"/filters/sizes/add-size\", { value: newSize })\r\n          .then(size => {\r\n            //New size added to DB\r\n            dispatch({\r\n              type: FETCH_NEW_SIZE_SUCCEEDED,\r\n              payload: `Size vith value \"${\r\n                size.data.value\r\n              }\" is successfully added to DB`\r\n            });\r\n\r\n            // Update view of existing sizes after saving new size\r\n            cbGetExistingSizes();\r\n          })\r\n          .catch(error => {\r\n            dispatch({\r\n              type: FETCH_NEW_SIZE_FAILED,\r\n              payload: `An error is occured. Please, check DB.`\r\n            });\r\n          });\r\n      }\r\n    })\r\n    .catch(error => {\r\n      dispatch({\r\n        type: FETCH_NEW_SIZE_FAILED,\r\n        payload: `An error is occured. Please, check DB.`\r\n      });\r\n    });\r\n};\r\n\r\n// Get existing sizes from DB\r\nexport const getExistingSizes = () => dispatch => {\r\n  dispatch({\r\n    type: FETCH_EXISTING_SIZE_REQUESTED\r\n  });\r\n\r\n  axios\r\n    .get(\"/filters/sizes\")\r\n    .then(sizes => {\r\n      let existingSizes = sizes.data.sort((a, b) => {\r\n        if (a.value < b.value) {\r\n          return 1;\r\n        }\r\n        if (a.value > b.value) {\r\n          return -1;\r\n        }\r\n        return 0;\r\n      });\r\n\r\n      let updatingSizes = sizes.data\r\n        .map(size => {\r\n          return {\r\n            _id: size._id,\r\n            value: size.value\r\n          };\r\n        })\r\n        .sort((a, b) => {\r\n          if (a.value < b.value) {\r\n            return 1;\r\n          }\r\n          if (a.value > b.value) {\r\n            return -1;\r\n          }\r\n          return 0;\r\n        });\r\n\r\n      dispatch({\r\n        type: FETCH_EXISTING_SIZE_SUCCEEDED,\r\n        payload: existingSizes,\r\n        updatingSizes: updatingSizes\r\n      });\r\n    })\r\n    .catch(error => {\r\n      dispatch({\r\n        type: FETCH_EXISTING_SIZE_FAILED,\r\n        payload: \"An error occured. Can not receive size-collection from DB.\"\r\n      });\r\n    });\r\n};\r\n\r\n// Updating size inputs\r\nexport const getUpdatedSize = (allSizes, sizeId, updatedSize) => dispatch => {\r\n  let newSizes = allSizes.map(size => {\r\n    if (size._id === sizeId) {\r\n      size.value = updatedSize;\r\n    }\r\n\r\n    return size;\r\n  });\r\n\r\n  dispatch({\r\n    type: GET_NUPDATED_SIZE_NAME,\r\n    payload: newSizes\r\n  });\r\n};\r\n\r\n// Update in all products information about sizes\r\nexport const updateSizesInAllProducts = (\r\n  previousSizeName,\r\n  newSizeValue\r\n) => dispatch => {\r\n  let newSize = newSizeValue.trim().replace(/\\s\\s+/g, \" \");\r\n\r\n  let query = {\r\n    previousSizeName: previousSizeName,\r\n    newSizeName: newSize\r\n  };\r\n\r\n  axios\r\n    // Taking product objects as they must be transformed to (pre-update-version)\r\n    .post(\"/sizes/get-pre-updated-products\", query)\r\n    .then(preUpdatedProducts => {\r\n      if (preUpdatedProducts.data.message) {\r\n        // Save new product versions to DB (with new sizes), requesting to server in loop throwing every product, than must be updated\r\n        for (let product of preUpdatedProducts.data.updatedProducts) {\r\n          axios\r\n            .post(\"/sizes/update-sizes-in-products\", { product })\r\n            .then(updatedProducts => {})\r\n            .catch(error => {\r\n              dispatch({\r\n                type: FETCH_UPDATING_SIZE_FAILED,\r\n                payload: `An error is occured. Please, check DB.`\r\n              });\r\n            });\r\n        }\r\n      }\r\n    });\r\n};\r\n\r\n// Update size in DB\r\nexport const updateSizeInDb = (\r\n  sizeId,\r\n  newSizeValue,\r\n  existingSizes,\r\n  callbackGetExistingSizes,\r\n  callbackUpdateSizesInAllProducts\r\n) => dispatch => {\r\n  let newSize = newSizeValue.trim().replace(/\\s\\s+/g, \" \");\r\n\r\n  let previousSizeName = existingSizes.filter(size => {\r\n    return size._id === sizeId;\r\n  })[0].value;\r\n\r\n  // Preloader\r\n  dispatch({\r\n    type: FETCH_UPDATING_SIZE_REQUESTED,\r\n    payload: newSizeValue\r\n  });\r\n\r\n  axios\r\n    .post(\"/filters/sizes/check-size\", { newSize: newSize })\r\n    .then(size => {\r\n      // If new size already exists in DB\r\n      if (size.data.message) {\r\n        dispatch({\r\n          type: FETCH_UPDATING_SIZE_SUCCEEDED,\r\n          payload: `Size vith value \"${\r\n            size.data.existingSize.value\r\n          }\" is already exists, enter another value`,\r\n          updatedSizeValue: size.data.existingSize.value\r\n        });\r\n      } else {\r\n        axios\r\n          .post(\"/filters/sizes/update-size\", {\r\n            sizeId: sizeId,\r\n            newSize: newSize\r\n          })\r\n          .then(size => {\r\n            //Size updated in DB\r\n            dispatch({\r\n              type: FETCH_UPDATING_SIZE_SUCCEEDED,\r\n              payload: `Size is successfully updated from value \"${previousSizeName}\" to value \"${\r\n                size.data.value\r\n              }\"`,\r\n              updatedSizeValue: size.data.value\r\n            });\r\n\r\n            callbackUpdateSizesInAllProducts(previousSizeName, newSize);\r\n\r\n            setTimeout(callbackGetExistingSizes, 4000);\r\n          })\r\n          .catch(error => {\r\n            dispatch({\r\n              type: FETCH_UPDATING_SIZE_FAILED,\r\n              payload: `An error is occured. Please, check DB.`\r\n            });\r\n          });\r\n      }\r\n    })\r\n    .catch(error => {\r\n      dispatch({\r\n        type: FETCH_UPDATING_SIZE_FAILED,\r\n        payload: `An error is occured. Please, check DB.`\r\n      });\r\n    });\r\n};\r\n","import {\r\n  GET_NEW_SIZE_NAME,\r\n  FETCH_NEW_SIZE_REQUESTED,\r\n  FETCH_NEW_SIZE_SUCCEEDED,\r\n  FETCH_NEW_SIZE_FAILED,\r\n  GET_NUPDATED_SIZE_NAME,\r\n  FETCH_EXISTING_SIZE_REQUESTED,\r\n  FETCH_EXISTING_SIZE_SUCCEEDED,\r\n  FETCH_EXISTING_SIZE_FAILED,\r\n  FETCH_UPDATING_SIZE_REQUESTED,\r\n  FETCH_UPDATING_SIZE_SUCCEEDED,\r\n  FETCH_UPDATING_SIZE_FAILED\r\n} from \"../../actions/adminDashboard/admSizeActions\";\r\n\r\nconst initialState = {\r\n  newSizeName: \"\",\r\n  isNewSizeFetching: false,\r\n  checkNewSizeResult: \"\",\r\n  isExistingSizesFetching: false,\r\n  existingSizes: [],\r\n  updatingSizes: [],\r\n  sizeUpdateResults: \"\",\r\n  isSizeUpdating: false,\r\n  preUpdateValue: \"\",\r\n  updatedSizeValue: \"\",\r\n  errorMsg: \"\",\r\n  fetchExistingSizesMessage: \"\"\r\n};\r\n\r\nfunction admSizes(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_NEW_SIZE_NAME:\r\n      return {\r\n        ...state,\r\n        newSizeName: action.payload\r\n      };\r\n    case FETCH_NEW_SIZE_REQUESTED:\r\n      return {\r\n        ...state,\r\n        isNewSizeFetching: true,\r\n        checkNewSizeResult: \"\"\r\n      };\r\n    case FETCH_NEW_SIZE_SUCCEEDED:\r\n      return {\r\n        ...state,\r\n        isNewSizeFetching: false,\r\n        checkNewSizeResult: action.payload\r\n      };\r\n    case FETCH_NEW_SIZE_FAILED:\r\n      return {\r\n        ...state,\r\n        isNewSizeFetching: false,\r\n        checkNewSizeResult: action.payload\r\n      };\r\n    case FETCH_EXISTING_SIZE_REQUESTED:\r\n      return {\r\n        ...state,\r\n        isExistingSizesFetching: true\r\n      };\r\n    case FETCH_EXISTING_SIZE_SUCCEEDED:\r\n      return {\r\n        ...state,\r\n        isExistingSizesFetching: false,\r\n        existingSizes: action.payload,\r\n        updatingSizes: action.updatingSizes,\r\n        fetchExistingSizesMessage: \"\"\r\n      };\r\n    case FETCH_EXISTING_SIZE_FAILED:\r\n      return {\r\n        ...state,\r\n        isExistingSizesFetching: false,\r\n        fetchExistingSizesMessage: action.payload\r\n      };\r\n    case GET_NUPDATED_SIZE_NAME:\r\n      return {\r\n        ...state,\r\n        updatingSizes: action.payload\r\n      };\r\n    case FETCH_UPDATING_SIZE_REQUESTED:\r\n      return {\r\n        ...state,\r\n        isSizeUpdating: true,\r\n        preUpdateValue: action.payload,\r\n        sizeUpdateResults: \"\",\r\n        errorMsg: \"\",\r\n        updatedSizeValue: \"\"\r\n      };\r\n    case FETCH_UPDATING_SIZE_SUCCEEDED:\r\n      return {\r\n        ...state,\r\n        isSizeUpdating: false,\r\n        sizeUpdateResults: action.payload,\r\n        updatedSizeValue: action.updatedSizeValue,\r\n        preUpdateValue: \"\"\r\n      };\r\n    case FETCH_UPDATING_SIZE_FAILED:\r\n      return {\r\n        ...state,\r\n        isSizeUpdating: false,\r\n        errorMsg: action.payload,\r\n        preUpdateValue: \"\"\r\n      };\r\n\r\n    default:\r\n      return { ...state };\r\n  }\r\n}\r\n\r\nexport default admSizes;\r\n","import { combineReducers } from \"redux\";\r\nimport { reducer as formReducer } from \"redux-form\";\r\nimport login from \"./login\";\r\nimport navMenu from \"./navMenu\";\r\nimport product from \"./product\";\r\nimport filters from \"./filters\";\r\nimport productDetails from \"./productDetails\";\r\nimport categoryCarousel from \"./categoryCarousel\";\r\nimport cart from \"./cart\";\r\nimport addToCart from \"./addToCart\";\r\nimport search from \"./search\";\r\nimport scroll from \"./scroll\";\r\n\r\n//For Admin Dashboard\r\nimport admNavMenu from \"./adminDashboard/admNavMenuStates\";\r\nimport admProducts from \"./adminDashboard/admProductsStates\";\r\nimport admColors from \"./adminDashboard/admColorStates\";\r\nimport admSizes from \"./adminDashboard/admSizeStates\";\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n  login,\r\n  navMenu,\r\n  form: formReducer,\r\n  product,\r\n  categoryCarousel,\r\n  filters,\r\n  productDetails,\r\n  cart,\r\n  addToCart,\r\n  search,\r\n  //For Admin Dashboard\r\n  admNavMenu,\r\n  admProducts,\r\n  admColors,\r\n  admSizes,\r\n    scroll\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport logger from \"redux-logger\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers/index\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store =\r\n  process.env.NODE_ENV === \"development\"\r\n    ? createStore(rootReducer, composeEnhancers(applyMiddleware(thunk, logger)))\r\n    : createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nexport default store;\r\n","import axios from 'axios';\r\n\r\nimport jwt_decode from \"jwt-decode\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\n\r\n\r\nimport {\r\n    CLEAR_CART_ON_LOGOUT, SET_DATA_CART_FROM_DB, CART_FROM_LOCALSTORAGE_TO_DB,\r\n    SET_CART_FROM_LOCALSTORAGE, SET_ID_LOGGED_USER, SET_INVALID_LOGIN, CLOSE_MODAL_UNSUCCESS_ORDER,\r\n    OPEN_MODAL_FINISH_ORDER_AFTER_LOGIN, getCart\r\n} from \"./cart\";\r\nimport store from \"../store\";\r\n\r\n\r\nexport const SET_LOGGED = 'SET_LOGGED';\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const SEND_NEW_USER = 'SEND_NEW_USER';\r\n\r\nexport const OPEN_LOGIN_FORM = 'OPEN_LOGIN_FORM';\r\nexport const CLOSE_LOGIN_FORM = 'CLOSE_LOGIN_FORM';\r\n\r\nexport const OPEN_REG_FORM = 'OPEN_REG_FORM';\r\nexport const CLOSE_REG_FORM = 'CLOSE_REG_FORM';\r\n\r\nexport const OPEN_REG_OK_FORM = 'OPEN_REG_OK_FORM';\r\nexport const CLOSE_REG_OK_FORM = 'CLOSE_REG_OK_FORM';\r\n\r\nexport const OPEN_LOGIN_DETAILS = 'OPEN_LOGIN_DETAILS';\r\nexport const CLOSE_LOGIN_DETAILS = 'CLOSE_LOGIN_DETAILS';\r\n\r\nexport const EXIST_USER = 'EXIST_USER';\r\nexport const PROFILE_EXIST_EMAIL = 'PROFILE_EXIST_EMAIL';\r\n\r\nexport const CORRECT_LOGIN = 'CORRECT_LOGIN';\r\nexport const INCORRECT_LOGIN = 'INCORRECT_LOGIN';\r\n\r\nexport const PROFILE_CORRECT_PERSONAL_CHANGE = 'PROFILE_CORRECT_PERSONAL_CHANGE';\r\n\r\nexport const PROFILE_CORRECT_PASSWORD_CHANGE = 'PROFILE_CORRECT_PASSWORD_CHANGE';\r\nexport const PROFILE_INCORRECT_PASSWORD_CHANGE = 'PROFILE_INCORRECT_PASSWORD_CHANGE';\r\n\r\nexport const RESET_WINDOW_STATUS = 'RESET_WINDOW_STATUS';\r\n\r\nexport const SET_JWT_CURRENT_USER = 'SET_JWT_CURRENT_USER';\r\nexport const LOGOUT_JWT_CURRENT_USER = 'LOGOUT_JWT_CURRENT_USER';\r\n\r\nexport const SAVE_HISTORY_PATH = 'SAVE_HISTORY_PATH';\r\n\r\n\r\nexport function checkLoginCartOnStart() {\r\n    if (localStorage.jwtToken) {\r\n        //Set the auth token header auth\r\n        setAuthToken(localStorage.jwtToken);\r\n        //Decode token and get user info and exp\r\n        const decoded = jwt_decode(localStorage.jwtToken);\r\n        //Set user ans is isAuthenticated\r\n        store.dispatch(setLoggedUser(decoded._doc));\r\n        store.dispatch({\r\n            type: SET_ID_LOGGED_USER,\r\n            payload: {idUser: decoded._doc._id, mail: decoded._doc.email}\r\n        });\r\n\r\n        // store.dispatch(getCart({idUser: decoded._doc._id}));\r\n        getCart({idUser: decoded._doc._id});\r\n\r\n        //Check for expired token\r\n        const currentTime = Date.now() / 1000;\r\n        if (decoded.exp < currentTime) {\r\n            //Logout user\r\n            store.dispatch(unsetLoggedUser());\r\n            //Clear the curren profile\r\n            // store.dispatch(clearCurrentProfile());\r\n            //Redirect to login\r\n            window.location.href = \"/\";\r\n        }\r\n    } else if (localStorage.savedCart) {\r\n        store.dispatch({\r\n            type: SET_CART_FROM_LOCALSTORAGE,\r\n            payload: {arrLS: JSON.parse(localStorage.savedCart)}\r\n        });\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nfunction checkSavedCart(userId) {\r\n\r\n    if (localStorage.savedCart) {\r\n        let sendObj = {\r\n            userId: userId.idUser,\r\n            arrLS: localStorage.savedCart\r\n        }\r\n\r\n        axios.post('/setSavedCart', sendObj)\r\n            .then(res => res.data)\r\n            .then(data => {\r\n                    if (data.success) {\r\n                        localStorage.removeItem(\"savedCart\");\r\n                        store.dispatch({type: CART_FROM_LOCALSTORAGE_TO_DB, payload: {infoDB: data.item}})\r\n                    }\r\n\r\n                }\r\n            )\r\n\r\n    } else {\r\n        axios.post('/getCart', userId)\r\n            .then(res => res.data)\r\n            .then(data => {\r\n\r\n                    if (data.success) {\r\n                        let readyData = JSON.parse(data.infoDB);\r\n                        // console.log('readyData', readyData)\r\n\r\n                        store.dispatch({type: SET_DATA_CART_FROM_DB, payload: {infoDB: readyData}})\r\n                    }\r\n\r\n                }\r\n            )\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const setLoggedUser = decoded => {\r\n    return {\r\n        type: SET_JWT_CURRENT_USER,\r\n        payload: decoded\r\n    };\r\n};\r\n\r\nexport const unsetLoggedUser = () => dispatch => {\r\n    // Remove the token from local storage\r\n    localStorage.removeItem(\"jwtToken\");\r\n    //Remove auth header for future requests\r\n    setAuthToken(false);\r\n    //Set the current user to an empty object\r\n    // dispatch(setCurrentUser({}));\r\n    dispatch({\r\n        type: LOGOUT_JWT_CURRENT_USER,\r\n    });\r\n    dispatch({\r\n        type: CLEAR_CART_ON_LOGOUT,\r\n    });\r\n\r\n\r\n};\r\n\r\n\r\nexport function goToProfile(history) {\r\n    return dispatch => {\r\n        // console.log('history')\r\n        // console.log(history);\r\n        axios.get('/users/profile')\r\n            .then(res => res.data)\r\n            .then(data => {\r\n                    dispatch({type: CLOSE_LOGIN_DETAILS})\r\n                }\r\n            )\r\n            .catch(err => {\r\n                dispatch({type: CLOSE_LOGIN_DETAILS});\r\n\r\n                history.push(\"/login\")\r\n                // window.location.href = \"/login\";\r\n            })\r\n\r\n    }\r\n}\r\n\r\n\r\nexport function checkLoginBeforeCheckout(loginForm) {\r\n    return dispatch => {\r\n        axios.post('/users/login', loginForm)\r\n            .then(res => res.data)\r\n            .then(data => {\r\n                    if (data.success === false) {\r\n                        dispatch({type: SET_INVALID_LOGIN})\r\n                    } else {\r\n\r\n                        const {token} = data;\r\n                        localStorage.setItem(\"jwtToken\", token);\r\n                        //Set token to Auth header\r\n                        setAuthToken(token);\r\n                        //Decode token to get user data\r\n                        const decoded = jwt_decode(token);\r\n                        //Set current user\r\n                        dispatch(setLoggedUser(decoded._doc));\r\n\r\n                        store.dispatch({\r\n                            type: SET_ID_LOGGED_USER,\r\n                            payload: {idUser: decoded._doc._id, mail: decoded._doc.email}\r\n                        });\r\n\r\n                        checkSavedCart({idUser: decoded._doc._id});\r\n\r\n                        store.dispatch({type: CLOSE_MODAL_UNSUCCESS_ORDER});\r\n\r\n                        store.dispatch({type: OPEN_MODAL_FINISH_ORDER_AFTER_LOGIN});\r\n\r\n\r\n                        // const {token} = data;\r\n                        // localStorage.setItem(\"jwtToken\", token);\r\n                        //Set token to Auth header\r\n                        // setAuthToken(token);\r\n                        //Decode token to get user data\r\n                        // const decoded = jwt_decode(token);\r\n                        //Set current user\r\n                        // dispatch(setLoggedUser(decoded._doc));\r\n\r\n\r\n                        // history.push(link);\r\n                        // if login is succesfull then add and change info to store of redux\r\n                    }\r\n                }\r\n            )\r\n            .catch(err => console.log(err))\r\n    }\r\n}\r\n\r\n\r\nexport function checkRedirectLogin(loginForm, history, link) {\r\n    return dispatch => {\r\n        axios.post('/users/login', loginForm)\r\n            .then(res => res.data)\r\n            .then(data => {\r\n\r\n                    if (data.success === false) {\r\n                        dispatch({type: INCORRECT_LOGIN})\r\n                    } else {\r\n\r\n                        const {token} = data;\r\n                        localStorage.setItem(\"jwtToken\", token);\r\n                        //Set token to Auth header\r\n                        setAuthToken(token);\r\n                        //Decode token to get user data\r\n                        const decoded = jwt_decode(token);\r\n                        //Set current user\r\n                        dispatch(setLoggedUser(decoded._doc));\r\n                        history.push(link);\r\n                        // if login is succesfull then add and change info to store of redux\r\n                    }\r\n                }\r\n            )\r\n            .catch(err => console.log(err))\r\n    }\r\n}\r\n\r\n\r\nexport function checkLogin(loginForm) {\r\n    return dispatch => {\r\n        axios.post('/users/login', loginForm)\r\n            .then(res => res.data)\r\n            .then(data => {\r\n\r\n                    if (data.success === false) {\r\n                        dispatch({type: INCORRECT_LOGIN})\r\n                    } else {\r\n                        const {token} = data;\r\n                        localStorage.setItem(\"jwtToken\", token);\r\n                        //Set token to Auth header\r\n                        setAuthToken(token);\r\n                        //Decode token to get user data\r\n                        const decoded = jwt_decode(token);\r\n                        //Set current user\r\n                        dispatch(setLoggedUser(decoded._doc));\r\n\r\n                        store.dispatch({\r\n                            type: SET_ID_LOGGED_USER,\r\n                            payload: {idUser: decoded._doc._id, mail: decoded._doc.email}\r\n                        });\r\n                        document.body.style.overflow=\"auto\";\r\n                        checkSavedCart({idUser: decoded._doc._id});\r\n\r\n                        // if login is succesfull then add and change info to store of redux\r\n                    }\r\n                }\r\n            )\r\n            .catch(err => console.log(err))\r\n    }\r\n}\r\n\r\n\r\nexport function addNewUser(regForm) {\r\n    return dispatch => {\r\n\r\n        axios.post('/users/register', regForm)\r\n            .then(res => res.data)\r\n            .then(data => {\r\n\r\n                    if (data.result === false) {\r\n                        // if email is already used then show in form Message\r\n                        dispatch({type: EXIST_USER})\r\n                    } else if (data.firstName) {\r\n                        // if registration is successfull - close window\r\n                        dispatch({type: RESET_WINDOW_STATUS})\r\n                        dispatch({type: OPEN_REG_OK_FORM})\r\n                    }\r\n                }\r\n            )\r\n            .catch(err => console.log(err))\r\n    }\r\n}\r\n\r\n\r\nexport function profileChangePersonal(regForm) {\r\n    return dispatch => {\r\n        axios.post('/users/update-profile/personal-info', regForm)\r\n            .then(res => res.data)\r\n            .then(data => {\r\n                    if (data.status === 'exist-email') {\r\n                        // if email is already used then show in form Message\r\n                        dispatch({type: PROFILE_EXIST_EMAIL})\r\n                    } else {\r\n                        // if registration is successfull - close window\r\n                        dispatch({\r\n                            type: PROFILE_CORRECT_PERSONAL_CHANGE,\r\n                            payload: {userinfo: data.userinfo}\r\n                        })\r\n                    }\r\n                }\r\n            )\r\n            .catch(err => console.log(err))\r\n    }\r\n}\r\n\r\n\r\nexport function profileChangePassword(regForm) {\r\n    return dispatch => {\r\n        axios.post('/users/update-profile/password', regForm)\r\n            .then(res => res.data)\r\n            .then(data => {\r\n\r\n                    if (data.status === 'incorrect-password') {\r\n                        // if email is already used then show in form Message\r\n                        dispatch({type: PROFILE_INCORRECT_PASSWORD_CHANGE})\r\n                    } else {\r\n                        // if registration is successfull - close window\r\n                        dispatch({\r\n                            type: PROFILE_CORRECT_PASSWORD_CHANGE,\r\n                        })\r\n                    }\r\n                }\r\n            )\r\n            .catch(err => console.log(err))\r\n    }\r\n}\r\n","export const correctEmail = input => {\r\n  const chkEmail = new RegExp(\r\n    /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n  );\r\n\r\n  return chkEmail.test(input)\r\n    ? undefined\r\n    : `You have to enter correct e-mail (example@com.com)`;\r\n};\r\n\r\nexport const cardNumber = input => {\r\n  const chkCardNumber = new RegExp(/^([0-9]{16})$/);\r\n  return chkCardNumber.test(input)\r\n    ? undefined\r\n    : `Please enter correct card number`;\r\n};\r\n\r\nexport const cvc = input => {\r\n  const cvc = new RegExp(/^([0-9]{3})$/);\r\n  return cvc.test(input) ? undefined : `Please enter correct CVC`;\r\n};\r\n\r\nexport const dateExp = (input, allInputs) => {\r\n  let date = allInputs.expiryMonth + \"/\" + input;\r\n\r\n  console.log(\"date\", date);\r\n\r\n  const dateExp = new RegExp(/^(0[1-9]|1[0-2])\\/([0-9]{4})$/);\r\n  return dateExp.test(date) ? undefined : `Please enter correct date - MM/YYYY`;\r\n};\r\n\r\nexport const requiredInput = input => {\r\n  return input ? undefined : `You have to fill this field`;\r\n};\r\n\r\nexport const matchPasswords = (input, allInputs) => {\r\n  return input === allInputs.newPass\r\n    ? undefined\r\n    : \"Your entered passwords isn't matched\";\r\n};\r\n\r\nexport const matchPasswordsReg = (input, allInputs) => {\r\n  return input === allInputs.password\r\n    ? undefined\r\n    : \"Your entered passwords isn't matched\";\r\n};\r\n","import React, { Fragment } from 'react';\r\n\r\nconst customRequiredInput = (props) => {\r\n    const {input, type, className, classError, placeholder, meta} = props;\r\n\r\n\r\n    // const errorClass = meta.error ? 'section-profile-content-input section-profile-content-input-error' : 'section-profile-content-input'\r\n    return (\r\n        <Fragment>\r\n            <input {...input} type={type} placeholder={placeholder} className={className}/>\r\n            {meta.error && meta.touched && <div className={classError}>{meta.error}</div>}\r\n        </Fragment>\r\n    )\r\n}\r\nexport default customRequiredInput;","import React, {Component} from 'react';\r\nimport {Field, reduxForm} from 'redux-form';\r\nimport {requiredInput} from '../../../validation'\r\nimport customRequiredInput from '../../atomic/customRequiredInput';\r\n\r\nclass FormLogin extends Component {\r\n    render(){\r\n        const {handleSubmit} = this.props;\r\n        return (\r\n            <form onSubmit={handleSubmit} className='login-menu_form' >\r\n\r\n                <div className='field-wrapper' >\r\n                    <label className='login-form-input-title'>E-mail\r\n                    <Field name=\"email\" component={customRequiredInput}\r\n                           className='login-form-input'\r\n                           classError='input-error-message'\r\n                           type=\"text\" placeholder=\"Your email...\"\r\n                           validate={[requiredInput]}\r\n                    />\r\n</label>\r\n                    <label className='login-form-input-title'>Password\r\n                    <Field name=\"password\" component={customRequiredInput}\r\n                           className='login-form-input'\r\n                           classError='input-error-message'\r\n                           type=\"password\" placeholder=\"Your password...\"\r\n                           validate={[requiredInput]}\r\n                    /></label>\r\n                    {/*<p>Forgotten your password?</p>*/}\r\n                </div>\r\n\r\n                <button name='loginSbm' type=\"submit\" className='login-form_btn' label=\"submit\">Log In</button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default reduxForm({form: 'formLogin'})(FormLogin);","import React, {Component} from 'react';\r\n\r\nimport {connect} from \"react-redux\";\r\nimport {checkLogin, CLOSE_LOGIN_FORM, CLOSE_REG_FORM, OPEN_LOGIN_FORM, OPEN_REG_FORM} from \"../../../actions/login\";\r\n\r\nimport FormLogin from './FormLogin'\r\n\r\nimport './LoginForm.scss';\r\n\r\nclass LoginForm extends Component {\r\n\r\n    handleSubmit = (values) => {\r\n\r\n        let sendLogin = {\r\n            email: values.email,\r\n            password: values.password\r\n        };\r\n\r\n        this.props.checkLogin(sendLogin);\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        let classCheckEmail = (this.props.windowsStatus.invalidLogin) ? 'login-menu_error-msg' : 'd-none';\r\n\r\n        return (\r\n\r\n                <div className='login-menu'>\r\n                    <div data-btn=\"btn-login-up-close\" className=\"login-cancel-btn\" onClick={()=> document.body.style.overflow=\"auto\"}>x</div>\r\n                    <h2 className='login-menu_header'>Log in</h2>\r\n                    <p className='login-menu_par'>Please enter your account details</p>\r\n\r\n\r\n                    <div className={classCheckEmail}>\r\n                        Invalid Email or password\r\n                    </div>\r\n                    <FormLogin onSubmit={this.handleSubmit}/>\r\n\r\n                    <div className='registration-area'>\r\n                        <div id='header-from-login-to-reg' data-btn=\"btn-login-down-close\" className='login-form_btn register_btn'>Register Here\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n        );\r\n    };\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        windowsStatus: state.login.windowsStatus,\r\n        login: state.login\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n\r\n        checkLogin: (loginForm) => dispatch(checkLogin(loginForm)),\r\n        openLoginForm: () => {\r\n            dispatch({ type: OPEN_LOGIN_FORM });\r\n        },\r\n        closeLoginForm: () => {\r\n            dispatch({type: CLOSE_LOGIN_FORM})\r\n        },\r\n\r\n        openRegForm: () => {\r\n            dispatch({type: CLOSE_LOGIN_FORM});\r\n            dispatch({type: OPEN_REG_FORM})\r\n        },\r\n        closeRegForm: () => {\r\n            dispatch({type: CLOSE_REG_FORM})\r\n        },\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm)","import React, {Component} from 'react';\r\nimport {Field, reduxForm} from 'redux-form';\r\nimport {requiredInput, correctEmail, matchPasswordsReg} from '../../../validation'\r\nimport customRequiredInput from '../../atomic/customRequiredInput';\r\nimport {connect} from \"react-redux\";\r\n\r\nclass FormRegistration extends Component {\r\n    render() {\r\n        const {handleSubmit} = this.props;\r\n        let classExistEmail = (this.props.windowsStatus.existEmail) ? 'input-error-message' : 'd-none';\r\n        return (\r\n            <form onSubmit={handleSubmit} className='login-menu_form'>\r\n\r\n                <div className='login-menu_form-fields'>\r\n                    <p className='login-form-input-title'>First Name</p>\r\n                    <Field name=\"firstName\" component={customRequiredInput}\r\n                           className='login-form-input'\r\n                           classError='input-error-message'\r\n                           type=\"text\" placeholder=\"Your first name...\"\r\n                           validate={[requiredInput]}\r\n                    />\r\n\r\n                    <p className='login-form-input-title'>Last Name</p>\r\n                    <Field name=\"secondName\" component={customRequiredInput}\r\n                           className='login-form-input'\r\n                           classError='input-error-message'\r\n                           type=\"text\" placeholder=\"Your last name...\"\r\n                           validate={[requiredInput]}\r\n                    />\r\n                    <div className={classExistEmail}>\r\n                        This email is already used\r\n                    </div>\r\n                    <p className='login-form-input-title'>Email Address</p>\r\n                    <Field name=\"email\" component={customRequiredInput}\r\n                           className='login-form-input'\r\n                           classError='input-error-message'\r\n                           type=\"email\" placeholder=\"Your email...\"\r\n                           validate={[requiredInput, correctEmail]}\r\n                    />\r\n                    <p className='login-form-input-title'>Password</p>\r\n                    <Field name=\"password\" component={customRequiredInput}\r\n                           className='login-form-input'\r\n                           classError='input-error-message'\r\n                           type=\"password\" placeholder=\"Your password...\"\r\n                           validate={[requiredInput]}\r\n                    />\r\n                    <p className='login-form-input-title'>Confirm Password</p>\r\n                    <Field name=\"password2\" component={customRequiredInput}\r\n                           className='login-form-input'\r\n                           classError='input-error-message'\r\n                           type=\"password\" placeholder=\"Your password...\"\r\n                           validate={[requiredInput, matchPasswordsReg]}\r\n                    />\r\n\r\n\r\n\r\n                </div>\r\n                <button name='registrationSbm' type=\"submit\" className='login-form_btn'\r\n                        label=\"submit\">Register\r\n                </button>\r\n            </form>\r\n    );\r\n    }\r\n    }\r\n\r\n\r\n    const mapStateToProps = (state) => {\r\n        return {\r\n        windowsStatus: state.login.windowsStatus,\r\n    }\r\n    }\r\n\r\n    FormRegistration = reduxForm({\r\n        form: 'formRegistration'\r\n    })(FormRegistration);\r\n\r\n    export default connect(mapStateToProps)(FormRegistration);","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  addNewUser,\r\n  CLOSE_REG_FORM,\r\n  OPEN_LOGIN_FORM\r\n} from \"../../../actions/login\";\r\n\r\nimport FormRegistration from \"./FormRegistration\";\r\n\r\nimport \"./RegistrationForm.scss\";\r\n\r\nclass RegistrationForm extends Component {\r\n  handleSubmit = values => {\r\n    let newForm = {\r\n      firstName: values.firstName,\r\n      secondName: values.secondName,\r\n      email: values.email,\r\n      password: values.password,\r\n      password2: values.password2\r\n    };\r\n\r\n    this.props.addNewUser(newForm);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n\r\n        <div className=\"login-menu\">\r\n          <div data-btn=\"btn-reg-up-close\" className=\"login-cancel-btn\" onClick={()=> document.body.style.overflow=\"auto\"}>\r\n            x\r\n          </div>\r\n          <h2 className=\"login-menu_header\">Registration</h2>\r\n          <FormRegistration onSubmit={this.handleSubmit} />\r\n\r\n          <div className=\"registration-area\">\r\n            <div\r\n              data-btn=\"btn-reg-down-close\"\r\n              className=\"login-form_btn register_btn\"\r\n            >\r\n              Login Here\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    windowsStatus: state.login.windowsStatus\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    closeRegForm: () => {\r\n      dispatch({ type: CLOSE_REG_FORM });\r\n    },\r\n    openLoginForm: () => {\r\n      dispatch({ type: CLOSE_REG_FORM });\r\n      dispatch({ type: OPEN_LOGIN_FORM });\r\n    },\r\n    addNewUser: regForm => dispatch(addNewUser(regForm))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(RegistrationForm);\r\n","import React, {Component} from 'react'\r\n\r\n\r\nclass RegistrationOk extends Component {\r\n\r\n    render() {\r\n\r\n        return (\r\n\r\n                <div className=\"login-menu login-menu-block\">\r\n                    <h2 className=\"login-menu_header\">Successfull registration</h2>\r\n                    <p className=\"login-menu_par\">\r\n                        You were successfully registered on our site. We sent you e-mail with link to verify your account.\r\n                        Please read email and click to link for finish registration.\r\n                    </p>\r\n                    <p className=\"login-menu_par\">\r\n                        Thank you!\r\n                    </p>\r\n\r\n                    <div data-btn=\"btn-reg-ok-down-close\" onClick={()=> document.body.style.overflow=\"auto\"} className='login-form_btn register_btn'>Ok\r\n                    </div>\r\n                </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default RegistrationOk","// @flow\r\n\r\nimport * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  focusSearchInput,\r\n  validateSearchValue,\r\n  clearSearchInput,\r\n  search\r\n} from \"../../actions/search\";\r\n\r\nimport \"./search.scss\";\r\n\r\ntype Props = {\r\n  validateSearchValue: Function,\r\n  focusSearchInput: Function,\r\n  products: Array<Object>,\r\n  isSearchFetching: boolean,\r\n  nonValid: boolean,\r\n  clearSearchInput: Function,\r\n  searchString: Function,\r\n  search: Function,\r\n  focus: Function\r\n};\r\n\r\nclass Search extends React.Component<Props> {\r\n  render() {\r\n    const {\r\n      search,\r\n      searchString,\r\n      focus,\r\n      clearSearchInput,\r\n      nonValid,\r\n      isSearchFetching,\r\n      products,\r\n      focusSearchInput,\r\n      validateSearchValue\r\n    } = this.props;\r\n\r\n    return (\r\n      <div className=\"search-input-wrapper\">\r\n        <div className=\"search-input\">\r\n          <span className=\"clearable\">\r\n            <input\r\n              type=\"text\"\r\n              style={focus ? { width: \"420px\" } : { width: \"185px\" }}\r\n              className=\"main-search\"\r\n              name=\"search\"\r\n              placeholder=\"Search\"\r\n              value={searchString}\r\n              onChange={e => search(e.target.value)}\r\n              onFocus={focusSearchInput}\r\n              onKeyPress={e => validateSearchValue(e)}\r\n            />\r\n            <i\r\n              className={\r\n                searchString.length > 0\r\n                  ? \"clearable__clear\"\r\n                  : \"clearable__clear-hide\"\r\n              }\r\n              onClick={e => {\r\n                clearSearchInput(e);\r\n                search(\"\");\r\n              }}\r\n            >\r\n              &times;\r\n            </i>\r\n          </span>\r\n          {isSearchFetching ? (\r\n            <div className=\"search-preloader\" />\r\n          ) : (\r\n            <div className=\"search-preloader search-preloader-hide\" />\r\n          )}\r\n        </div>\r\n        {nonValid ? (\r\n          <div className=\"non-valid-search\">\r\n            Symbols \"&amp;/,*$\" etc. are not allowed. Use space instead\r\n          </div>\r\n        ) : products.length < 1 &&\r\n          searchString.length > 1 &&\r\n          !isSearchFetching ? (\r\n          <div className=\"non-valid-search\">\r\n            No products found matching{\" \"}\r\n            <span className=\"match-words\">{searchString}</span>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    searchString: state.search.searchString,\r\n    focus: state.search.focus,\r\n    nonValid: state.search.nonValid,\r\n    isSearchFetching: state.search.isSearchFetching,\r\n    products: state.search.products\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    focusSearchInput,\r\n    validateSearchValue,\r\n    clearSearchInput,\r\n    search\r\n  }\r\n)(Search);\r\n","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {withRouter} from \"react-router-dom\";\r\n\r\nimport LoginForm from \"./LoginForm\";\r\nimport RegistrationForm from \"./RegistrationForm\";\r\nimport RegistrationOk from \"./RegistrationOk\";\r\nimport userLogo from \"./../../img/user-solid.svg\";\r\n\r\nimport {\r\n    OPEN_LOGIN_FORM,\r\n    OPEN_LOGIN_DETAILS,\r\n    CLOSE_LOGIN_DETAILS,\r\n    CLOSE_LOGIN_FORM, CLOSE_REG_FORM, OPEN_REG_FORM,\r\n    LOGOUT_JWT_CURRENT_USER, unsetLoggedUser, goToProfile\r\n} from \"../../actions/login\";\r\n\r\nimport Search from \"../Search\";\r\nimport {faCogs} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport \"./authorization.scss\";\r\n\r\nclass TopBlockAuth extends Component {\r\n\r\n    clickOnLogin = () => {\r\n        document.body.style.overflow = \"hidden\";\r\n        this.props.openLoginForm();\r\n    }\r\n\r\n    clickOnRegistration = () => {\r\n        this.props.openRegForm();\r\n    }\r\n\r\n    handleLoginForm = (e) => {\r\n        if (e.target.dataset.btn !== 'btn-login-up-close') {\r\n            e.stopPropagation();\r\n        }\r\n        if (e.target.dataset.btn === 'btn-login-down-close') {\r\n            this.props.closeLoginForm();\r\n            this.clickOnRegistration();\r\n        }\r\n    }\r\n\r\n    handleRegistrationForm = (e) => {\r\n        if (e.target.dataset.btn !== 'btn-reg-up-close') {\r\n            e.stopPropagation();\r\n        }\r\n        if (e.target.dataset.btn === 'btn-reg-down-close') {\r\n            this.props.closeRegForm();\r\n            this.clickOnLogin();\r\n        }\r\n    }\r\n\r\n    handleRegistrationOk = (e) => {\r\n        if (e.target.dataset.btn !== 'btn-reg-ok-down-close') {\r\n            e.stopPropagation();\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        let isLogged = this.props.login.isLogged ? null : \"d-none\";\r\n        let notLogged = !this.props.login.isLogged ? null : \"d-none\";\r\n        let isCartNotEmpty = this.props.amountCart ? 'product-cart-ico-amount' : \"d-none\";\r\n\r\n        return (\r\n            <div className=\"header-right-block\">\r\n                <Search/>\r\n                <div className=\"main-date\">\r\n                    <div className={notLogged}>\r\n                        <input\r\n                            type=\"button\"\r\n                            className=\"header-top-login-btn\"\r\n                            value=\"Log in\"\r\n                            onClick={() => this.clickOnLogin()}/>\r\n                    </div>\r\n\r\n                    <div className={isLogged}>\r\n                        <div className=\"user-info-mini\">\r\n                            <span className=\"user-name\">\r\n                                {this.props.login.loggedData.firstName}\r\n                            </span>\r\n                            <div className=\"user-avatar-mini\">\r\n                                <img\r\n                                    className=\"user-avatar-mini-img\"\r\n                                    // src=\"/img/profile_logo.png\"\r\n                                    //     src=\"/img/logo-test.png\"\r\n                                    src={userLogo}\r\n                                    alt=\"icon-account\"\r\n                                    onClick={() => this.props.openLoginDetails()}\r\n                                />\r\n\r\n                                <div onClick={this.handleDropDownProfile}>\r\n                                    {this.props.windowsStatus.loginDetails && (\r\n                                        <div className=\"header-dropdown-login-details\">\r\n                                            <NavLink\r\n                                                className=\"header-dropdown-login-details-item\"\r\n                                                to=\"/users/profile/personalContent\"\r\n                                                // onClick={() => this.props.goToProfile(this.props.history)}\r\n                                            >\r\n                                                Profile\r\n                                            </NavLink>\r\n                                            <NavLink\r\n                                                className=\"header-dropdown-login-details-item\"\r\n                                                to=\"/users/profile/ordersHistory\"\r\n                                                // onClick={() => this.props.goToProfile(this.props.history)}\r\n                                            >\r\n                                                My Orders\r\n                                            </NavLink>\r\n                                            <NavLink\r\n                                                className=\"header-dropdown-login-details-item\"\r\n                                                to=\"/\"\r\n                                                onClick={() => this.props.unsetLoggedUser()}\r\n                                            >\r\n                                                Logout\r\n                                            </NavLink>\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <div className=\"product-cart-ico\">\r\n                        <NavLink to=\"/cart\">\r\n                            <img src=\"/img/shopping-cart-solid.svg\" alt=\"icon basket\"/>\r\n                            <p className={isCartNotEmpty}>{this.props.amountCart}</p>\r\n                        </NavLink>\r\n                    </div>\r\n\r\n\r\n                    <div className={`admin-dashboard ${(this.props.login.loggedData.isAdmin) ? null : 'd-none'}`}>\r\n                        <NavLink className=\"admin-dashboard-link\" to=\"/admin/dashboard\">\r\n                            <FontAwesomeIcon icon={faCogs}/>\r\n                        </NavLink>\r\n                    </div>\r\n                </div>\r\n\r\n                <div id=\"header-modal-form\">\r\n\r\n                    {this.props.windowsStatus.formLoginOpen && (\r\n                        <div  className=\"modal-backdrop\">\r\n                            <div onClick={this.handleLoginForm}>\r\n                                <LoginForm/>\r\n                            </div>\r\n                        </div>\r\n\r\n                    )}\r\n\r\n\r\n                    {this.props.windowsStatus.formRegisterOpen && (\r\n                        <div  className=\"modal-backdrop\">\r\n                            <div onClick={this.handleRegistrationForm}>\r\n                                <RegistrationForm/>\r\n                            </div>\r\n                        </div>\r\n\r\n                    )}\r\n\r\n\r\n                    {this.props.windowsStatus.formRegistrationOk && (\r\n                        <div  className=\"modal-backdrop\">\r\n                            <div onClick={this.handleRegistrationOk}>\r\n                                <RegistrationOk/>\r\n                            </div>\r\n                        </div>\r\n\r\n                    )}\r\n\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        windowsStatus: state.login.windowsStatus,\r\n        login: state.login,\r\n        amountCart: state.cart.amountInBasket,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        openLoginForm: () => {\r\n            dispatch({type: OPEN_LOGIN_FORM});\r\n        },\r\n        closeLoginForm: () => {\r\n            dispatch({type: CLOSE_LOGIN_FORM})\r\n        },\r\n        openLoginDetails: () => {\r\n            dispatch({type: OPEN_LOGIN_DETAILS});\r\n        },\r\n        closeLoginDetails: () => {\r\n            dispatch({type: CLOSE_LOGIN_DETAILS});\r\n        },\r\n        openRegForm: () => {\r\n            dispatch({type: CLOSE_LOGIN_FORM});\r\n            dispatch({type: OPEN_REG_FORM})\r\n        },\r\n        closeRegForm: () => {\r\n            dispatch({type: CLOSE_REG_FORM})\r\n        },\r\n        logout: () => {\r\n            dispatch({type: LOGOUT_JWT_CURRENT_USER});\r\n        },\r\n        unsetLoggedUser: () => dispatch(unsetLoggedUser()),\r\n        goToProfile: (history) => dispatch(goToProfile(history))\r\n    };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withRouter(TopBlockAuth));\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  getNavMenuItems,\r\n  openSubMenu,\r\n  closeSubMenu\r\n} from \"../../../actions/navMenuActions\";\r\n\r\nimport {\r\n  selectFilters,\r\n  selectSize,\r\n  clearProductList\r\n} from \"../../../actions/filterActions\";\r\n\r\nimport \"./nav-menu.scss\";\r\n\r\nclass NavMenu extends Component {\r\n  // Calling action-creator for getting from server object with Navigation Menu Items\r\n  componentDidMount() {\r\n    this.props.getNavMenuItems();\r\n  }\r\n\r\n  initiateCategoryFilters = (\r\n    newCategory,\r\n    newSubCategory,\r\n    newFurtherSubCategory\r\n  ) => {\r\n    let { currentFilters } = this.props;\r\n\r\n    this.props.clearProductList();\r\n\r\n    this.props.selectSize(null);\r\n\r\n    this.props.selectFilters(currentFilters, {\r\n      category: newCategory,\r\n      subCategory: newSubCategory,\r\n      furtherSubCategory: newFurtherSubCategory,\r\n      colorName: undefined,\r\n      size: undefined,\r\n      price: { min: 5, max: 1000 },\r\n      pageNo: 1\r\n    });\r\n  };\r\n\r\n  render() {\r\n    // Creating the category list (men, women)\r\n    let menuList = this.props.navMenuItems.map(e => {\r\n      if (e.active) {\r\n        return (\r\n          <li\r\n            className=\"main-menu-item\"\r\n            key={e._id}\r\n            onMouseOver={() => this.props.openSubMenu(e.categoryName)}\r\n            onClick={() => {\r\n              this.initiateCategoryFilters(e.categoryName);\r\n              this.props.closeSubMenu();\r\n            }}\r\n          >\r\n            <Link to={e.categoryUrl} className=\"main-menu-link\">\r\n              {e.categoryName}\r\n            </Link>\r\n          </li>\r\n        );\r\n      }\r\n      return null;\r\n    });\r\n\r\n    // Creating list of subcategories (e.g. clothing) and further subcategories (e.g. shirts, pants)\r\n    let subMenuList = this.props.navMenuItems.map(category => {\r\n      if (category.categoryName === this.props.currentOnMouseOverCategory) {\r\n        return category.subCategoryList.map(subCategory => {\r\n          // further subcategories (e.g. shirts, pants)\r\n          let subfurtherSubCategory = subCategory.furtherSubCategoryList.map(\r\n            furtherSubCategory => {\r\n              if (furtherSubCategory.active) {\r\n                return (\r\n                  <li\r\n                    className=\"sub-menu-category-item\"\r\n                    key={furtherSubCategory._id}\r\n                  >\r\n                    <Link\r\n                      to={furtherSubCategory.furtherSubCategoryUrl}\r\n                      className=\"sub-menu-category-link\"\r\n                      onClick={() => {\r\n                        this.initiateCategoryFilters(\r\n                          category.categoryName,\r\n                          subCategory.subCategoryName,\r\n                          furtherSubCategory.furtherSubCategoryName\r\n                        );\r\n                        this.props.closeSubMenu();\r\n                      }}\r\n                    >\r\n                      {furtherSubCategory.furtherSubCategoryName}\r\n                    </Link>\r\n                  </li>\r\n                );\r\n              }\r\n              return null;\r\n            }\r\n          );\r\n\r\n          // subcategories (e.g. clothing)\r\n          if (subCategory.active) {\r\n            return (\r\n              <div className=\"sub-menu-left-list\" key={subCategory._id}>\r\n                <Link\r\n                  to={subCategory.subCategoryUrl}\r\n                  className=\"sub-menu-left-title\"\r\n                  onClick={() => {\r\n                    this.initiateCategoryFilters(\r\n                      category.categoryName,\r\n                      subCategory.subCategoryName\r\n                    );\r\n                    this.props.closeSubMenu();\r\n                  }}\r\n                >\r\n                  {subCategory.subCategoryName.charAt(0).toUpperCase() +\r\n                    subCategory.subCategoryName.slice(1)}\r\n                </Link>\r\n                <ul className=\"sub-menu-category-list\">\r\n                  {subfurtherSubCategory}\r\n                </ul>\r\n              </div>\r\n            );\r\n          }\r\n          return null;\r\n        });\r\n      }\r\n      return null; // to return a value at the end of arrow function as it is expected\r\n    });\r\n\r\n    let subMenuSection = (\r\n      <section\r\n        className=\"sub-menu-wrapper\"\r\n        onMouseLeave={this.props.closeSubMenu}\r\n      >\r\n        <div className=\"container\">\r\n          <div className=\"sub-menu-wrapper-inner\">\r\n            <div className=\"sub-menu-left\">{subMenuList}</div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n\r\n    let miniPreloader = <div className=\"minipreloader\" />;\r\n\r\n    // Rendering the whole component\r\n    return (\r\n      <>\r\n        <ul className=\"main-menu-list\">\r\n          {this.props.isMenuFetching ? miniPreloader : menuList}\r\n        </ul>\r\n\r\n        {this.props.navMenuWindowStatus ? subMenuSection : null}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    navMenuItems: state.navMenu.navMenuItems,\r\n    isMenuFetching: state.navMenu.isMenuFetching,\r\n    navMenuWindowStatus: state.navMenu.navMenuWindowStatus,\r\n    currentOnMouseOverCategory: state.navMenu.currentOnMouseOverCategory,\r\n    currentFilters: state.filters.selected\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    getNavMenuItems,\r\n    openSubMenu,\r\n    closeSubMenu,\r\n    selectFilters,\r\n    selectSize,\r\n    clearProductList\r\n  }\r\n)(NavMenu);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport TopBlockAuth from \"../TopBlockAuth\";\r\nimport NavMenu from \"./NavMenu\";\r\n\r\nimport \"./header.scss\";\r\n\r\nimport logo from \"../../img/matter.svg\";\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    return (\r\n      <header className=\"main-header\">\r\n        <div className=\"container\">\r\n          <div className=\"header-content\">\r\n            <NavLink to=\"/\" className=\"logo\">\r\n              <img src={logo} alt=\"Matter\" />\r\n            </NavLink>\r\n            <NavMenu />\r\n            <TopBlockAuth />\r\n          </div>\r\n        </div>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport logo from \"../../img/matter-white.svg\";\r\nimport axios from \"axios\";\r\nimport \"./footer.scss\";\r\n\r\nclass Footer extends Component {\r\n  state = {\r\n    content: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    axios.get(`/get-footer`).then(res => {\r\n      this.setState({ content: res.data });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const footerContent = this.state.content.map(elem => {\r\n      const linksList = elem.links.map(link => {\r\n        return (\r\n          <ul className=\"footer-column-list\" key={link.title}>\r\n            <li key={elem._id} className=\"footer-column-item\">\r\n              <NavLink\r\n                to={link.path}\r\n                className=\"footer-column-link\"\r\n                activeClassName=\"footer-column-link\"\r\n              >\r\n                {link.title}\r\n              </NavLink>\r\n            </li>\r\n          </ul>\r\n        );\r\n      });\r\n\r\n      return (\r\n        <div className=\"footer-menu-column\" key={elem._id}>\r\n          <h3 className=\"footer-menu-column-title\">{elem.title}</h3>\r\n          {linksList}\r\n        </div>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <footer className=\"main-footer\">\r\n        <div className=\"container\">\r\n          <div className=\"footer-list\">\r\n            <div className=\"footer-column\">\r\n              <Link to=\"/\" className=\"footer-logo\">\r\n                <img src={logo} alt=\"logo\" />\r\n              </Link>\r\n            </div>\r\n            <div className=\"footer-menu\">{footerContent}</div>\r\n          </div>\r\n        </div>\r\n      </footer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","import React, { Component } from \"react\";\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\nimport { Carousel } from \"react-responsive-carousel\";\r\nimport \"./products-carousel.scss\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nclass ProductsCarousel extends Component {\r\n  state = {\r\n    dbCarousel: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    axios.get(`/carousel`).then(res => {\r\n      this.setState({ dbCarousel: res.data });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let itemsCarousel = this.state.dbCarousel.map(item => {\r\n      return (\r\n        <div id={item.desc} key={item._id} className=\"carousel-item\">\r\n          <img src={item.imageUrl} alt=\"product\" />\r\n          <div className=\"price\">${item.product.previousPrice}</div>\r\n          <div className=\"stock-price\">${item.product.currentPrice}</div>\r\n          <div className=\"info\">{item.product.model}</div>\r\n          <NavLink\r\n            key={item.product._id}\r\n            to={item.product.productUrl}\r\n            className=\"carousel-btn\"\r\n            onClick={() => (this.setState.dbCarousel = [])}\r\n          >\r\n            Show more\r\n          </NavLink>\r\n        </div>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <>\r\n        {itemsCarousel.length < 1 ? null : (\r\n          <Carousel\r\n            className=\"products-carousel\"\r\n            autoPlay={true}\r\n            interval={5000}\r\n            transitionTime={700}\r\n            stopOnHover={true}\r\n            showIndicators={false}\r\n            infiniteLoop={true}\r\n            showStatus={false}\r\n            useKeyboardArrows={true}\r\n          >\r\n            {itemsCarousel}\r\n          </Carousel>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProductsCarousel;\r\n","// @flow\r\n\r\nimport * as React from \"react\";\r\nimport \"./subscribe.scss\";\r\nimport axios from \"axios\";\r\nimport {requiredInput, correctEmail} from '../../validation'\r\n\r\ntype Props = {};\r\n\r\ntype State = {\r\n    mail: string,\r\n    hintMessage: string\r\n};\r\n\r\nclass Subscribe extends React.Component<Props, State> {\r\n    state = {\r\n        mail: \"\",\r\n        hintMessage: \"\"\r\n    };\r\n\r\n    handleChange = (e: Object) => {\r\n        this.setState({mail: e.target.value});\r\n    };\r\n\r\n    sendMail = (e: Object) => {\r\n        e.preventDefault();\r\n        const subMail = {\r\n            mail: this.state.mail,\r\n        };\r\n        axios.post(\"/subscribe\", {subMail})\r\n            .then(res => res.data)\r\n            .then(data => {\r\n                if (data.result === false) {\r\n                    this.setState({hintMessage: 'alreadyUsed'});\r\n                    setTimeout(() => {\r\n                        this.setState({hintMessage: 'clear'})\r\n                    }, 2000)\r\n                } else {\r\n                    this.setState({mail: \"\", hintMessage: 'sendMail'});\r\n                    setTimeout(() => {\r\n                        this.setState({hintMessage: 'clear'})\r\n                    }, 2000)\r\n                }\r\n            });\r\n\r\n        if (this.state.mail === '') {\r\n            this.setState({hintMessage: 'emptyMail'});\r\n            setTimeout(() => {\r\n                this.setState({hintMessage: 'clear'})\r\n            }, 2000)\r\n        }\r\n    };\r\n\r\n    render() {\r\n        let hintMessage;\r\n\r\n        if (this.state.hintMessage === 'clear') {\r\n            hintMessage = '';\r\n        } else if (this.state.hintMessage === 'emptyMail') {\r\n            hintMessage = 'Fill in the input field please!';\r\n        } else if (this.state.hintMessage === 'alreadyUsed') {\r\n            hintMessage = 'You are already subscribed.';\r\n        } else if (this.state.hintMessage === 'sendMail') {\r\n            hintMessage = 'Email has been sent!';\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <section className=\"section-subscribe\">\r\n                    <div className=\"container\">\r\n                        <div className=\"subscribe\">\r\n                            <h2 className=\"subscribe-title\">Subscribe</h2>\r\n                            <div className=\"subscribe-description\">\r\n                                Get the day’s top news stories delivered to your inbox\r\n                            </div>\r\n                            <form onSubmit={this.sendMail} className=\"subscribe-form\">\r\n                                <input\r\n                                    onChange={this.handleChange}\r\n                                    id=\"subscribe-mail\"\r\n                                    type=\"text\"\r\n                                    className=\"subscribe-email\"\r\n                                    placeholder=\"Enter your email here...\"\r\n                                    value={this.state.mail}\r\n                                />\r\n                                <input\r\n                                    id=\"subscribe-btn\"\r\n                                    type=\"submit\"\r\n                                    className=\"subscribe-btn\"\r\n                                    value=\"SUBSCRIBE\"\r\n                                />\r\n                            </form>\r\n                        </div>\r\n                        <p className={this.state.hintMessage === 'sendMail' ? 'sendMail' : 'hintMessage'}>{hintMessage}</p>\r\n                    </div>\r\n                </section>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Subscribe;\r\n","// @flow\r\n\r\nimport * as React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { saveProductDetails } from \"../../actions/product\";\r\n\r\ntype Props = {\r\n  productUrl: string,\r\n  id: string,\r\n  imageUrl: string,\r\n  model: string,\r\n  colorName: string,\r\n  currentPrice: number,\r\n  previousPrice: number,\r\n  saveProductDetails: Function\r\n};\r\n\r\nclass ProductCard extends React.Component<Props> {\r\n  render() {\r\n    let {\r\n      productUrl,\r\n      id,\r\n      imageUrl,\r\n      model,\r\n      colorName,\r\n      currentPrice,\r\n      previousPrice\r\n    } = this.props;\r\n\r\n    model = model\r\n      .split(\" \")\r\n      .map(word => {\r\n        return word.charAt(0).toUpperCase() + word.slice(1);\r\n      })\r\n      .join(\" \");\r\n\r\n    return (\r\n      <NavLink\r\n        to={productUrl}\r\n        key={id}\r\n        className=\"product-item\"\r\n        onClick={() => this.props.saveProductDetails(colorName)}\r\n      >\r\n        <img src={imageUrl} alt={model} className=\"product-img\" />\r\n        <p className=\"product-name\">{`${model} (${colorName})`}</p>\r\n        <p className=\"product-price\">{`$${currentPrice}`}</p>\r\n        {previousPrice ? (\r\n          <span className=\"previous-price\"> {`$${previousPrice}`} </span>\r\n        ) : null}\r\n      </NavLink>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    saveProductDetails: data => dispatch(saveProductDetails(data))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(ProductCard);\r\n","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {getProductPopular} from \"../../actions/product\";\r\nimport \"./ProductListing.scss\";\r\nimport ProductCard from \"../ProductCard\";\r\n\r\n\r\nclass ProductListing extends Component {\r\n    componentDidMount() {\r\n        this.props.getProductPopular();\r\n    }\r\n\r\n    render() {\r\n\r\n        let counterItems = 0;\r\n        let listProduct = [];\r\n        if (this.props.productPopularListing) {\r\n            listProduct = this.props.productPopularListing.map(productItem => {\r\n\r\n                return productItem.productFeatures.map(productFeatures => {\r\n                    counterItems++;\r\n\r\n                    if (counterItems <= this.props.children){\r\n                        return (\r\n                            <ProductCard\r\n                                productUrl={productItem.productUrl}\r\n                                key={productItem._id}\r\n                                imageUrl={productFeatures.imageUrls[0]}\r\n                                model={productItem.model}\r\n                                colorName={productFeatures.colorName}\r\n                                currentPrice={productItem.currentPrice}\r\n                                previousPrice={productItem.previousPrice}\r\n                                currentFilters={productItem}\r\n                            />\r\n                        )}\r\n                    return null;\r\n                })\r\n            })\r\n        }\r\n\r\n        return (\r\n            <div className=\"listing-products\">\r\n                {this.props.isProductPopularListing ? <div>Loading...</div> : listProduct}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        productPopularListing: state.product.productPopularListing,\r\n        isProductPopularListing: state.product.isProductPopularListing\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        // getProductItem: () => dispatch(getProductItem()),\r\n        getProductPopular: () => dispatch(getProductPopular()),\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductListing);\r\n","import React, { Component } from \"react\";\r\n\r\nimport \"./preloader.scss\";\r\n\r\nclass Preloader extends Component {\r\n  render() {\r\n    return <div className=\"universal-preloader\" />;\r\n  }\r\n}\r\n\r\nexport default Preloader;\r\n","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {getCategoryItem} from \"../../actions/categoryCarousel\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Preloader from \"../Preloader\";\r\nimport \"./CategoryCarousel.scss\";\r\n\r\nclass CategoryCarousel extends Component {\r\n    componentDidMount() {\r\n        this.props.getCategoryItem();\r\n    }\r\n\r\n    render() {\r\n        let listCategories = this.props.categoriesList.map(item => {\r\n            return (\r\n                    <NavLink key={item._id} to={item.categoryUrl} className=\"category-item\">\r\n                        <img src={item.categoryImg} alt={item.categoryName} className=\"category-img\"/>\r\n                        <div className=\"category-name\">{item.categoryName}</div>\r\n                        <div className=\"category-link\">shop now</div>\r\n                    </NavLink>\r\n            )\r\n        })\r\n        return (\r\n            <>\r\n                <section className=\"shop-category\">\r\n                    <div className=\"container\">\r\n                        <h2 className=\"category-title\">Most popular categories</h2>\r\n                        <div className=\"category-listing\">\r\n                            {this.props.isCategoriesFetching ? <Preloader/> : listCategories}\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        categoriesList: state.categoryCarousel.categoriesList,\r\n        isCategoriesFetching: state.categoryCarousel.isCategoriesFetching\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {getCategoryItem})(CategoryCarousel);","import React, {Component} from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./ScrollBtn.scss\"\r\n\r\nclass ScrollBtn extends Component {\r\n    state = {\r\n        intervalId: 0\r\n    };\r\n    scrollStep() {\r\n        if (window.pageYOffset === 0) {\r\n            clearInterval(this.state.intervalId);\r\n        }\r\n        window.scroll(0, window.pageYOffset - this.props.scrollStepInPx);\r\n        // window.scroll(0, 0);\r\n    }\r\n    scrollToTop() {\r\n        let intervalId = setInterval(()=> this.scrollStep(), this.props.delayInMs);\r\n        this.setState({\r\n            intervalId: intervalId\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {\r\n                    (this.props.offsetY > 300) ?\r\n                        <button title=\"Back to top\" className=\"scroll\"\r\n                                onClick={() => {\r\n                                    this.scrollToTop();\r\n                                }}>&#8593;\r\n                        </button>\r\n                        : null\r\n                }\r\n\r\n            </>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        offsetY: state.scroll.position\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ScrollBtn)","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport AutosuggestHighlightMatch from \"autosuggest-highlight/match\";\r\nimport AutosuggestHighlightParse from \"autosuggest-highlight/parse\";\r\n\r\nimport { closeSearchResults } from \"../../actions/search\";\r\nimport { getProductDetails } from \"../../actions/productDetails\";\r\nimport { resetColor } from \"../../actions/product\";\r\n\r\nimport \"./searchResultItem.scss\";\r\n\r\nclass SearchResultItem extends Component {\r\n  render() {\r\n    const {\r\n      products,\r\n      searchString,\r\n      closeSearchResults,\r\n      getProductDetails,\r\n      resetColor\r\n    } = this.props;\r\n\r\n    let searchedProductList = products.map(product => {\r\n      let productColors = product.productFeatures.map(color => {\r\n        return (\r\n          <li\r\n            className=\"search-result-item-colors-item\"\r\n            title={color.colorName}\r\n            key={color._id}\r\n            style={{ backgroundColor: color.color }}\r\n          />\r\n        );\r\n      });\r\n\r\n      let productSizes = [];\r\n\r\n      product.productFeatures.forEach(color => {\r\n        color.sizes.forEach(size => {\r\n          if (size.quantity > 0) {\r\n            productSizes.push(size.size);\r\n          }\r\n        });\r\n      });\r\n\r\n      let uniqueProductSizes = [...new Set(productSizes)];\r\n\r\n      // Rendering category matches\r\n      let categoryMatches = AutosuggestHighlightMatch(\r\n        product.category,\r\n        searchString\r\n      );\r\n      let categoryParts = AutosuggestHighlightParse(\r\n        product.category,\r\n        categoryMatches\r\n      );\r\n\r\n      let categoryMatched = categoryParts.map((part, index) => {\r\n        const className = part.highlight ? \"match\" : null;\r\n        return (\r\n          <span className={className} key={index}>\r\n            {part.text}\r\n          </span>\r\n        );\r\n      });\r\n\r\n      // Rendering sub-category matches\r\n      let subCategoryMatches = AutosuggestHighlightMatch(\r\n        product.subCategory,\r\n        searchString\r\n      );\r\n      let subCategoryParts = AutosuggestHighlightParse(\r\n        product.subCategory,\r\n        subCategoryMatches\r\n      );\r\n\r\n      let subCategoryMatched = subCategoryParts.map((part, index) => {\r\n        const className = part.highlight ? \"match\" : null;\r\n        return (\r\n          <span className={className} key={index}>\r\n            {part.text}\r\n          </span>\r\n        );\r\n      });\r\n\r\n      // Rendering further sub-category matches\r\n      let furtherSubCategoryMatches = AutosuggestHighlightMatch(\r\n        product.furtherSubCategory,\r\n        searchString\r\n      );\r\n      let furtherSubCategoryParts = AutosuggestHighlightParse(\r\n        product.furtherSubCategory,\r\n        furtherSubCategoryMatches\r\n      );\r\n\r\n      let furtherSubCategoryMatched = furtherSubCategoryParts.map(\r\n        (part, index) => {\r\n          const className = part.highlight ? \"match\" : \"unmatched-text\";\r\n          return (\r\n            <span className={className} key={index}>\r\n              {part.text}\r\n            </span>\r\n          );\r\n        }\r\n      );\r\n\r\n      // Rendering model name matches\r\n      let model = product.model\r\n        .split(\" \")\r\n        .map(word => {\r\n          return word.charAt(0).toUpperCase() + word.slice(1);\r\n        })\r\n        .join(\" \");\r\n\r\n      let modelMatches = AutosuggestHighlightMatch(model, searchString);\r\n      let modelParts = AutosuggestHighlightParse(model, modelMatches);\r\n\r\n      let modelMatched = modelParts.map((part, index) => {\r\n        const className = part.highlight ? \"match\" : \"unmatched-text\";\r\n        return (\r\n          <span className={className} key={index}>\r\n            {part.text}\r\n          </span>\r\n        );\r\n      });\r\n\r\n      // Rendering itemNo matches\r\n      let itemNoMatches = AutosuggestHighlightMatch(\r\n        product.itemNo,\r\n        searchString\r\n      );\r\n      let itemNoParts = AutosuggestHighlightParse(\r\n        product.itemNo,\r\n        itemNoMatches\r\n      );\r\n\r\n      let itemNoMatched = itemNoParts.map((part, index) => {\r\n        const className = part.highlight ? \"match\" : \"unmatched-text\";\r\n        return (\r\n          <span className={className} key={index}>\r\n            {part.text}\r\n          </span>\r\n        );\r\n      });\r\n\r\n      // Rendering size matches\r\n      let sizeMatches = AutosuggestHighlightMatch(\r\n        uniqueProductSizes.join(\", \"),\r\n        searchString\r\n      );\r\n      let sizeParts = AutosuggestHighlightParse(\r\n        uniqueProductSizes.join(\", \"),\r\n        sizeMatches\r\n      );\r\n\r\n      let sizeMatched = sizeParts.map((part, index) => {\r\n        const className = part.highlight ? \"match\" : \"unmatched-text\";\r\n        return (\r\n          <span className={className} key={index}>\r\n            {part.text}\r\n          </span>\r\n        );\r\n      });\r\n\r\n      return (\r\n        <li\r\n          className=\"search-result-item\"\r\n          key={product._id}\r\n          onClick={closeSearchResults}\r\n        >\r\n          <Link\r\n            to={product.productUrl}\r\n            className=\"search-result-link\"\r\n            onClick={() => {\r\n              getProductDetails({\r\n                category: product.category,\r\n                subCategory: product.subCategory,\r\n                furtherSubCategory: product.furtherSubCategory,\r\n                id: product.itemNo\r\n              });\r\n              resetColor();\r\n            }}\r\n          >\r\n            <div className=\"search-result-item-content\">\r\n              <div className=\"search-result-item-image-wrapper\">\r\n                <img\r\n                  className=\"search-result-item-image\"\r\n                  src={product.productFeatures[0].imageUrls[0]}\r\n                  alt=\"Not available\"\r\n                />\r\n              </div>\r\n              <div className=\"search-result-item-desc\">\r\n                <span className=\"search-result-item-cats\">\r\n                  <span className=\"search-result-item-subheading\">\r\n                    Categories:\r\n                  </span>{\" \"}\r\n                  <span>\r\n                    {categoryMatched} / {subCategoryMatched} / &nbsp;\r\n                    {furtherSubCategoryMatched}\r\n                  </span>\r\n                </span>\r\n                <span className=\"search-result-item-model\">\r\n                  <span className=\"search-result-item-subheading\">\r\n                    Model name:{\" \"}\r\n                  </span>\r\n                  {modelMatched}\r\n                </span>\r\n                <div className=\"search-result-item-colors\">\r\n                  <span className=\"search-result-item-subheading\">Colors:</span>\r\n                  <ul className=\"search-result-item-colors-list\">\r\n                    {productColors}\r\n                  </ul>\r\n                </div>\r\n                <span className=\"search-result-item-sizes\">\r\n                  <span className=\"search-result-item-subheading\">Sizes: </span>{\" \"}\r\n                  <span className=\"search-result-item-sizes-values\">\r\n                    {sizeMatched}\r\n                  </span>\r\n                </span>\r\n              </div>\r\n              <div className=\"search-result-item-price\">\r\n                <span className=\"search-result-item-id\">\r\n                  <span className=\"search-result-item-subheading\">\r\n                    Product ID:{\" \"}\r\n                  </span>{\" \"}\r\n                  <span className=\"search-result-item-id-value\">\r\n                    {itemNoMatched}\r\n                  </span>\r\n                </span>\r\n                <span className=\"search-result-item-subheading\">Price: </span>\r\n                <span className=\"search-result-item-price-current\">\r\n                  {`$${product.currentPrice}`}{\" \"}\r\n                </span>\r\n                {product.previousPrice ? (\r\n                  <span className=\"search-result-item-price-previous\">\r\n                    {`$${product.previousPrice}`}\r\n                  </span>\r\n                ) : (\r\n                  <span className=\"no-discounts\">No discounts</span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </Link>\r\n        </li>\r\n      );\r\n    });\r\n\r\n    return <>{searchedProductList}</>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    products: state.search.products,\r\n    searchString: state.search.searchString,\r\n    closeResults: state.search.closeResults\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { closeSearchResults, getProductDetails, resetColor }\r\n)(SearchResultItem);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport SearchResultItem from \"../SearchResultItem\";\r\n\r\nimport \"./searchDropDownList.scss\";\r\n\r\nclass SearchDropDownList extends Component {\r\n  render() {\r\n    const { products, closeResults } = this.props;\r\n    return (\r\n      <div\r\n        className={\r\n          products.length > 0 && !closeResults\r\n            ? \"search-results-wrapper\"\r\n            : \"search-results-wrapper-hide\"\r\n        }\r\n      >\r\n        <ul className=\"search-results-list\">\r\n          <SearchResultItem />\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    products: state.search.products,\r\n    closeResults: state.search.closeResults\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(SearchDropDownList);\r\n","import React, { Component } from \"react\";\r\nimport ProductsCarousel from \"../ProductsCarousel\";\r\nimport Subscribe from \"../Subscribe\";\r\nimport ProductListing from \"../ProductListing\";\r\nimport CategoryCarousel from \"../CategoryCarousel\";\r\nimport ScrollBtn from \"../ScrollBtn\";\r\nimport \"./MainPage.scss\";\r\n\r\nimport SearchDropDownList from \"../SearchDropDownList\";\r\n\r\nclass MainPage extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n          <ScrollBtn scrollStepInPx=\"100\" delayInMs=\"12\"/>\r\n        <SearchDropDownList />\r\n        <ProductsCarousel />\r\n\r\n        <section className=\"section-listing-products\">\r\n          <div className=\"container\">\r\n            <div className=\"listing listing-main\">\r\n              <h2 className=\"listing-title\">Most popular items</h2>\r\n              <ProductListing children={8} />\r\n            </div>\r\n          </div>\r\n        </section>\r\n        <CategoryCarousel/>\r\n        <Subscribe />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MainPage;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { SET_COLOR, SET_IMG } from \"../../../actions/addToCart\";\r\nimport ReactImageMagnify from \"react-image-magnify\";\r\n\r\nimport \"./photo-gallery.scss\";\r\n\r\nclass PhotoGallery extends Component {\r\n  state = {\r\n    index: 0\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    let urlPhoto = \"\";\r\n    this.props.productFeatures.forEach(elem => {\r\n      if (this.props.activeColor === elem.colorName) {\r\n        urlPhoto = elem.imageUrls[0];\r\n      }\r\n    });\r\n\r\n    this.props.setColorAddCart(this.props.activeColor);\r\n    this.props.setUrlAddCart(urlPhoto);\r\n  }\r\n\r\n  render() {\r\n    let productFeatures = this.props.productFeatures;\r\n    let photoGallery = productFeatures.map(elem => {\r\n      let active = this.props.activeColor === elem.colorName;\r\n      if (active) {\r\n        let array = elem.imageUrls;\r\n        return elem.imageUrls.map(elem => {\r\n          return (\r\n            <div className={`all-photos-item`} key={elem}>\r\n              <img\r\n                src={elem}\r\n                alt={this.props.activeColor}\r\n                onClick={() => {\r\n                  this.setState({\r\n                    index: array.indexOf(elem)\r\n                  });\r\n                }}\r\n              />\r\n            </div>\r\n          );\r\n        });\r\n      }\r\n    });\r\n\r\n    let photoGalleryFiltered = photoGallery.filter(elem => {\r\n      return elem !== undefined;\r\n    })[0];\r\n\r\n    let mainPhotoObj = photoGalleryFiltered\r\n      ? photoGalleryFiltered[this.state.index]\r\n      : null;\r\n\r\n    let mainPhotoSrc = mainPhotoObj ? mainPhotoObj.key : null;\r\n\r\n    return (\r\n      <>\r\n        <div className=\"product-main\">\r\n        <div className=\"all-photos\">{photoGallery}</div>\r\n        <div className=\"photo-main\">\r\n          <ReactImageMagnify\r\n            {...{\r\n              smallImage: {\r\n                alt: \"item\",\r\n                isFluidWidth: true,\r\n                src: mainPhotoSrc\r\n              },\r\n              largeImage: {\r\n                src: mainPhotoSrc,\r\n                width: 1200,\r\n                height: 1800\r\n              }\r\n            }}\r\n          />\r\n        </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {};\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setColorAddCart: color => {\r\n      dispatch({ type: SET_COLOR, payload: { color: color } });\r\n    },\r\n\r\n    setUrlAddCart: url => {\r\n      dispatch({ type: SET_IMG, payload: { url: url } });\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PhotoGallery);\r\n","import React, { Component } from \"react\";\r\nimport \"./product-colors.scss\";\r\n\r\nexport default class ProductColors extends Component {\r\n  render() {\r\n    const colorArray = this.props.colors;\r\n\r\n    const colors = colorArray.map(elem => {\r\n      let activeElement =\r\n        elem.colorName === this.props.activeColor ? \"active\" : \"\";\r\n\r\n      return (\r\n        <li\r\n          key={elem._id}\r\n          className={`${activeElement} color-item`}\r\n          style={{ backgroundColor: elem.color }}\r\n          onClick={() => this.props.changeColor(elem.colorName)}\r\n        />\r\n      );\r\n    });\r\n    return <ul className=\"product-colors\">{colors}</ul>;\r\n  }\r\n}\r\n","// @flow\r\n\r\nimport * as React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {SET_AMOUNT} from \"../../../actions/addToCart\";\r\n\r\nimport \"./product-counter.scss\";\r\n\r\ntype Props = {\r\n    maxCount: number,\r\n    setAmountAddCart: Function,\r\n};\r\n\r\ntype State = {\r\n    value: number,\r\n};\r\n\r\nclass ProductCounter extends React.Component<Props, State> {\r\n    state = {\r\n        value: 1,\r\n    }\r\n\r\n    handleChange = (event: Object) => {\r\n\r\n        this.props.setAmountAddCart(event.target.value);\r\n\r\n        this.setState({value: event.target.value});\r\n    }\r\n\r\n    increaseCount = (maxcount: number) => {\r\n        let existValue = this.state.value;\r\n        if (existValue > (maxcount - 1)) {\r\n            return;\r\n        }\r\n        ++existValue;\r\n        this.props.setAmountAddCart(existValue);\r\n        this.setState({\r\n            value: existValue\r\n        })\r\n    }\r\n\r\n    decreaseCount = () => {\r\n        let existValue = this.state.value;\r\n        if (existValue <= 1) {\r\n            return;\r\n        }\r\n        existValue--;\r\n        this.props.setAmountAddCart(existValue);\r\n        this.setState({\r\n            value: existValue\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        let inputValue = this.state.value;\r\n\r\n        if (inputValue > this.props.maxCount && this.props.maxCount > 0) {\r\n            this.setState({\r\n                value: this.props.maxCount\r\n            })\r\n        }\r\n\r\n        if (typeof inputValue !== 'number') {\r\n            this.setState({\r\n                value: this.props.maxCount\r\n            })\r\n        }\r\n\r\n        return (\r\n            <div className=\"product-counter\">\r\n                <button className=\"product-counter-btn\" onClick={this.decreaseCount}>-</button>\r\n                <input type=\"tel\" className=\"product-counter-value\" value={this.state.value}\r\n                       onChange={this.handleChange} onInput={this.handleChange}/>\r\n                <button className=\"product-counter-btn\" onClick={() => this.increaseCount(this.props.maxCount)}>+\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {};\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        setAmountAddCart: (amount) => {\r\n            dispatch({type: SET_AMOUNT, payload: {amount: amount}})\r\n        },\r\n\r\n    };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ProductCounter);\r\n","// @flow\r\n\r\nimport * as React from \"react\";\r\nimport ProductCounter from \"../../../atomic/ProductCounter\";\r\n\r\nimport {connect} from \"react-redux\";\r\nimport {SET_SIZE} from \"../../../../actions/addToCart\";\r\n\r\nimport \"./product-sizes.scss\";\r\n\r\ntype Props = {\r\n  productFeatures: Array<Object>,\r\n  activeColor: string,\r\n  setSizeAddCart: Function\r\n};\r\n\r\ntype State = {\r\n  productCount: number,\r\n  chosenSize: string\r\n};\r\n\r\nclass ProductSizes extends React.Component<Props, State> {\r\n  state = {\r\n    productCount: 0,\r\n    chosenSize: \"\"\r\n  };\r\n\r\n  choseSizes = (maxcount: number, chosenSize: string) => {\r\n    if (maxcount && chosenSize) {\r\n\r\n      this.props.setSizeAddCart(chosenSize);\r\n\r\n      this.setState({\r\n        productCount: maxcount,\r\n        chosenSize: chosenSize\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let productFeatures = this.props.productFeatures;\r\n\r\n    let sizes = productFeatures.map(elem => {\r\n      if (elem.colorName === this.props.activeColor) {\r\n        return elem.sizes.map(elem => {\r\n          if (Number(elem.quantity) > 0) {\r\n            if (this.state.chosenSize === \"\") {\r\n              this.choseSizes(elem.quantity, elem.size);\r\n            }\r\n            return (\r\n              <li\r\n                key={elem._id}\r\n                className={`${\r\n                  this.state.chosenSize === elem.size ? \"active\" : \"\"\r\n                } size-item`}\r\n                onClick={() => this.choseSizes(elem.quantity, elem.size)}\r\n              >\r\n                {elem.size}\r\n              </li>\r\n            );\r\n          }\r\n          return null;\r\n        });\r\n      }\r\n      return null;\r\n    });\r\n\r\n    return (\r\n      <>\r\n        <p className=\"product-filter\">Size</p>\r\n        <ul className=\"product-sizes\">{sizes}</ul>\r\n        <p className=\"product-filter\">\r\n          Quantity Available: {this.state.productCount}\r\n        </p>\r\n        <ProductCounter maxCount={this.state.productCount} />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {};\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        setSizeAddCart: (size) => {\r\n            dispatch({type: SET_SIZE, payload: {size: size}})\r\n        },\r\n\r\n    };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ProductSizes);","import React, {Component, Fragment} from \"react\";\r\n\r\nimport {connect} from \"react-redux\";\r\nimport {ADD_ITEM_TO_CART} from \"../../../actions/cart\";\r\n\r\nimport \"./btn-add-to-cart.scss\";\r\n\r\nclass BtnAddToCart extends Component {\r\n\r\n    state = {\r\n        clickStatus: false\r\n    };\r\n\r\n    sendToCart = () => {\r\n\r\n        let isExist = 0;\r\n\r\n        this.props.cart.forEach((elem) => {\r\n\r\n            if (elem.id === this.props.infoCart.id && elem.colorName === this.props.infoCart.colorName\r\n                && elem.size === this.props.infoCart.size) {\r\n                isExist = 1;\r\n            }\r\n\r\n        })\r\n\r\n        if (!isExist) {\r\n            this.props.addProductToCart(this.props.infoCart);\r\n        }\r\n\r\n        this.setState({clickStatus: true});\r\n        setTimeout(() => {\r\n            this.setState({clickStatus: false})\r\n        }, 2000)\r\n    }\r\n\r\n\r\n    render() {\r\n        let clickStatusText;\r\n        if (this.state.clickStatus === true) {\r\n            clickStatusText = 'Product has been added'\r\n        } else {\r\n            clickStatusText = ''\r\n        }\r\n\r\n        return (\r\n            <Fragment>\r\n                <input type=\"button\" value=\"Add to cart\" className=\"btn-add-to-cart\" onClick={() => this.sendToCart()} />\r\n                <p className=\"click-status-text\">{clickStatusText}</p>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        infoCart: state.addToCart,\r\n        cart: state.cart.arrayProduct\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        addProductToCart: (item) => {\r\n            dispatch({type: ADD_ITEM_TO_CART, payload: {item: item}})\r\n        },\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BtnAddToCart)\r\n","// @flow\r\nimport * as React from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport ProductColors from \"./ProductColors\";\r\nimport ProductSizes from \"./ProductSizes\";\r\nimport BtnAddToCart from \"../../atomic/BtnAddToCart\";\r\nimport \"./product-info.scss\";\r\n\r\ntype Props = {\r\n  currentPrice: number,\r\n  itemNo: string,\r\n  activeColor: string,\r\n  model: string,\r\n  productFeatures: Array<Object>,\r\n  changeColor: Function\r\n};\r\n\r\nclass ProductInfo extends React.Component<Props> {\r\n  /*  state = {\r\n    id: '5c62e83e12c9d12dbc9ecf16',\r\n    isAvailable: true,\r\n    reasonNotAvailable: '',\r\n    model: 'Light Spring Hat',\r\n    colorName: 'white',\r\n    size: 'm',\r\n    amount: 1,\r\n    price: 28.88,\r\n    priceFormDB: 28.88,\r\n    urlPhoto: \"/img/products/women/accessories/hats/001/ffffff/011.png\"\r\n  } */\r\n\r\n  render() {\r\n    const {\r\n      itemNo,\r\n      currentPrice,\r\n      previousPrice,\r\n      model,\r\n      productFeatures,\r\n      activeColor\r\n    } = {\r\n      ...this.props\r\n    };\r\n\r\n    /*     saveChosenItem () => {\r\n       \r\n    } */\r\n\r\n    return (\r\n      <>\r\n        <Helmet>\r\n          <title>{model}</title>\r\n          <link\r\n            rel=\"shortcut icon\"\r\n            type=\"image/x-icon\"\r\n            href=\"./favicon-matter.ico\"\r\n          />\r\n        </Helmet>\r\n        <div className=\"product-main-info\">\r\n          <h2 className=\"product-title\">{model}</h2>\r\n          <span className=\"product-meta\">Item Id. {itemNo}</span>\r\n          <p className=\"product-price\">${currentPrice}</p>\r\n          {previousPrice ? (\r\n            <p className=\"product-price-previous\">${previousPrice}</p>\r\n          ) : null}\r\n          <p className=\"product-filter\" />\r\n          <ProductColors\r\n            colors={productFeatures}\r\n            activeColor={activeColor}\r\n            changeColor={this.props.changeColor}\r\n          />\r\n          <ProductSizes\r\n            activeColor={activeColor}\r\n            productFeatures={productFeatures}\r\n          />\r\n          <BtnAddToCart />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProductInfo;\r\n","// @flow\r\n\r\nimport * as React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { selectFilters, clearProductList } from \"../../actions/filterActions\";\r\nimport \"./breadcrumbs.scss\";\r\n\r\ntype Props = {\r\n  categoryAway: Object,\r\n  navMenuItems: Array<Object>,\r\n  selectFilters: Object,\r\n  currentFilters: Object,\r\n  modelName: string,\r\n  activeColor: string,\r\n  clearProductList: Function,\r\n  itemNo: number\r\n};\r\n\r\n\r\nclass BreadCrumbs extends React.Component<Props> {\r\n  changeCategoryFilters = (\r\n    newCategory: string,\r\n    newSubCategory: string,\r\n    newFurtherSubCategory: string\r\n  ) => {\r\n    let { currentFilters } = this.props;\r\n        this.props.clearProductList();\r\n\r\n        this.props.clearProductList();\r\n\r\n        this.props.selectFilters(currentFilters, {\r\n            category: newCategory,\r\n            subCategory: newSubCategory,\r\n            furtherSubCategory: newFurtherSubCategory,\r\n            colorName: currentFilters.colorName,\r\n            size: currentFilters.size,\r\n            price: currentFilters.price,\r\n            pageNo: 1\r\n        });\r\n    };\r\n\r\n\r\n  render() {\r\n    let { category, subCategory, furtherSubCategory } = this.props.categoryAway;\r\n    let { navMenuItems } = this.props;\r\n\r\n    let subCategories = navMenuItems.map(cat => {\r\n      if (cat.categoryName === category) {\r\n        return cat.subCategoryList.map(subCat => {\r\n          if (subCat.subCategoryName === subCategory) {\r\n            let furtherSubCatList = subCat.furtherSubCategoryList.map(\r\n              furtherSubCat => {\r\n                if (\r\n                  furtherSubCategory != null ||\r\n                  furtherSubCategory !== undefined\r\n                ) {\r\n                  if (\r\n                    furtherSubCat.furtherSubCategoryName === furtherSubCategory\r\n                  ) {\r\n                    return (\r\n                      <li key={furtherSubCat._id}>\r\n                        <NavLink\r\n                          to={furtherSubCat.furtherSubCategoryUrl}\r\n                          onClick={() =>\r\n                            this.changeCategoryFilters(\r\n                              cat.categoryName,\r\n                              subCat.subCategoryName,\r\n                              furtherSubCat.furtherSubCategoryName\r\n                            )\r\n                          }\r\n                          className=\"breadcrumbs-link\"\r\n                        >\r\n                          {furtherSubCat.furtherSubCategoryName}\r\n                        </NavLink>\r\n                      </li>\r\n                    );\r\n                  }\r\n                  return null;\r\n                }\r\n                return null;\r\n              }\r\n            );\r\n            return (\r\n              <>\r\n                <li key={subCat._id}>\r\n                  <NavLink\r\n                    to={subCat.subCategoryUrl}\r\n                    onClick={() =>\r\n                      this.changeCategoryFilters(\r\n                        cat.categoryName,\r\n                        subCat.subCategoryName\r\n                      )\r\n                    }\r\n                    className=\"breadcrumbs-link\"\r\n                  >\r\n                    {subCat.subCategoryName}\r\n                  </NavLink>\r\n                </li>\r\n                {furtherSubCatList}\r\n              </>\r\n            );\r\n          }\r\n          return null;\r\n        });\r\n      }\r\n      return null;\r\n    });\r\n\r\n    let mainCategory = navMenuItems.map(cat => {\r\n      if (cat.categoryName === category) {\r\n        return (\r\n          <li key={cat._id}>\r\n            <NavLink\r\n              to={cat.categoryUrl}\r\n              className=\"breadcrumbs-link\"\r\n              onClick={() => this.changeCategoryFilters(cat.categoryName)}\r\n            >\r\n              {cat.categoryName}\r\n            </NavLink>\r\n          </li>\r\n        );\r\n      }\r\n      return null;\r\n    });\r\n\r\n    return (\r\n      <section className=\"breadcrumbs-section\">\r\n        <div className=\"container\">\r\n          <ul className=\"breadcrumbs-list\">\r\n            <li key=\"staticHome\">\r\n              <NavLink to=\"/\" className=\"breadcrumbs-link\">\r\n                Home\r\n              </NavLink>\r\n            </li>\r\n            {mainCategory}\r\n            {subCategories}\r\n            {this.props.modelName ? (\r\n              <li key={this.props.itemNo}>\r\n                <NavLink to=\"/\" className=\"breadcrumbs-link\">\r\n                  {this.props.modelName} ({this.props.activeColor})\r\n                </NavLink>\r\n              </li>\r\n            ) : null}\r\n          </ul>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    navMenuItems: state.navMenu.navMenuItems,\r\n    currentFilters: state.filters.selected\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { selectFilters, clearProductList }\r\n)(BreadCrumbs);\r\n","import React, { Component } from \"react\";\r\nimport PhotoGallery from \"./PhotoGallery\";\r\nimport ProductInfo from \"./ProductInfo\";\r\nimport { connect } from \"react-redux\";\r\nimport { getProductDetails } from \"../../actions/productDetails\";\r\nimport { SET_COLOR, SET_IMG } from \"../../actions/addToCart\";\r\n\r\nimport BreadCrumbs from \"../BreadCrumbs\";\r\nimport SearchDropDownList from \"../SearchDropDownList\";\r\nimport ScrollBtn from \"../ScrollBtn\";\r\n\r\nimport \"./product-page.scss\";\r\n\r\nclass ProductPage extends Component {\r\n  state = {\r\n    activeColor: this.props.activeColor,\r\n    productFeatures: [\r\n      {\r\n        color: \"\",\r\n        sizes: []\r\n      }\r\n    ],\r\n    thumbs: true\r\n  };\r\n\r\n  componentDidMount() {\r\n\r\n      window.scroll(0, 0);\r\n    this.props.getProductDetails(this.props.match.params);\r\n\r\n    // console.log('this.state.activeColor', this.state.activeColor)\r\n\r\n    if (this.state.activeColor) {\r\n      let urlPhoto = \"\";\r\n\r\n      this.props.productFeatures.forEach(elem => {\r\n        if (this.state.activeColor === elem.colorName) {\r\n          urlPhoto = elem.imageUrls[0];\r\n        }\r\n      });\r\n      this.props.setUrlAddCart(urlPhoto);\r\n      this.props.setColorAddCart(this.state.activeColor);\r\n    }\r\n  }\r\n\r\n  changeColor = color => {\r\n    let urlPhoto = \"\";\r\n\r\n    this.props.productFeatures.forEach(elem => {\r\n      if (color === elem.colorName) {\r\n        urlPhoto = elem.imageUrls[0];\r\n      }\r\n    });\r\n\r\n    this.props.setUrlAddCart(urlPhoto);\r\n    this.props.setColorAddCart(color);\r\n\r\n    this.setState({ activeColor: color, thumbs: false });\r\n  };\r\n\r\n  setInitialColor = array => {\r\n    return array[0].colorName;\r\n  };\r\n\r\n  render() {\r\n    const { itemNo, currentPrice, previousPrice, model } = {\r\n      ...this.props.productItem.productOpened\r\n    };\r\n    const { productFeatures } = { ...this.props };\r\n    let activeColor = this.state.activeColor;\r\n\r\n    if (activeColor === \"\") {\r\n      activeColor = this.setInitialColor(productFeatures);\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <ScrollBtn scrollStepInPx=\"100\" delayInMs=\"12\"/>\r\n\r\n        <SearchDropDownList />\r\n        <BreadCrumbs\r\n          categoryAway={this.props.match.params}\r\n          modelName={model}\r\n          activeColor={activeColor}\r\n          itemNo={itemNo}\r\n        />\r\n\r\n        <section className=\"product-detail container\">\r\n          <PhotoGallery\r\n            productFeatures={productFeatures}\r\n            activeColor={activeColor}\r\n            thumbs={this.props.thumbs}\r\n            changeColor={this.changeColor}\r\n          />\r\n          <ProductInfo\r\n            productFeatures={productFeatures}\r\n            activeColor={activeColor}\r\n            itemNo={itemNo}\r\n            currentPrice={currentPrice}\r\n            previousPrice={previousPrice}\r\n            model={model}\r\n            changeColor={this.changeColor}\r\n          />\r\n        </section>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    productItem: state.productDetails,\r\n    productFeatures: state.productDetails.productOpened.productFeatures,\r\n    activeColor: state.product.activeColor\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getProductDetails: data => dispatch(getProductDetails(data)),\r\n    // setInitialAddCart: (data) => {dispatch({type: SET_INITIAL_STATE, payload: {data: data}})}\r\n    setColorAddCart: color => {\r\n      dispatch({ type: SET_COLOR, payload: { color: color } });\r\n    },\r\n    setUrlAddCart: url => {\r\n      dispatch({ type: SET_IMG, payload: { url: url } });\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ProductPage);\r\n","import React, { Fragment } from 'react';\r\n\r\nconst customCorrectEmail = (props) => {\r\n    const {input, type, placeholder, meta} = props;\r\n    // const errorClass = meta.error ? 'section-profile-content-input section-profile-content-input-error' : 'section-profile-content-input'\r\n    return (\r\n        <Fragment>\r\n            <input {...input} type={type} placeholder={placeholder} className='section-profile-content-input'/>\r\n            {meta.error && meta.touched && <div className='input-error-message'>{meta.error}</div>}\r\n        </Fragment>\r\n    )\r\n}\r\nexport default customCorrectEmail;","import React, {Component} from 'react';\r\nimport {Field, reduxForm} from 'redux-form';\r\nimport { connect } from 'react-redux';\r\nimport {requiredInput, correctEmail} from '../../../validation'\r\nimport customRequiredInput from '../../atomic/customRequiredInput';\r\nimport customCorrectEmail from '../../atomic/customCorrectEmail';\r\n\r\nclass FormPersonalContent extends Component {\r\n    render(){\r\n        const {handleSubmit, pristine, submitting, invalid} = this.props;\r\n        return (\r\n            <form onSubmit={handleSubmit}>\r\n\r\n                <div className='section-profile-content-label'>\r\n                    First name\r\n                </div>\r\n                <Field name=\"firstName\" component={customRequiredInput}\r\n                       type=\"text\" placeholder=\"Your first name...\"\r\n                       className='section-profile-content-input'\r\n                       classError='input-error-message'\r\n                       validate={[requiredInput]}\r\n                />\r\n                <div className='section-profile-content-label'>\r\n                    Last name\r\n                </div>\r\n                <Field name=\"secondName\" component={customRequiredInput}\r\n                       type=\"text\" placeholder=\"Your second name...\"\r\n                       className='section-profile-content-input'\r\n                       classError='input-error-message'\r\n                       validate={[requiredInput]}\r\n                />\r\n                <div className='section-profile-content-label'>\r\n                    Email address\r\n                </div>\r\n                <Field name=\"email\" component={customCorrectEmail}\r\n                       type=\"text\" placeholder=\"Your e-mail...\"\r\n                       className='section-profile-content-input'\r\n                       classError='input-error-message'\r\n                       validate={[correctEmail]}\r\n                />\r\n\r\n\r\n                <button name='personalSbm' disabled={invalid || pristine || submitting} type=\"submit\" className='section-profile-content-btn' label=\"submit\">Save changes</button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        initialValues: {\r\n            firstName: state.login.loggedData.firstName,\r\n            secondName: state.login.loggedData.secondName,\r\n            email: state.login.loggedData.email,\r\n        }\r\n    }\r\n}\r\n\r\nFormPersonalContent = reduxForm({\r\n    form: 'formProfilePersonal'\r\n})(FormPersonalContent);\r\n\r\n\r\nexport default connect(mapStateToProps)(FormPersonalContent);","import React, {Component, Fragment} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport FormPersonalContent from './FormPersonalContent'\r\n\r\nimport {profileChangePersonal} from \"../../../actions/login\";\r\n\r\n\r\nclass PersonalContent extends Component {\r\n\r\n\r\n    handleSubmit = (values) => {\r\n\r\n        let sendObject = {\r\n            id: this.props.personalInfo.loggedData._id,\r\n            firstName: values.firstName,\r\n            secondName: values.secondName,\r\n            email: values.email,\r\n        };\r\n\r\n        console.log('===============')\r\n        console.log('sendObject', sendObject)\r\n\r\n        this.props.profileChangePersonal(sendObject);\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        let classIsLogged = (this.props.personalInfo.isLogged) ? null : 'd-none';\r\n        let classNotLogged = (this.props.personalInfo.isLogged) ? 'd-none' : null;\r\n\r\n        let isNewEmailUser = (this.props.personalInfo.errorStatus.errorProfileExistEmail) ? 'incorrect-form-save' : 'd-none';\r\n\r\n        return (\r\n            <Fragment>\r\n                <div className={classNotLogged}>\r\n                    Please log in to system\r\n                </div>\r\n\r\n                <div className={classIsLogged}>\r\n\r\n                    <div className={isNewEmailUser}>You new email is already user. Data wasn't save.</div>\r\n                    <FormPersonalContent onSubmit={this.handleSubmit}/>\r\n\r\n                </div>\r\n\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        personalInfo: state.login,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        profileChangePersonal: (newForm) => dispatch(profileChangePersonal(newForm))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PersonalContent)","import React, {Component} from 'react';\r\nimport {Field, reduxForm} from 'redux-form';\r\nimport {requiredInput, matchPasswords} from '../../../validation'\r\nimport customRequiredInput from '../../atomic/customRequiredInput';\r\n\r\nclass FormChangePassword extends Component {\r\n    render(){\r\n        const {handleSubmit, pristine, submitting, invalid} = this.props;\r\n        return (\r\n            <form onSubmit={handleSubmit}>\r\n\r\n                <div className='section-profile-content-label'>\r\n                    Current password\r\n                </div>\r\n                <Field name=\"currPass\" component={customRequiredInput}\r\n                       type=\"password\" placeholder=\"Your current password...\"\r\n                       className='section-profile-content-input'\r\n                       validate={[requiredInput]}\r\n                />\r\n                <div className='section-profile-content-label'>\r\n                    New password\r\n                </div>\r\n                <Field name=\"newPass\" component={customRequiredInput}\r\n                       type=\"password\" placeholder=\"Your new password...\"\r\n                       className='section-profile-content-input'\r\n                       validate={[requiredInput]}\r\n                />\r\n                <div className='section-profile-content-label'>\r\n                    Confirm new password\r\n                </div>\r\n                <Field name=\"newPass2\" component={customRequiredInput}\r\n                       type=\"password\" placeholder=\"Confirm new password...\"\r\n                       className='section-profile-content-input'\r\n                       validate={[requiredInput, matchPasswords]}\r\n                />\r\n\r\n\r\n                <button name='personalSbm' disabled={invalid || pristine || submitting}\r\n                        type=\"submit\" className='section-profile-content-btn' label=\"submit\">Save password</button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default reduxForm({form: 'formChangePassword'})(FormChangePassword);","import React, {Component, Fragment} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport FormChangePassword from './FormChangePassword'\r\nimport {profileChangePassword} from \"../../../actions/login\";\r\n\r\nclass ChangePassword extends Component {\r\n    handleSubmit = (values) => {\r\n\r\n        let sendObject = {\r\n            id: this.props.personalInfo.loggedData.id,\r\n            password: values.currPass,\r\n            newPassword: values.newPass,\r\n        };\r\n\r\n        this.props.profileChangePassword(sendObject);\r\n\r\n    }\r\n\r\n    render () {\r\n\r\n        let classIsLogged = (this.props.personalInfo.isLogged) ? null : 'd-none';\r\n        let classNotLogged = (this.props.personalInfo.isLogged) ? 'd-none' : null;\r\n        let isCorrectPassword = (this.props.personalInfo.errorStatus.errorProfileWrongPassword) ? 'incorrect-form-save' : 'd-none';\r\n\r\n\r\n        return (\r\n            <Fragment>\r\n\r\n                <div className={classNotLogged}>\r\n                    Please log in to system\r\n                </div>\r\n                <div className={classIsLogged}>\r\n\r\n                    <div className={isCorrectPassword}>Please enter a correct old password</div>\r\n                    <FormChangePassword onSubmit={this.handleSubmit}/>\r\n\r\n                </div>\r\n\r\n\r\n            </Fragment>\r\n        )\r\n\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        personalInfo: state.login,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        profileChangePassword: (newForm) => dispatch(profileChangePassword(newForm))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ChangePassword)","import React, {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport axios from \"axios\";\r\n\r\nimport \"./order-history.scss\"\r\n\r\n\r\nclass OrdersHistory extends Component {\r\n\r\n    state = {\r\n        arrOrders: []\r\n    }\r\n\r\n    // componentDidMount () {\r\n    //\r\n    //     if (this.props.idUser) {\r\n    //         axios.post(\"/getOrders\", {idUser: this.props.idUser})\r\n    //             .then(res => res.data)\r\n    //             .then(data => {\r\n    //             if (data.success) {\r\n    //                 this.setState({\r\n    //                     arrOrders: data.data\r\n    //                 });\r\n    //             }\r\n    //         });\r\n    //     }\r\n    // }\r\n\r\n    componentDidUpdate () {\r\n\r\n        if (this.props.idUser) {\r\n            axios.post(\"/getOrders\", {idUser: this.props.idUser})\r\n                .then(res => res.data)\r\n                .then(data => {\r\n                    if (data.success) {\r\n                        this.setState({\r\n                            arrOrders: data.data\r\n                        });\r\n                    }\r\n                });\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        let arrMonths = ['January', \"February\", \"March\", \"April\", \"May\", \"June\",\r\n        \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\r\n\r\n        let arrOrders = this.state.arrOrders.map((elem) => {\r\n\r\n            let dateOrder = new Date(elem.date)\r\n\r\n            let dd = dateOrder.getDate();\r\n            if (dd < 10) dd = '0' + dd;\r\n\r\n            let mm = dateOrder.getMonth();\r\n            mm = arrMonths[mm];\r\n\r\n            let yy = dateOrder.getFullYear();\r\n\r\n            let listProducts = elem.arrayProduct.map((item) => {\r\n\r\n                return (\r\n                    <li className=\"order-history-list-item\">\r\n                       \r\n                            \r\n                                <div className=\"checkout-product-item-description\">\r\n                                    <p className=\"checkout-product-item-model\">\r\n                                        {item.model}\r\n                                    </p>\r\n                                    <p className=\"checkout-product-item-color\">\r\n                                        {`Color - ${item.colorName}`}\r\n                                    </p>\r\n                                    <p className=\"checkout-product-item-size\">\r\n                                        {`Size - ${item.size}`}\r\n                                    </p>\r\n                              \r\n                            \r\n                            <div className=\"checkout-product-item-price\">\r\n                                <p>{`${item.priceFormDB} x ${item.amount}`}</p>\r\n                                <p className=\"checkout-product-item-price-bold\">\r\n                                    {`$${(item.amount * item.priceFormDB).toFixed(2)}`}\r\n                                </p>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </li>\r\n                )\r\n            })\r\n\r\n            return (\r\n                <li className=\"order-history-item\">\r\n                    <p className=\"order-history-title\">\r\n                        Your order - {elem.orderNo}\r\n                    </p>\r\n                    <p className=\"order-history-date\">\r\n                        Date of order - {`${dd} ${mm} ${yy}`}\r\n                    </p>\r\n\r\n                    <ul className=\"order-history-list\">\r\n                        {listProducts}\r\n                    </ul>\r\n                </li>\r\n            )\r\n        });\r\n\r\n        return (\r\n            <ul className=\"section-order-history\">\r\n                {arrOrders}\r\n            </ul>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        idUser: state.login.loggedData._id,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(OrdersHistory)","import React, { Component } from \"react\";\r\nimport { NavLink, Route, withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport {\r\n  goToProfile,\r\n  LOGOUT,\r\n  SAVE_HISTORY_PATH,\r\n  unsetLoggedUser\r\n} from \"../../actions/login\";\r\n\r\nimport PersonalContent from \"./PersonalContent\";\r\nimport ChangePassword from \"./ChangePassword\";\r\nimport OrdersHistory from \"./OrdersHistory\";\r\n\r\nimport \"./Profile.scss\";\r\n\r\nclass Profile extends Component {\r\n  componentDidMount() {\r\n    console.log(\r\n      \"this.props.history.location.pathname\",\r\n      this.props.history.location.pathname\r\n    );\r\n\r\n    this.props.setHistoryLink(this.props.history.location.pathname);\r\n    this.props.goToProfile(this.props.history);\r\n  }\r\n\r\n  render() {\r\n    console.log(\"render profile\");\r\n\r\n    return (\r\n      <>\r\n        <Helmet>\r\n          <title>My account</title>\r\n        </Helmet>\r\n        <section className=\"section-profile\">\r\n          <div className=\"section-profile-title\">\r\n            <div className=\"container\">\r\n              <div className=\"section-profile-title-text\">My account</div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"section-profile-main container\">\r\n            <div className=\"section-profile-navmenu\">\r\n              <NavLink\r\n                to=\"/users/profile/personalContent\"\r\n                className=\"section-profile-navmenu-item\"\r\n                activeClassName=\"section-profile-navmenu-item-active\"\r\n              >\r\n                Personal Information\r\n              </NavLink>\r\n              <NavLink\r\n                to=\"/users/profile/changePassword\"\r\n                className=\"section-profile-navmenu-item\"\r\n                activeClassName=\"section-profile-navmenu-item-active\"\r\n              >\r\n                Change Password\r\n              </NavLink>\r\n              <NavLink\r\n                to=\"/users/profile/ordersHistory\"\r\n                className=\"section-profile-navmenu-item\"\r\n                activeClassName=\"section-profile-navmenu-item-active\"\r\n              >\r\n                My Orders\r\n              </NavLink>\r\n              <NavLink\r\n                to=\"/\"\r\n                className=\"section-profile-navmenu-logout\"\r\n                onClick={() => this.props.unsetLoggedUser()}\r\n              >\r\n                Logout\r\n              </NavLink>\r\n            </div>\r\n\r\n            <div className=\"section-profile-content\">\r\n              <Route\r\n                exact\r\n                path=\"/users/profile/personalContent\"\r\n                component={PersonalContent}\r\n              />\r\n              <Route\r\n                exact\r\n                path=\"/users/profile/changePassword\"\r\n                component={ChangePassword}\r\n              />\r\n              <Route\r\n                exact\r\n                path=\"/users/profile/ordersHistory\"\r\n                component={OrdersHistory}\r\n              />\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    logout: () => {\r\n      dispatch({ type: LOGOUT });\r\n    },\r\n    setHistoryLink: value => {\r\n      dispatch({ type: SAVE_HISTORY_PATH, payload: { link: value } });\r\n    },\r\n    goToProfile: history => dispatch(goToProfile(history)),\r\n    unsetLoggedUser: () => dispatch(unsetLoggedUser())\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(withRouter(Profile));\r\n","// @flow\r\n\r\nimport * as React from \"react\";\r\nimport \"./unsubscribe.scss\";\r\nimport axios from \"axios\";\r\n\r\ntype Props = {};\r\n\r\ntype State = {\r\n  submitted: boolean\r\n};\r\nclass Unsubscribe extends React.Component<Props, State> {\r\n  state = {\r\n    submitted: false\r\n  };\r\n\r\n  unsubscribeMail = (e: Object) => {\r\n    e.preventDefault();\r\n    axios.post(window.location.href);\r\n    this.setState({ submitted: true });\r\n  };\r\n\r\n  render() {\r\n    if (this.state.submitted === true) {\r\n      return (\r\n        <>\r\n          <div className=\"container\">\r\n            <p className=\"unsubscribe-text\">\r\n              You have been unsubscribed from our mailing :(\r\n            </p>\r\n          </div>\r\n        </>\r\n      );\r\n    } else {\r\n      return (\r\n        <>\r\n          <section className=\"section-unsubscribe\">\r\n            <div className=\"container\">\r\n              <div className=\"unsubscribe\">\r\n                <form\r\n                  onSubmit={this.unsubscribeMail}\r\n                  className=\"unsubscribe-form\"\r\n                >\r\n                  <input\r\n                    id=\"unsubscribe-btn\"\r\n                    type=\"submit\"\r\n                    className=\"unsubscribe-form-btn\"\r\n                    value=\"UNSUBSCRIBE\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </section>\r\n        </>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Unsubscribe;\r\n","import React, {Component} from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport {NavLink} from 'react-router-dom';\r\nimport './final-order.scss';\r\n\r\n\r\nclass FinalOrder extends Component {\r\n    render() {\r\n\r\n        let arrayCheckout = [];\r\n        let totalPrice = 0;\r\n        if (this.props.dataBasket.arrayProduct.length > 0) {\r\n            this.props.dataBasket.arrayProduct.forEach((elem) => {\r\n                if (elem.isAvailable === true) {\r\n                    totalPrice += elem.priceFormDB * elem.amount;\r\n                    arrayCheckout.push(\r\n                        <li key={elem.model}>\r\n                            <span className=\"title\">{`${elem.model} x ${elem.amount}`}</span><span\r\n                            className=\"price\">{`$${(elem.priceFormDB * elem.amount).toFixed(2)}`}</span>\r\n                        </li>)\r\n\r\n\r\n                }\r\n\r\n            });\r\n            totalPrice = totalPrice.toFixed(2);\r\n\r\n        }\r\n\r\n\r\n        return (\r\n            <div className=\"basket-final-order\">\r\n                <h3 className=\"basket-final-order-title\">My order</h3>\r\n                <ul className=\"basket-final-order-info\">\r\n                    {arrayCheckout}\r\n                    <li>\r\n                        <span className=\"title\">Total</span><span className=\"price\">{`$${totalPrice}`}</span>\r\n                    </li>\r\n                    <li>\r\n                        <span className=\"title\">Delivery</span><span className=\"price\">Free</span>\r\n                    </li>\r\n                </ul>\r\n\r\n                <NavLink to=\"/checkout\">\r\n\r\n                    <input className=\"btn-add-to-cart\" type=\"button\" value=\"Proceed checkout\" disabled={(this.props.dataBasket.arrayProduct.length === 0)}/>\r\n                </NavLink>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        dataBasket: state.cart,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FinalOrder)","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport FinalOrder from \"./FinalOrder\";\r\n\r\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport {\r\n  CHANGE_ARRAY_AMOUT_OF_ITEM,\r\n  DELETE_ITEM_TO_CART,\r\n  checkAvailableItem\r\n} from \"../../actions/cart\";\r\n\r\nimport \"./cart.scss\";\r\n\r\nclass Cart extends Component {\r\n  state = {\r\n    isBlock: false,\r\n    isRequest: false\r\n  };\r\n\r\n  handleChange = event => {\r\n    let name = Number(event.target.name);\r\n    let value = Number(event.target.value);\r\n\r\n    if (!isNaN(value) && value > 0) {\r\n      let arrayCheckProducts = [];\r\n\r\n      if (this.props.dataBasket.arrayProduct.length > 0) {\r\n        this.props.dataBasket.arrayProduct.forEach((elem, i) => {\r\n          let checkItem = {};\r\n\r\n          if (i === name) {\r\n            checkItem = {\r\n              ...elem,\r\n              amount: value\r\n            };\r\n          } else {\r\n            checkItem = {\r\n              ...elem\r\n            };\r\n          }\r\n\r\n          arrayCheckProducts.push(checkItem);\r\n        });\r\n\r\n        this.props.checkArrayAvailableItems(arrayCheckProducts);\r\n      }\r\n\r\n      this.setState({ [name]: value });\r\n    } else {\r\n      this.setState({ [name]: \"\" });\r\n    }\r\n  };\r\n\r\n  falseBlock = () => {\r\n    this.setState({\r\n      isBlock: false\r\n    });\r\n  };\r\n\r\n  falseRequest = () => {\r\n    let arrayCheckProducts = [];\r\n\r\n    if (this.props.dataBasket.arrayProduct.length > 0) {\r\n      this.props.dataBasket.arrayProduct.forEach((elem, i) => {\r\n        let checkItem = {};\r\n        checkItem = {\r\n          ...elem,\r\n          amount: this.state[i]\r\n        };\r\n        arrayCheckProducts.push(checkItem);\r\n      });\r\n      this.props.checkArrayAvailableItems(arrayCheckProducts);\r\n    }\r\n    this.setState({\r\n      isRequest: false\r\n    });\r\n  };\r\n\r\n  addAmount = index => {\r\n    let newAmount = this.state[index];\r\n    newAmount++;\r\n\r\n    if (!this.state.isBlock) {\r\n      let arrayCheckProducts = [];\r\n\r\n      if (this.props.dataBasket.arrayProduct.length > 0) {\r\n        this.props.dataBasket.arrayProduct.forEach((elem, i) => {\r\n          let checkItem = {};\r\n          if (i === index) {\r\n            checkItem = {\r\n              ...elem,\r\n              amount: newAmount\r\n            };\r\n          } else {\r\n            checkItem = {\r\n              ...elem\r\n            };\r\n          }\r\n\r\n          arrayCheckProducts.push(checkItem);\r\n        });\r\n        this.props.checkArrayAvailableItems(arrayCheckProducts);\r\n      }\r\n\r\n      setTimeout(this.falseBlock, 1500);\r\n      this.setState({\r\n        isBlock: true,\r\n        [index]: newAmount\r\n      });\r\n    } else {\r\n      if (!this.state.isRequest) {\r\n        setTimeout(this.falseRequest, 1500);\r\n        this.setState({\r\n          isRequest: true,\r\n          [index]: newAmount\r\n        });\r\n      } else {\r\n        this.setState({\r\n          [index]: newAmount\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  minusAmount = index => {\r\n    let newAmount = this.state[index];\r\n\r\n    if (newAmount - 1 > 0) {\r\n      newAmount--;\r\n      if (!this.state.isBlock) {\r\n        let arrayCheckProducts = [];\r\n\r\n        if (this.props.dataBasket.arrayProduct.length > 0) {\r\n          this.props.dataBasket.arrayProduct.forEach((elem, i) => {\r\n            let checkItem = {};\r\n            if (i === index) {\r\n              checkItem = {\r\n                ...elem,\r\n                amount: newAmount\r\n              };\r\n            } else {\r\n              checkItem = {\r\n                ...elem\r\n              };\r\n            }\r\n\r\n            arrayCheckProducts.push(checkItem);\r\n          });\r\n          this.props.checkArrayAvailableItems(arrayCheckProducts);\r\n        }\r\n\r\n        setTimeout(this.falseBlock, 1500);\r\n        this.setState({\r\n          isBlock: true,\r\n          [index]: newAmount\r\n        });\r\n      } else {\r\n        if (!this.state.isRequest) {\r\n          setTimeout(this.falseRequest, 1500);\r\n          this.setState({\r\n            isRequest: true,\r\n            [index]: newAmount\r\n          });\r\n        } else {\r\n          this.setState({\r\n            [index]: newAmount\r\n          });\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  deleteItem = index => {\r\n    let arr = this.props.dataBasket.arrayProduct;\r\n    arr.splice(index, 1);\r\n\r\n    this.props.deleteItem(arr);\r\n\r\n    arr.forEach((elem, index) => {\r\n      this.setState({ [index]: elem.amount });\r\n    });\r\n  };\r\n\r\n  componentWillUpdate(nextProps, nextState) {\r\n    let isUpdate = 0;\r\n    let obj = {};\r\n    nextProps.dataBasket.arrayProduct.forEach((elem, index) => {\r\n      if (!this.state[index]) {\r\n        if (this.state[index] !== \"\") {\r\n          obj[index] = elem.amount;\r\n          isUpdate = 1;\r\n        }\r\n      }\r\n    });\r\n\r\n    if (isUpdate) {\r\n      let arrayCheckProducts = [];\r\n\r\n      if (this.props.dataBasket.arrayProduct.length > 0) {\r\n        this.props.dataBasket.arrayProduct.forEach((elem, index) => {\r\n          let checkItem = {\r\n            ...elem,\r\n            amount: obj[index]\r\n          };\r\n          arrayCheckProducts.push(checkItem);\r\n        });\r\n\r\n        this.props.checkArrayAvailableItems(arrayCheckProducts);\r\n      }\r\n      this.setState({ ...obj });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    let obj = {};\r\n\r\n    this.props.dataBasket.arrayProduct.forEach((elem, index) => {\r\n      obj[index] = elem.amount;\r\n    });\r\n    this.setState({ ...obj });\r\n  }\r\n\r\n  render() {\r\n    let productList = this.props.dataBasket.arrayProduct.map((elem, index) => {\r\n      let keyItem = index;\r\n      let amount = this.state[keyItem];\r\n\r\n      let classIsAvailable = elem.isAvailable\r\n        ? \"basket-item-available\"\r\n        : \"d-none\";\r\n      let classIsNotAvailable = !elem.isAvailable\r\n        ? \"basket-item-notavailable\"\r\n        : \"d-none\";\r\n\r\n      let classWasChangedPrice =\r\n        Number(elem.price) !== Number(elem.priceFormDB) ? null : \"d-none\";\r\n      let classWasntChangedPrice =\r\n        Number(elem.price) === Number(elem.priceFormDB) ? null : \"d-none\";\r\n\r\n      return (\r\n        <li key={keyItem + \"indexCart\"} className=\"basket-item\">\r\n          <span\r\n            className=\"basket-item-delete\"\r\n            onClick={() => this.deleteItem(keyItem)}\r\n          >\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </span>\r\n          <div className=\"basket-item-img\">\r\n            <img src={elem.urlPhoto} alt={elem.model} />\r\n          </div>\r\n          <div className=\"basket-item-info\">\r\n            <p className=\"basket-item-title\">{elem.model}</p>\r\n            <p>\r\n              <span className=\"fw-bold\">Color:</span> {elem.colorName}\r\n            </p>\r\n            <p>\r\n              <span className=\"fw-bold\">Size:</span> {elem.size}\r\n            </p>\r\n            <p className={classIsAvailable}>In Stock</p>\r\n          </div>\r\n          <div className=\"product-counter\">\r\n            <button\r\n              className=\"product-counter-btn\"\r\n              onClick={() => this.minusAmount(keyItem)}\r\n            >\r\n              -\r\n            </button>\r\n            <input\r\n              name={keyItem}\r\n              type=\"text\"\r\n              className=\"product-counter-input-value\"\r\n              value={amount}\r\n              onChange={this.handleChange}\r\n            />\r\n            <button\r\n              className=\"product-counter-btn\"\r\n              onClick={() => this.addAmount(keyItem)}\r\n            >\r\n              +\r\n            </button>\r\n          </div>\r\n          <div className=\"basket-item-title price\">\r\n            <div className={classWasChangedPrice}>\r\n              <div className=\"basket-item-old-price\">${elem.price}</div>\r\n\r\n              <div className=\"basket-item-new-price\">${elem.priceFormDB}</div>\r\n            </div>\r\n\r\n            <div className={classWasntChangedPrice}>${elem.price}</div>\r\n          </div>\r\n          <div className={classIsNotAvailable}>\r\n            Out of Stock! {elem.reasonNotAvailable}\r\n            <input\r\n              type=\"button\"\r\n              value={`Accept ${elem.availableAmount} items`}\r\n              onClick={() =>\r\n                this.handleChange({\r\n                  target: {\r\n                    name: keyItem,\r\n                    value: elem.availableAmount\r\n                  }\r\n                })\r\n              }\r\n            />\r\n          </div>\r\n        </li>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <section className=\"basket-page container\">\r\n        <ul className=\"basket-items-list\">\r\n          {productList.length > 0 ? (\r\n            productList\r\n          ) : (\r\n            <div className=\"basket-empty-state\">No goods :(</div>\r\n          )}\r\n        </ul>\r\n\r\n        <FinalOrder />\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    dataBasket: state.cart\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    changeArrayAmount: obj => {\r\n      dispatch({ type: CHANGE_ARRAY_AMOUT_OF_ITEM, payload: { obj: obj } });\r\n    },\r\n\r\n    deleteItem: array => {\r\n      dispatch({ type: DELETE_ITEM_TO_CART, payload: { array: array } });\r\n    },\r\n\r\n    checkArrayAvailableItems: arrData => dispatch(checkAvailableItem(arrData))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Cart);\r\n","import React, {Component} from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport {NavLink} from 'react-router-dom';\r\nimport {sendCheckout} from \"../../../actions/cart\";\r\n\r\n\r\nclass PlaceOrder extends Component {\r\n    render() {\r\n\r\n        let arrayCheckout = [];\r\n        let price = 0;\r\n        if (this.props.dataBasket.arrayProduct.length > 0) {\r\n            this.props.dataBasket.arrayProduct.forEach((elem) => {\r\n                if (elem.isAvailable === true) {\r\n                    price += elem.priceFormDB * elem.amount;\r\n                    arrayCheckout.push(\r\n                        <li>\r\n                            <span className=\"title\">{`${elem.model} x ${elem.amount}`}</span><span\r\n                            className=\"price\">{`$${(elem.priceFormDB * elem.amount).toFixed(2)}`}</span>\r\n                        </li>)\r\n\r\n\r\n                }\r\n\r\n            });\r\n\r\n        }\r\n\r\n        let deliveryPrice = 0;\r\n        this.props.dataBasket.deliveryMethods.forEach((elem) => {\r\n            if (elem.name === this.props.dataBasket.checkedDelivery) {\r\n                deliveryPrice = elem.price;\r\n            }\r\n        })\r\n\r\n        let totalPrice = price + deliveryPrice;\r\n        price = price.toFixed(2);\r\n        totalPrice = totalPrice.toFixed(2);\r\n\r\n        return (\r\n            <div className=\"checkout-final-order\">\r\n                <h3 className=\"basket-final-order-title\">My order</h3>\r\n                <ul className=\"basket-final-order-info\">\r\n                    <li>\r\n                        <span className=\"title\">Price</span><span className=\"price\">{`$${price}`}</span>\r\n                    </li>\r\n                    <li>\r\n                        <span className=\"title\">Delivery</span><span className=\"price\">{`$${deliveryPrice}`}</span>\r\n                    </li>\r\n                    <li>\r\n                        <span className=\"title\">Total</span><span className=\"price\">{`$${totalPrice}`}</span>\r\n                    </li>\r\n                </ul>\r\n                <NavLink  to=\"/checkout\">\r\n                    <input className=\"btn-add-to-cart\" type=\"button\" value=\"Place your order\" disabled={!this.props.enableBtn} onClick={this.props.setFinishedCart}/>\r\n                </NavLink>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        dataBasket: state.cart,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        setFinishedCart: () => dispatch(sendCheckout()),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PlaceOrder)","import React, {Component} from 'react';\r\nimport {Field, reduxForm} from 'redux-form';\r\nimport { connect } from 'react-redux';\r\nimport {requiredInput} from '../../validation'\r\nimport customRequiredInput from '../atomic/customRequiredInput';\r\n\r\nclass FormDeliveryCheckout extends Component {\r\n    render(){\r\n        const {handleSubmit, pristine, submitting, invalid} = this.props;\r\n        return (\r\n            <form onSubmit={handleSubmit}>\r\n                <div className='checkout-d-flex-row'>\r\n                    <div className='checkout-delivery-block'>\r\n                        <div className='checkout-delivery-content-label'>\r\n                            Country\r\n                        </div>\r\n                        <Field name=\"country\" component={customRequiredInput}\r\n                               type=\"text\" placeholder=\"Your country...\"\r\n                               className='checkout-delivery-content-input'\r\n                               classError='checkout-input-error-message'\r\n                               validate={[requiredInput]}\r\n                        />\r\n                    </div>\r\n                    <div  className='checkout-delivery-block'>\r\n                        <div className='checkout-delivery-content-label'>\r\n                            Zipcode\r\n                        </div>\r\n                        <Field name=\"zipcode\" component={customRequiredInput}\r\n                               type=\"text\" placeholder=\"Your zipcode...\"\r\n                               className='checkout-delivery-content-input'\r\n                               classError='checkout-input-error-message'\r\n                               validate={[requiredInput]}\r\n                        />\r\n                    </div>\r\n\r\n                    <div  className='checkout-delivery-block'>\r\n                        <div className='checkout-delivery-content-label'>\r\n                            Phone\r\n                        </div>\r\n                        <Field name=\"phone\" component={customRequiredInput}\r\n                               type=\"text\" placeholder=\"Your phone number...\"\r\n                               className='checkout-delivery-content-input'\r\n                               classError='checkout-input-error-message'\r\n                               validate={[requiredInput]}\r\n                        />\r\n                    </div>\r\n\r\n\r\n                </div>\r\n                <div className='checkout-d-flex-row'>\r\n                    <div  className='checkout-delivery-block'>\r\n                        <div className='checkout-delivery-content-label'>\r\n                            City\r\n                        </div>\r\n                        <Field name=\"city\" component={customRequiredInput}\r\n                               type=\"text\" placeholder=\"Your city...\"\r\n                               className='checkout-delivery-content-input'\r\n                               classError='checkout-input-error-message'\r\n                               validate={[requiredInput]}\r\n                        />\r\n                    </div>\r\n\r\n                    <div  className='checkout-delivery-block-big'>\r\n                        <div className='checkout-delivery-content-label'>\r\n                            Street\r\n                        </div>\r\n                        <Field name=\"street\" component={customRequiredInput}\r\n                               type=\"text\" placeholder=\"Your street...\"\r\n                               className='checkout-delivery-content-input'\r\n                               classError='checkout-input-error-message'\r\n                               validate={[requiredInput]}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n\r\n\r\n\r\n                <button name='checkoutDeliverySbm' disabled={invalid || pristine || submitting} type=\"submit\" className='checkout-next-btn' label=\"submit\">Next step</button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        // initialValues: {\r\n        //     firstName: state.login.loggedData.firstName,\r\n        //     secondName: state.login.loggedData.secondName,\r\n        //     email: state.login.loggedData.email,\r\n        // }\r\n    }\r\n}\r\n\r\nFormDeliveryCheckout = reduxForm({\r\n    form: 'formDeliveryCheckout'\r\n})(FormDeliveryCheckout);\r\n\r\n\r\nexport default connect(mapStateToProps)(FormDeliveryCheckout);","import React, { Component } from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { connect } from \"react-redux\";\r\nimport { requiredInput, cardNumber, cvc, dateExp } from \"../../validation\";\r\nimport customRequiredInput from \"../atomic/customRequiredInput\";\r\n\r\nclass FormPaymentCheckout extends Component {\r\n  render() {\r\n    const { handleSubmit, pristine, submitting, invalid } = this.props;\r\n\r\n    return (\r\n      <form\r\n        onChange={this.props.checkCorrectPayment(\r\n          invalid || pristine || submitting\r\n        )}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        <div className=\"checkout-payment-content-label\">Card number</div>\r\n        <Field\r\n          name=\"cardNumber\"\r\n          component={customRequiredInput}\r\n          type=\"text\"\r\n          placeholder=\"Card number...\"\r\n          className=\"checkout-delivery-content-input\"\r\n          classError=\"input-error-message\"\r\n          validate={[cardNumber]}\r\n        />\r\n        <div className=\"checkout-payment-content-label\">Name on card</div>\r\n        <Field\r\n          name=\"nameOnCard\"\r\n          component={customRequiredInput}\r\n          type=\"text\"\r\n          placeholder=\"Full name on card...\"\r\n          className=\"checkout-delivery-content-input\"\r\n          classError=\"input-error-message\"\r\n          validate={[requiredInput]}\r\n        />\r\n        <div className=\"checkout-payment-below-block\">\r\n          <div className=\"checkout-payment-expdate-block\">\r\n            <div className=\"checkout-payment-content-label\">\r\n              Expiry date MM/YYYY\r\n            </div>\r\n            <div className=\"checkout-payment-exp\">\r\n              <Field\r\n                name=\"expiryMonth\"\r\n                component={customRequiredInput}\r\n                type=\"text\"\r\n                placeholder=\"MM\"\r\n                className=\"checkout-payment-exp-input\"\r\n                // classError='input-error-message'\r\n                // validate={[dateExp]}\r\n              />\r\n              <span>&nbsp;/&nbsp;</span>\r\n              <Field\r\n                name=\"expiryYear\"\r\n                component={customRequiredInput}\r\n                type=\"text\"\r\n                placeholder=\"YYYY\"\r\n                className=\"checkout-payment-exp-input\"\r\n                classError=\"input-error-message-exp\"\r\n                validate={[dateExp]}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"checkout-payment-expdate-block\">\r\n            <div className=\"checkout-payment-content-label\">CVC</div>\r\n            <Field\r\n              name=\"cvcCode\"\r\n              component={customRequiredInput}\r\n              type=\"text\"\r\n              placeholder=\"CVC\"\r\n              className=\"checkout-payment-exp-input\"\r\n              classError=\"input-error-message\"\r\n              validate={[cvc]}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        {/*<button name='checkoutPaymentSbm' disabled={invalid || pristine || submitting} type=\"submit\" className='checkout-next-btn' label=\"submit\">Finish checkout</button>*/}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    // initialValues: {\r\n    //     firstName: state.login.loggedData.firstName,\r\n    //     secondName: state.login.loggedData.secondName,\r\n    //     email: state.login.loggedData.email,\r\n    // }\r\n  };\r\n};\r\n\r\nFormPaymentCheckout = reduxForm({\r\n  form: \"formPaymentCheckout\"\r\n})(FormPaymentCheckout);\r\n\r\nexport default connect(mapStateToProps)(FormPaymentCheckout);\r\n","import React, {Component} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {NavLink} from 'react-router-dom';\r\nimport {CLOSE_MODAL_SUCCESS_ORDER} from \"../../../../actions/cart\";\r\n\r\nimport \"./SuccessOrder.scss\"\r\n\r\n\r\nclass SuccessOrder extends Component {\r\n\r\n    render () {\r\n\r\n        let modalSuccessOrder = (this.props.dataBasket.windows.successOrder) ? 'modal-success-order' : 'd-none';\r\n        let modalSuccessBackdrop = modalSuccessOrder === 'modal-success-order' ? 'modal-backdrop' : null;\r\n        if (modalSuccessBackdrop){\r\n            document.body.style.overflow = \"hidden\"\r\n        }\r\n        return (\r\n            <div className={modalSuccessBackdrop}>\r\n            <div className={modalSuccessOrder}>\r\n                <p className=\"modal-success-order-text\">\r\n                    Your order was successfully placed in our store.\r\n                </p>\r\n                <p className=\"modal-success-order-text\">\r\n                    Details of your order was sent to your email\r\n                </p>\r\n\r\n                <p className=\"modal-success-order-text-number\">\r\n                   ORDER ID: {this.props.dataBasket.orderNo}\r\n                </p>\r\n                <NavLink to=\"/\">\r\n                    <input type=\"button\" onClick={this.props.closeSuccessOrder} value=\"Ok\" className=\"modal-success-order-btn\"/>\r\n                </NavLink>\r\n\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        dataBasket: state.cart,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n\r\n        closeSuccessOrder: () => {\r\n            document.body.style.overflow = \"auto\";\r\n            dispatch({type: CLOSE_MODAL_SUCCESS_ORDER})\r\n        },\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SuccessOrder)","import React, {Component} from 'react';\r\nimport {Field, reduxForm} from 'redux-form';\r\nimport {requiredInput} from '../../validation'\r\nimport customRequiredInput from './customRequiredInput';\r\n\r\nclass FormLogin extends Component {\r\n    render(){\r\n        const {handleSubmit} = this.props;\r\n        return (\r\n            <form onSubmit={handleSubmit} className='login-menu_form' >\r\n\r\n                <div className='field-wrapper' >\r\n                    <label className='login-form-input-title'>E-mail\r\n                    <Field name=\"email\" component={customRequiredInput}\r\n                           className='login-form-input'\r\n                           classError='input-error-message'\r\n                           type=\"text\" placeholder=\"Your email...\"\r\n                           validate={[requiredInput]}\r\n                    />\r\n</label>\r\n                    <p className='login-form-input-title'>Password</p>\r\n                    <Field name=\"password\" component={customRequiredInput}\r\n                           className='login-form-input'\r\n                           classError='input-error-message'\r\n                           type=\"password\" placeholder=\"Your email...\"\r\n                           validate={[requiredInput]}\r\n                    />\r\n                    {/*<p>Forgotten your password?</p>*/}\r\n                </div>\r\n\r\n                <button name='loginSbm' type=\"submit\" className='login-form_btn' label=\"submit\">Log In</button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default reduxForm({form: 'formLogin'})(FormLogin);","import React, {Component} from 'react';\r\nimport {Field, reduxForm} from 'redux-form';\r\nimport {correctEmail} from '../../../../validation'\r\nimport customRequiredInput from '../../../atomic/customRequiredInput';\r\n\r\nclass FormCheckoutByEmail extends Component {\r\n    render(){\r\n        const {handleSubmit, pristine, submitting, invalid} = this.props;\r\n        return (\r\n            <form onSubmit={handleSubmit} className='login-menu_form' >\r\n\r\n                <div className='field-wrapper' >\r\n                    <p className='login-form-input-title'>E-mail</p>\r\n                    <Field name=\"email\" component={customRequiredInput}\r\n                           className='login-form-input'\r\n                           classError='input-error-message'\r\n                           type=\"text\" placeholder=\"Your email...\"\r\n                           validate={[correctEmail]}\r\n                    />\r\n\r\n                    {/*<p>Forgotten your password?</p>*/}\r\n                </div>\r\n\r\n                <button name='loginSbm' disabled={invalid || pristine || submitting} type=\"submit\" className='login-form_btn' label=\"submit\">Send order</button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default reduxForm({form: 'formCheckoutByEmail'})(FormCheckoutByEmail);","import React, {Component} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport FormLogin from \"../../../atomic/FormLogin\";\r\n\r\nimport FormCheckoutByEmail from \"./FormCheckoutByEmail\"\r\n\r\nimport {checkLoginBeforeCheckout} from \"../../../../actions/login\";\r\nimport {CLOSE_MODAL_UNSUCCESS_ORDER, sendOrderByEmail} from \"../../../../actions/cart\";\r\n\r\nimport \"./UnsuccessOrder.scss\"\r\n\r\n\r\nclass UnsuccessOrder extends Component {\r\n\r\n    handleSubmitLogin = (values) => {\r\n\r\n        let sendLogin = {\r\n            email: values.email,\r\n            password: values.password\r\n        };\r\n\r\n        console.log('handleSubmitLogin')\r\n        this.props.checkLoginBeforeCheckout(sendLogin);\r\n\r\n    }\r\n\r\n    handleSubmitEmail = (values) => {\r\n\r\n\r\n        let sendObj = {\r\n            ...this.props.dataBasket,\r\n            userMail: values.email\r\n        }\r\n\r\n        console.log('handleSubmitEmail')\r\n        this.props.sendOrderByEmail(sendObj);\r\n\r\n    }\r\n\r\n    render () {\r\n\r\n        // let modalUnsuccessOrder = (this.props.dataBasket.windows.unsuccessOrder) ? 'modal-unsuccess-order' : 'd-none';\r\n\r\n        let modalUnsuccessOrderFailLogin = (this.props.dataBasket.windows.invalidLogin) ? null : 'd-none';\r\n\r\n        return (\r\n            <div className=\"modal-backdrop\">\r\n            <div className=\"modal-unsuccess-order\">\r\n                <div data-btn=\"btn-login-checkout-up-close\" className=\"login-cancel-btn\">x</div>\r\n                <p className=\"modal-unsuccess-order-title\">\r\n                    You are not logged. Please enter your login and password or your e-mail to proceed checkout\r\n                </p>\r\n\r\n                <p className={modalUnsuccessOrderFailLogin}>\r\n                    Incorrect login. Try again\r\n                </p>\r\n\r\n                <FormLogin onSubmit={this.handleSubmitLogin}/>\r\n\r\n                <FormCheckoutByEmail onSubmit={this.handleSubmitEmail}/>\r\n\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        dataBasket: state.cart,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n\r\n        closeUnsuccessOrder: () => {\r\n            dispatch({type: CLOSE_MODAL_UNSUCCESS_ORDER})\r\n        },\r\n\r\n        checkLoginBeforeCheckout: (loginForm) => dispatch(checkLoginBeforeCheckout(loginForm)),\r\n\r\n        sendOrderByEmail: (loginForm) => dispatch(sendOrderByEmail(loginForm)),\r\n\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UnsuccessOrder)","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {\r\n  CLOSE_MODAL_FINISH_ORDER_AFTER_LOGIN,\r\n  sendCheckout\r\n} from \"../../../../actions/cart\";\r\n\r\n// import \"./SuccessOrder.scss\"\r\n\r\nclass FinishAfterLogin extends Component {\r\n  render() {\r\n    let modalFinishAfterLogin = this.props.dataBasket.windows.finishAfterLogin\r\n      ? \"modal-success-order modal-success-order-after-login\"\r\n      : \"d-none\";\r\n\r\n    return (\r\n      <div className={modalFinishAfterLogin}>\r\n        <p className=\"modal-success-order-text\">You are successfully log in.</p>\r\n\r\n        <NavLink to=\"/\">\r\n          <input\r\n            type=\"button\"\r\n            onClick={this.props.setFinishedCart}\r\n            value=\"Finish checkout\"\r\n            className=\"modal-success-order-after-login-btn\"\r\n          />\r\n        </NavLink>\r\n\r\n        <input\r\n          type=\"button\"\r\n          onClick={this.props.finishAfterLogin}\r\n          value=\"Back to payment\"\r\n          className=\"modal-success-order-after-login-btn\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    dataBasket: state.cart\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    finishAfterLogin: () => {\r\n      dispatch({ type: CLOSE_MODAL_FINISH_ORDER_AFTER_LOGIN });\r\n    },\r\n\r\n    setFinishedCart: () => dispatch(sendCheckout())\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(FinishAfterLogin);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PlaceOrder from \"./PlaceOrder\";\r\nimport FormDeliveryCheckout from \"./FormDeliveryCheckout\";\r\nimport FormPaymentCheckout from \"./FormPaymentCheckout\";\r\n\r\nimport SuccessOrder from \"./Modals/SuccessOrder\";\r\nimport UnsuccessOrder from \"./Modals/UnsuccessOrder\";\r\nimport FinishAfterLogin from \"./Modals/FinishAfterLogin\";\r\n\r\nimport { CHANGE_DELIVERY_METHOD } from \"../../actions/cart\";\r\n\r\nimport \"./Checkout.scss\";\r\n\r\nclass Checkout extends Component {\r\n  state = {\r\n    showDelivery: false,\r\n    showPayment: false,\r\n    finishOrder: false\r\n  };\r\n\r\n  clickShowDelivery = () => {\r\n    this.setState({\r\n      showDelivery: true\r\n    });\r\n  };\r\n\r\n  handleDeliverySubmit = values => {\r\n    this.setState({\r\n      showPayment: true\r\n    });\r\n  };\r\n\r\n  handlePaymentSubmit = values => {\r\n    this.setState({\r\n      finishOrder: true\r\n    });\r\n  };\r\n\r\n  checkCorrectPayment = value => {\r\n    this.setState({\r\n      finishOrder: !value\r\n    });\r\n  };\r\n\r\n  handleLoginUnsuccessForm = e => {\r\n    if (e.target.dataset.btn !== \"btn-login-checkout-up-close\") {\r\n      e.stopPropagation();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let arrayProducts = [];\r\n\r\n    arrayProducts = this.props.dataBasket.arrayProduct.map(elem => {\r\n      if (elem.isAvailable) {\r\n        return (\r\n          <li className=\"checkout-product-item\">\r\n            <img\r\n              src={elem.urlPhoto}\r\n              alt=\"\"\r\n              className=\"checkout-product-item-img\"\r\n            />\r\n            <div className=\"checkout-product-item-block\">\r\n              <div className=\"checkout-product-item-details\">\r\n                <div className=\"checkout-product-item-description\">\r\n                  <p className=\"checkout-product-item-model\">{elem.model}</p>\r\n                  <p className=\"checkout-product-item-color\">\r\n                    {`Color - ${elem.colorName}`}\r\n                  </p>\r\n                  <p className=\"checkout-product-item-size\">\r\n                    {`Size - ${elem.size}`}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <div className=\"checkout-product-item-price\">\r\n                <p>{`${elem.priceFormDB} x ${elem.amount}`}</p>\r\n                <p className=\"checkout-product-item-price-bold\">\r\n                  {`$${(elem.amount * elem.priceFormDB).toFixed(2)}`}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </li>\r\n        );\r\n      }\r\n      return null;\r\n    });\r\n\r\n    let arrayDelivery = [];\r\n    if (this.props.dataBasket.deliveryMethods) {\r\n      arrayDelivery = this.props.dataBasket.deliveryMethods.map(elem => {\r\n        return (\r\n          <li key={elem.name}>\r\n            <input\r\n              className=\"delivery-input\"\r\n              type=\"radio\"\r\n              name=\"deliveryFilter\"\r\n              value={elem.name}\r\n              checked={elem.name === this.props.dataBasket.checkedDelivery}\r\n              id={elem.name}\r\n              onChange={() => this.props.handleDeliveryRadio(elem.name)}\r\n            />\r\n            <label\r\n              className=\"delivery-link\"\r\n              title={elem.name}\r\n              htmlFor={elem.name}\r\n            >\r\n              <div className=\"delivery-link-block\">\r\n                <p>Delivery - {elem.name}</p>\r\n                <p>Estimated delivery - {elem.duration} days</p>\r\n                <p>Price - {elem.price}</p>\r\n              </div>\r\n            </label>\r\n          </li>\r\n        );\r\n      });\r\n    }\r\n\r\n    let showDeliveryClass = this.state.showDelivery\r\n      ? \"checkout-delivery-details\"\r\n      : \"d-none\";\r\n    let showPaymentClass = this.state.showPayment\r\n      ? \"checkout-payment\"\r\n      : \"d-none\";\r\n\r\n    return (\r\n      <section className=\"checkout-page container\">\r\n        <div className=\"checkout\">\r\n          <ul className=\"checkout-product-list\">{arrayProducts}</ul>\r\n\r\n          <div className=\"checkout-delivery-method\">\r\n            <p className=\"checkout-delivery-details-title\">\r\n              Choose one of delivery method\r\n            </p>\r\n\r\n            <ul className=\"checkout-delivery-list\">{arrayDelivery}</ul>\r\n\r\n            <input\r\n              type=\"button\"\r\n              value=\"Next step\"\r\n              onClick={this.clickShowDelivery}\r\n              className=\"checkout-next-btn\"\r\n            />\r\n          </div>\r\n\r\n          <div className={showDeliveryClass}>\r\n            <p className=\"checkout-delivery-details-title\">\r\n              Please enter your address\r\n            </p>\r\n\r\n            <FormDeliveryCheckout onSubmit={this.handleDeliverySubmit} />\r\n          </div>\r\n\r\n          <div className={showPaymentClass}>\r\n            <p className=\"checkout-delivery-details-title\">\r\n              Please enter your payment information\r\n            </p>\r\n\r\n            <FormPaymentCheckout\r\n              checkCorrectPayment={this.checkCorrectPayment}\r\n              onSubmit={this.handlePaymentSubmit}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <PlaceOrder enableBtn={this.state.finishOrder} />\r\n\r\n        <SuccessOrder />\r\n\r\n        <div onClick={this.handleLoginUnsuccessForm}>\r\n          {this.props.dataBasket.windows.unsuccessOrder && <UnsuccessOrder />}\r\n        </div>\r\n\r\n        <FinishAfterLogin />\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    dataBasket: state.cart\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    handleDeliveryRadio: radio => {\r\n      dispatch({ type: CHANGE_DELIVERY_METHOD, payload: { method: radio } });\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Checkout);\r\n","import React, { Component } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  selectFilters,\r\n  clearProductList\r\n} from \"../../../../actions/filterActions\";\r\n\r\nimport \"./category-filter.scss\";\r\n\r\nclass CategoryFilter extends Component {\r\n  changeCategoryFilters = (\r\n    newCategory,\r\n    newSubCategory,\r\n    newFurtherSubCategory\r\n  ) => {\r\n    let { currentFilters } = this.props;\r\n\r\n    this.props.clearProductList();\r\n\r\n    this.props.selectFilters(currentFilters, {\r\n      category: newCategory,\r\n      subCategory: newSubCategory,\r\n      furtherSubCategory: newFurtherSubCategory,\r\n      colorName: currentFilters.colorName,\r\n      size: currentFilters.size,\r\n      price: currentFilters.price,\r\n      pageNo: 1\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let { category } = this.props.urlParams;\r\n    let { navMenuItems } = this.props;\r\n\r\n    let subCategories = navMenuItems.map(cat => {\r\n      if (cat.categoryName === category) {\r\n        return cat.subCategoryList.map(subCat => {\r\n          let furtherSubCatList = subCat.furtherSubCategoryList.map(\r\n            furtherSubCat => {\r\n              if (furtherSubCat.active) {\r\n                return (\r\n                  <li\r\n                    className=\"further-sub-category-item\"\r\n                    key={furtherSubCat._id}\r\n                  >\r\n                    <NavLink\r\n                      to={furtherSubCat.furtherSubCategoryUrl}\r\n                      className=\"further-sub-category-link\"\r\n                      activeClassName=\"further-sub-category-link-active\"\r\n                      onClick={() =>\r\n                        this.changeCategoryFilters(\r\n                          cat.categoryName,\r\n                          subCat.subCategoryName,\r\n                          furtherSubCat.furtherSubCategoryName\r\n                        )\r\n                      }\r\n                    >\r\n                      {furtherSubCat.furtherSubCategoryName}\r\n                    </NavLink>\r\n                  </li>\r\n                );\r\n              }\r\n              return null;\r\n            }\r\n          );\r\n\r\n          if (subCat.active) {\r\n            return (\r\n              <div className=\"category-item\" key={subCat._id}>\r\n                <div className=\"subcat-block\">\r\n                  <NavLink\r\n                    to={subCat.subCategoryUrl}\r\n                    className=\"category-item-title\"\r\n                    activeClassName=\"category-item-title-active\"\r\n                    onClick={() =>\r\n                      this.changeCategoryFilters(\r\n                        cat.categoryName,\r\n                        subCat.subCategoryName\r\n                      )\r\n                    }\r\n                  >\r\n                    {subCat.subCategoryName}\r\n                  </NavLink>\r\n                </div>\r\n                <ul className=\"category-item-sub-menu\">{furtherSubCatList}</ul>\r\n              </div>\r\n            );\r\n          }\r\n          return null;\r\n        });\r\n      }\r\n      return null;\r\n    });\r\n\r\n    let categoryFilters = navMenuItems.map(cat => {\r\n      if (cat.categoryName === category) {\r\n        return (\r\n          <div className=\"category-list border-category\" key={cat._id}>\r\n            <div className=\"cat-block\">\r\n              <NavLink\r\n                to={cat.categoryUrl}\r\n                className=\"filter-title\"\r\n                activeClassName=\"filter-title-active\"\r\n                onClick={() => this.changeCategoryFilters(cat.categoryName)}\r\n              >\r\n                {`Shop ${cat.categoryName}`}\r\n              </NavLink>\r\n            </div>\r\n            <div className=\"category-list-menu\">{subCategories}</div>\r\n          </div>\r\n        );\r\n      }\r\n      return null;\r\n    });\r\n\r\n    return <>{categoryFilters}</>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    navMenuItems: state.navMenu.navMenuItems,\r\n    currentFilters: state.filters.selected,\r\n    products: state.filters.products\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    selectFilters,\r\n    clearProductList\r\n  }\r\n)(CategoryFilter);\r\n","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Preloader from \"../../../Preloader\";\r\n\r\nimport {\r\n    getFilterElems,\r\n    selectFilters,\r\n    clearProductList\r\n} from \"../../../../actions/filterActions\";\r\n\r\nimport \"./color-filter.scss\";\r\n\r\nclass ColorFilter extends Component {\r\n    // Fetching our list of colors from server\r\n    componentDidMount = () => {\r\n        this.props.getFilterElems();\r\n    };\r\n\r\n    // Actualizing the checked radio color in store\r\n    handleColorRadio = newColorName => {\r\n        let {currentFilters} = this.props;\r\n\r\n        this.props.clearProductList();\r\n\r\n        // If user choses \"all colors\" - delete colorName from store to not filter by color\r\n        if (newColorName === \"all colors\") {\r\n            this.props.selectFilters(currentFilters, {\r\n                category: currentFilters.category,\r\n                subCategory: currentFilters.subCategory,\r\n                furtherSubCategory: currentFilters.furtherSubCategory,\r\n                colorName: undefined,\r\n                size: currentFilters.size,\r\n                price: currentFilters.price,\r\n                pageNo: 1,\r\n            });\r\n            // If user choses concret color - add the chosen colorName into store to filter by this color\r\n        } else {\r\n            this.props.selectFilters(currentFilters, {\r\n                category: currentFilters.category,\r\n                subCategory: currentFilters.subCategory,\r\n                furtherSubCategory: currentFilters.furtherSubCategory,\r\n                colorName: newColorName,\r\n                size: currentFilters.size,\r\n                price: currentFilters.price,\r\n                pageNo: 1,\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            colorFilters,\r\n            isFilterFetching,\r\n            currentColorName\r\n        } = this.props;\r\n\r\n        // The list of our unique colors? that we have in db\r\n        let colorItems = colorFilters.map(color => {\r\n            return (\r\n                <li className=\"filter-color-panel-item\" key={color._id}>\r\n                    <input\r\n                        className=\"filter-color-panel-input\"\r\n                        type=\"radio\"\r\n                        name=\"colorFilters\"\r\n                        value={color.colorName}\r\n                        checked={currentColorName === color.colorName}\r\n                        id={color.colorName}\r\n                        onChange={() => this.handleColorRadio(color.colorName)}\r\n                    />\r\n                    <label\r\n                        className=\"filter-color-panel-link\"\r\n                        title={color.colorName}\r\n                        style={{backgroundColor: color.cssHexCode}}\r\n                        htmlFor={color.colorName}\r\n                    />\r\n                </li>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <div className=\"category-filter-color border-category\">\r\n                <div className=\"color-filter-header\">\r\n                    <p className=\"filter-title\">color</p>\r\n                    <label className=\"reset-color-filters\">\r\n                        all colors\r\n                        <input\r\n                            type=\"radio\"\r\n                            className=\"filter-color-panel-input\"\r\n                            name=\"colorFilters\"\r\n                            value=\"all colors\"\r\n                            onChange={() => this.handleColorRadio(\"all colors\")}\r\n                        />\r\n                    </label>\r\n                </div>\r\n                <ul className=\"filter-color-panel\">\r\n                    {isFilterFetching ? <Preloader/> : colorItems}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        colorFilters: state.filters.colorFilters,\r\n        isFilterFetching: state.filters.isFilterFetching,\r\n        currentFilters: state.filters.selected, //The object, where we store all our actual filters\r\n        currentColorName: state.filters.selected.colorName\r\n    };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {getFilterElems, selectFilters, clearProductList}\r\n)(ColorFilter);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Select from \"react-select\";\r\n\r\nimport {\r\n  selectFilters,\r\n  selectSize,\r\n  clearProductList\r\n} from \"../../../../actions/filterActions\";\r\n\r\nimport Preloader from \"../../../Preloader\";\r\n\r\nimport \"./sizeFilter.scss\";\r\n\r\nclass SizeFilter extends Component {\r\n  sizeFilterChange = selectedOption => {\r\n    this.props.selectSize(selectedOption);\r\n\r\n    this.props.clearProductList();\r\n    let { currentFilters } = this.props;\r\n\r\n    if (selectedOption.value === \"all sizes\") {\r\n      this.props.selectFilters(currentFilters, {\r\n        category: currentFilters.category,\r\n        subCategory: currentFilters.subCategory,\r\n        furtherSubCategory: currentFilters.furtherSubCategory,\r\n        colorName: currentFilters.colorName,\r\n        size: undefined,\r\n        price: currentFilters.price,\r\n        pageNo: 1\r\n      });\r\n    } else {\r\n      this.props.selectFilters(currentFilters, {\r\n        category: currentFilters.category,\r\n        subCategory: currentFilters.subCategory,\r\n        furtherSubCategory: currentFilters.furtherSubCategory,\r\n        colorName: currentFilters.colorName,\r\n        size: selectedOption.value,\r\n        price: currentFilters.price,\r\n        pageNo: 1\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      sizeFilters,\r\n      isFilterFetching,\r\n      currentSizeOption,\r\n      currentFilters\r\n    } = this.props;\r\n\r\n    let { category, subCategory, furtherSubCategory } = currentFilters;\r\n    let currentCategories = `${\r\n      furtherSubCategory\r\n        ? category + \"-\" + subCategory + \"-\" + furtherSubCategory\r\n        : subCategory\r\n        ? category + \"-\" + subCategory\r\n        : category\r\n    }`;\r\n\r\n    let currentCategoriesLength;\r\n\r\n    if (currentCategories.includes(\"-\")) {\r\n      currentCategoriesLength = currentCategories.split(\"-\").length;\r\n    } else {\r\n      currentCategoriesLength = 1;\r\n    }\r\n\r\n    let relevantSizeOptions = sizeFilters\r\n      .map(size => {\r\n        let sizeIsPresentInCategories = size.categories.some(cat => {\r\n          let splitedCat = cat.split(\"-\");\r\n          splitedCat.length = currentCategoriesLength;\r\n          let sizeCategories = splitedCat.join(\"-\");\r\n          return sizeCategories === currentCategories;\r\n        });\r\n\r\n        if (sizeIsPresentInCategories) {\r\n          return {\r\n            value: size.value,\r\n            label: size.value\r\n          };\r\n        }\r\n\r\n        return undefined;\r\n      })\r\n      .filter(item => {\r\n        return item !== undefined;\r\n      });\r\n\r\n    relevantSizeOptions.unshift({\r\n      value: \"all sizes\",\r\n      label: \"All sizes\"\r\n    });\r\n\r\n    return (\r\n      <>\r\n        {isFilterFetching ? (\r\n          <Preloader />\r\n        ) : (\r\n          <>\r\n            <p className=\"filter-title\">Size</p>\r\n            <Select\r\n              value={currentSizeOption}\r\n              onChange={this.sizeFilterChange}\r\n              options={relevantSizeOptions}\r\n            />\r\n          </>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    sizeFilters: state.filters.sizeFilters,\r\n    currentSizeOption: state.filters.currentSizeOption,\r\n    isFilterFetching: state.filters.isFilterFetching,\r\n    currentFilters: state.filters.selected\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { selectFilters, selectSize, clearProductList }\r\n)(SizeFilter);\r\n","import React, {Component} from \"react\";\r\nimport InputRange from \"react-input-range\";\r\nimport {connect} from \"react-redux\";\r\n\r\nimport {selectFilters, selectPrice, clearProductList} from \"../../../../actions/filterActions\";\r\n\r\nimport \"react-input-range/lib/css/index.css\";\r\nimport \"./price-filter.scss\";\r\n\r\nclass PriceFilter extends Component {\r\n    componentDidMount = () => {\r\n        let {category, subCategory, furtherSubCategory} = this.props.urlParams;\r\n        let {currentFilters} = this.props;\r\n\r\n        let newFilters = {\r\n            category: category,\r\n            subCategory: subCategory,\r\n            furtherSubCategory: furtherSubCategory,\r\n            colorName: currentFilters.colorName,\r\n            size: currentFilters.size,\r\n            price: currentFilters.price,\r\n            pageNo: 1,\r\n        };\r\n\r\n\r\n\r\n        this.props.selectFilters(currentFilters, newFilters);\r\n    };\r\n\r\n    onPriceFilter = price => {\r\n        let {currentFilters} = this.props;\r\n\r\n        this.props.clearProductList();\r\n\r\n        let newFilters = {\r\n            category: currentFilters.category,\r\n            subCategory: currentFilters.subCategory,\r\n            furtherSubCategory: currentFilters.furtherSubCategory,\r\n            colorName: currentFilters.colorName,\r\n            size: currentFilters.size,\r\n            price: price,\r\n            pageNo: 1,\r\n        };\r\n        this.props.selectFilters(currentFilters, newFilters);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <InputRange\r\n                formatLabel={value => `$ ${value}`}\r\n                maxValue={1000}\r\n                minValue={5}\r\n                step={5}\r\n                value={this.props.currentFilters.price}\r\n                allowSameValues={true}\r\n                draggableTrack={true}\r\n                onChange={this.props.selectPrice}\r\n                onChangeComplete={this.onPriceFilter}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        currentFilters: state.filters.selected,\r\n        selectedPrice: state.filters.selected.price\r\n    };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {selectFilters, selectPrice, clearProductList}\r\n)(PriceFilter);\r\n","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\n\r\nimport {\r\n    selectFilters,\r\n    selectSize,\r\n    selectPrice\r\n} from \"../../../actions/filterActions\";\r\n\r\nimport CategoryFilter from \"./CategoryFilter\";\r\nimport ColorFilter from \"./ColorFilter\";\r\nimport SizeFilter from \"./SizeFilter\";\r\nimport PriceFilter from \"./PriceFilter\";\r\n\r\nimport \"./filters.scss\";\r\n\r\nclass Filters extends Component {\r\n    // Method for reseting all filters\r\n    filterReset = () => {\r\n        const {currentFilters, selectFilters} = this.props;\r\n\r\n        this.props.selectSize(null);\r\n        this.props.selectPrice({min: 5, max: 1000});\r\n\r\n        selectFilters(currentFilters, {\r\n            category: currentFilters.category,\r\n            subCategory: undefined,\r\n            furtherSubCategory: undefined,\r\n            colorName: undefined,\r\n            size: undefined,\r\n            price: {min: 5, max: 1000},\r\n            pageNo: 1,\r\n        });\r\n\r\n        this.props.history.push(`/${currentFilters.category}`);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"category-filter\">\r\n                <div className=\"category-filter-active border-category\">\r\n                    <div className=\"filter-active-title\">\r\n                        <h3>filters</h3>\r\n                        <input\r\n                            className=\"reset-color-filters\"\r\n                            type=\"button\"\r\n                            value=\"reset\"\r\n                            onClick={this.filterReset}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <CategoryFilter urlParams={this.props.urlParams}/>\r\n                <PriceFilter urlParams={this.props.urlParams}/>\r\n                <ColorFilter/>\r\n                <SizeFilter/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        sizeOptions: state.filters.sizeOptions,\r\n        currentSizeOption: state.filters.currentSizeOption,\r\n        isFilterFetching: state.filters.isFilterFetching,\r\n        currentFilters: state.filters.selected\r\n    };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {selectFilters, selectSize, selectPrice}\r\n)(withRouter(Filters));\r\n","// @flow\r\n\r\nimport * as React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"./empty-state.scss\";\r\n\r\ntype Props = {\r\n  isFilterResultEmpty: boolean,\r\n  category: string,\r\n  subCategory: string,\r\n  furtherSubCategory: string,\r\n  colorName: string,\r\n  size: string,\r\n  price: Object,\r\n  returnToMainPage: boolean,\r\n  title: string\r\n};\r\nexport default class EmptyState extends React.Component<Props> {\r\n  render() {\r\n    let {\r\n      isFilterResultEmpty,\r\n      category,\r\n      subCategory,\r\n      furtherSubCategory,\r\n      colorName,\r\n      size,\r\n      price,\r\n      returnToMainPage,\r\n      title\r\n    } = this.props;\r\n\r\n    return (\r\n      <div className=\"empty-state\">\r\n        <p className=\"empty-state-title\">{title}</p>\r\n        {isFilterResultEmpty ? (\r\n          <table>\r\n            <tbody>\r\n              <tr>\r\n                <td className=\"filter-option-name cell\">Categories:</td>\r\n                <td className=\"filter-option-value cell\">{`${\r\n                  furtherSubCategory\r\n                    ? category +\r\n                      \" - \" +\r\n                      subCategory +\r\n                      \" - \" +\r\n                      furtherSubCategory\r\n                    : subCategory\r\n                    ? category + \" - \" + subCategory\r\n                    : category\r\n                }`}</td>\r\n              </tr>\r\n              <tr>\r\n                <td className=\"filter-option-name cell\">Color:</td>\r\n                <td className=\"filter-option-value cell\">\r\n                  {colorName ? colorName : \"All colors\"}\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td className=\"filter-option-name cell\">Size:</td>\r\n                <td className=\"filter-option-value cell\">\r\n                  {size ? size : \"All sizes\"}\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td className=\"filter-option-name cell\">Price:</td>\r\n                <td className=\"filter-option-value cell\">{`From $${\r\n                  price.min\r\n                } to $${price.max}`}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        ) : null}\r\n\r\n        {returnToMainPage ? (\r\n          <NavLink to=\"/\">Return to main page </NavLink>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport InfiniteScroll from \"react-infinite-scroller\";\r\n\r\nimport {\r\n  getFilteredProducts,\r\n  selectFilters,\r\n  setNewPage\r\n} from \"../../actions/filterActions\";\r\n\r\nimport Filters from \"./Filters\";\r\nimport BreadCrumbs from \"../BreadCrumbs\";\r\nimport ProductCard from \"../ProductCard\";\r\nimport Preloader from \"../Preloader\";\r\nimport EmptyState from \"../EmptyState\";\r\nimport SearchDropDownList from \"../SearchDropDownList\";\r\nimport ScrollBtn from \"../ScrollBtn\";\r\n\r\nimport \"./filteredProductList.scss\";\r\n\r\nclass FilteredProductList extends Component {\r\n  addNumberPage = () => {\r\n    if (!this.props.isProductFetching) {\r\n      let currentValue = this.props.currentFilters.pageNo;\r\n\r\n      // let currentValue = page;\r\n      currentValue++;\r\n\r\n      console.log(\"currentValue\", currentValue);\r\n\r\n      let { currentFilters } = this.props;\r\n\r\n      this.props.selectFilters(currentFilters, {\r\n        category: currentFilters.category,\r\n        subCategory: currentFilters.subCategory,\r\n        furtherSubCategory: currentFilters.furtherSubCategory,\r\n        colorName: currentFilters.colorName,\r\n        size: currentFilters.size,\r\n        price: currentFilters.price,\r\n        pageNo: currentValue\r\n      });\r\n    }\r\n\r\n    // this.props.setNewPage(currentValue);\r\n  };\r\n\r\n  componentDidMount = () => {\r\n\r\n    window.scroll(0, 0);\r\n    let { category, subCategory, furtherSubCategory } = this.props.match.params;\r\n    this.props.getFilteredProducts(category, subCategory, furtherSubCategory);\r\n  };\r\n\r\n  render() {\r\n    let { products, isProductFetching, currentFilters } = this.props;\r\n\r\n    let filteredProductList = products.map(product => {\r\n      if (currentFilters.colorName && !currentFilters.size) {\r\n        return product.productFeatures.map(color => {\r\n          if (currentFilters.colorName === color.colorName) {\r\n            return (\r\n              <ProductCard\r\n                productUrl={product.productUrl}\r\n                key={`${product.productUrl}${color._id}`}\r\n                // key={color._id}\r\n                imageUrl={color.imageUrls[0]}\r\n                model={product.model}\r\n                colorName={color.colorName}\r\n                currentPrice={product.currentPrice}\r\n                previousPrice={product.previousPrice}\r\n                currentFilters={currentFilters}\r\n              />\r\n            );\r\n          }\r\n          return null;\r\n        });\r\n      } else if (currentFilters.size && !currentFilters.colorName) {\r\n        return product.productFeatures.map(color => {\r\n          let isSizePresent = color.sizes.some(size => {\r\n            return currentFilters.size === size.size && size.quantity > 0;\r\n          });\r\n\r\n          if (isSizePresent) {\r\n            return (\r\n              <ProductCard\r\n                productUrl={product.productUrl}\r\n                key={`${product.productUrl}${color._id}`}\r\n                // key={color._id}\r\n                imageUrl={color.imageUrls[0]}\r\n                model={product.model}\r\n                colorName={color.colorName}\r\n                currentPrice={product.currentPrice}\r\n                previousPrice={product.previousPrice}\r\n                currentFilters={currentFilters}\r\n              />\r\n            );\r\n          }\r\n          return null;\r\n        });\r\n      } else if (currentFilters.colorName && currentFilters.size) {\r\n        return product.productFeatures.map(color => {\r\n          let isSizePresent = color.sizes.some(size => {\r\n            return currentFilters.size === size.size && size.quantity > 0;\r\n          });\r\n\r\n          if (currentFilters.colorName === color.colorName && isSizePresent) {\r\n            return (\r\n              <ProductCard\r\n                productUrl={product.productUrl}\r\n                key={`${product.productUrl}${color._id}`}\r\n                // key={color._id}\r\n                imageUrl={color.imageUrls[0]}\r\n                model={product.model}\r\n                colorName={color.colorName}\r\n                currentPrice={product.currentPrice}\r\n                previousPrice={product.previousPrice}\r\n                currentFilters={currentFilters}\r\n              />\r\n            );\r\n          }\r\n          return null;\r\n        });\r\n      } else {\r\n        return product.productFeatures.map(color => {\r\n          return (\r\n            <ProductCard\r\n              productUrl={product.productUrl}\r\n              key={`${product.productUrl}${color._id}`}\r\n              // key={color._id}\r\n              imageUrl={color.imageUrls[0]}\r\n              model={product.model}\r\n              colorName={color.colorName}\r\n              currentPrice={product.currentPrice}\r\n              previousPrice={product.previousPrice}\r\n              currentFilters={currentFilters}\r\n            />\r\n          );\r\n        });\r\n      }\r\n    });\r\n\r\n    let {\r\n      category,\r\n      subCategory,\r\n      furtherSubCategory,\r\n      colorName,\r\n      size,\r\n      price\r\n    } = currentFilters;\r\n\r\n    let filterEmptyState = (\r\n      <EmptyState\r\n        isFilterResultEmpty={true}\r\n        category={category}\r\n        subCategory={subCategory}\r\n        furtherSubCategory={furtherSubCategory}\r\n        colorName={colorName}\r\n        size={size}\r\n        price={price}\r\n        returnToMainPage={false}\r\n        title=\"By the following filtering options you specified, no products were found. Please try the other filters.\"\r\n      />\r\n    );\r\n\r\n    return (\r\n      <>\r\n        <ScrollBtn scrollStepInPx=\"100\" delayInMs=\"12\" />\r\n        <SearchDropDownList />\r\n        <BreadCrumbs categoryAway={this.props.match.params} />\r\n        <section className=\"category-block\">\r\n          <div className=\"container\">\r\n            <div className=\"category-content\">\r\n              <Filters urlParams={this.props.match.params} />\r\n\r\n              <div className=\"category-product-listing\">\r\n                <InfiniteScroll\r\n                  className=\"listing-products\"\r\n                  pageStart={0}\r\n                  loadMore={this.addNumberPage}\r\n                  hasMore={\r\n                    this.props.currentFilters.pageNo <=\r\n                    this.props.currentFilters.amountPages\r\n                  }\r\n                  // useWindow={false}\r\n                  threshold={100}\r\n                >\r\n                  {this.props.products.length < 1 && !isProductFetching\r\n                    ? filterEmptyState\r\n                    : filteredProductList}\r\n                </InfiniteScroll>\r\n\r\n                {isProductFetching ? <Preloader /> : null}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    products: state.filters.products,\r\n    isProductFetching: state.filters.isProductFetching,\r\n    currentFilters: state.filters.selected\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getFilteredProducts, selectFilters, setNewPage }\r\n)(FilteredProductList);\r\n","// @flow\r\n\r\nimport * as React from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport axios from \"axios\";\r\nimport \"./static-pages.scss\";\r\n\r\ntype Props = {};\r\n\r\ntype State = {\r\n  pageTitle: string,\r\n  content: Array<Object>\r\n};\r\nexport default class AboutUs extends React.Component <Props, State> {\r\n  state = {\r\n    pageTitle: \"\",\r\n    content: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    axios.get(\"/about-us\").then(res => {\r\n      this.setState({\r\n        pageTitle: res.data.title,\r\n        content: res.data.content\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const content = this.state.content;\r\n    let pageContent = content.map(elem => {\r\n      return (\r\n        <div className=\"about-us-paragraph\">\r\n          <h4 className=\"about-us-title\"> &bull; {elem.title} &bull;</h4>\r\n          {elem.content}\r\n        </div>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <>\r\n        <Helmet>\r\n          <title>{this.state.pageTitle}</title>\r\n        </Helmet>\r\n        <div className=\"container\">\r\n          <h2 className=\"sub-page-title\">{this.state.pageTitle}</h2>\r\n          <h3 className=\"sub-page-sub-title\">We have a lot to tell you</h3>\r\n          <div className=\"about-us-wrapper\">          \r\n              {pageContent[0]}\r\n              {pageContent[1]}\r\n              {pageContent[2]}\r\n              {pageContent[3]}\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","// @flow\r\n\r\nimport * as React from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport axios from \"axios\";\r\nimport \"./static-pages.scss\";\r\n\r\ntype Props = {};\r\n\r\ntype State = {\r\n  pageTitle: string,\r\n  content: Array<Object>\r\n};\r\n\r\nexport default class OurPolicy extends React.Component<Props, State> {\r\n  state = {\r\n    pageTitle: \"\",\r\n    content: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    axios.get(\"/our-policy\").then(res => {\r\n      console.log(res);\r\n      this.setState({\r\n        pageTitle: res.data.title,\r\n        content: res.data.content\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const content = this.state.content;\r\n    let pageContent = content.map(elem => {\r\n      return (\r\n        <li className=\"list-item\" key={elem.title}>\r\n          <span className=\"list-item-bold\">{elem.title}</span>\r\n          {elem.content}\r\n        </li>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <>\r\n        <Helmet>\r\n          <title>{this.state.pageTitle}</title>\r\n        </Helmet>\r\n        <h2 className=\"sub-page-title\">{this.state.pageTitle}</h2>\r\n        <h3 className=\"sub-page-sub-title\">We are at the top of the market</h3>\r\n        <p className=\"our-policy-paragraph\">\r\n          When your business expands quickly, it can be hard to stay on top of\r\n          policy creation and management. Sure, there may be quite a few\r\n          unwritten rules that employees seem to be aware of and your\r\n          organization just hasn’t gotten around to putting on paper yet, but\r\n          those rules tend to cause more confusion than not. Just like the\r\n          telephone game we played as kids, new rules heard “through the\r\n          grapevine” are easily not shared correctly, misinterpreted and\r\n          misunderstood.\r\n        </p>\r\n        <ol className=\"list\" type=\"1\">\r\n          {pageContent}\r\n        </ol>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","// @flow\r\nimport * as React from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport axios from \"axios\";\r\n\r\ntype Props = {};\r\n\r\ntype State = {\r\n  pageTitle: string,\r\n  content: Array<Object>\r\n};\r\nexport default class Careers extends React.Component<Props, State> {\r\n  state = {\r\n    pageTitle: \"\",\r\n    content: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    axios.get(\"/careers\").then(res => {\r\n      console.log(res);\r\n      this.setState({\r\n        pageTitle: res.data.title,\r\n        content: res.data.content\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const content = this.state.content;\r\n    let pageContent = content.map(elem => {\r\n      return (\r\n        <div className=\"job-description\" key={elem.title}>\r\n          <h3 className=\"job-description-position\">{elem.title}</h3>\r\n          <p className=\"job-description-text\">{elem.content}</p>\r\n        </div>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <>\r\n        <Helmet>\r\n          <title>{this.state.pageTitle}</title>\r\n        </Helmet>\r\n        <div className=\"container\">\r\n          <h2 className=\"sub-page-title\">{this.state.pageTitle}</h2>\r\n          <h3 className=\"sub-page-sub-title\">\r\n            There are several options to suggest\r\n          </h3>\r\n          {pageContent}\r\n          <p className=\"job-offer-feedback\">\r\n            If you are interested, please send your resume: matter-hr@matter.com\r\n          </p>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Switch, Route} from \"react-router-dom\";\r\n\r\nimport Header from \"../Header\";\r\nimport Footer from \"../Footer\";\r\nimport MainPage from \"../MainPage\";\r\nimport ProductPage from \"../ProductPage\";\r\nimport Profile from \"../Profile\";\r\nimport Unsubscribe from \"../Unsubscribe\";\r\nimport Cart from \"../Cart\";\r\nimport Checkout from \"../Checkout\";\r\nimport FilteredProductList from \"../FilteredProductList\";\r\nimport AboutUs from \"../StaticPages/AboutUs\";\r\nimport OurPolicy from \"../StaticPages/OurPolicy\";\r\nimport Careers from \"../StaticPages/Careers\";\r\n\r\nimport {\r\n    CLOSE_LOGIN_DETAILS,\r\n    CLOSE_LOGIN_FORM,\r\n    CLOSE_REG_FORM,\r\n    CLOSE_REG_OK_FORM\r\n} from \"../../actions/login\";\r\n\r\nimport {\r\n    SET_OFFSET_Y\r\n} from \"../../actions/scroll\";\r\n\r\nimport {blurSearchInput} from \"../../actions/search\";\r\nimport {\r\n    CLOSE_MODAL_SUCCESS_ORDER,\r\n    CLOSE_MODAL_UNSUCCESS_ORDER\r\n} from \"../../actions/cart\";\r\n\r\nclass Dashboard extends Component {\r\n\r\n    componentDidMount () {\r\n        window.addEventListener('scroll', this.handleScroll);\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        window.removeEventListener('scroll', this.handleScroll);\r\n    }\r\n\r\n    handleScroll = () => {\r\n        console.log('========scroll', window.pageYOffset)\r\n        this.props.setOffsetY(window.pageYOffset)\r\n    }\r\n\r\n\r\n    handleCloseForms = e => {\r\n        if (this.props.windowsStatus.formLoginOpen) {\r\n            this.props.closeLoginForm();\r\n            document.body.style.overflow=\"auto\";\r\n        }\r\n        if (this.props.windowsStatus.formRegisterOpen) {\r\n            this.props.closeRegForm();\r\n            document.body.style.overflow=\"auto\";\r\n        }\r\n        if (this.props.windowsStatus.loginDetails) {\r\n            this.props.closeLoginDetails();\r\n            document.body.style.overflow=\"auto\";\r\n        }\r\n        if (this.props.windowsStatus.formRegistrationOk) {\r\n            this.props.closeRegistrationOk();\r\n            document.body.style.overflow=\"auto\";\r\n        }\r\n        if (this.props.focus) {\r\n            this.props.blurSearchInput(e);\r\n            document.body.style.overflow=\"auto\";\r\n        }\r\n        if (this.props.checkoutWindows.successOrder) {\r\n            this.props.closeSuccessOrder();\r\n            document.body.style.overflow=\"auto\";\r\n        }\r\n        if (this.props.checkoutWindows.unsuccessOrder) {\r\n            this.props.closeUnsuccessOrder();\r\n            document.body.style.overflow=\"auto\";\r\n        }\r\n\r\n    };\r\n\r\n    render() {\r\n\r\n\r\n\r\n        return (\r\n            <div onClick={this.handleCloseForms}>\r\n                <Header/>\r\n                <Switch>\r\n                    <Route exact path=\"/\" component={MainPage}/>\r\n                    <Route exact path=\"/about-us\" component={AboutUs}/>\r\n                    <Route exact path=\"/our-policy\" component={OurPolicy}/>\r\n                    <Route exact path=\"/careers\" component={Careers}/>\r\n                    <Route path=\"/users/profile\" component={Profile}/>\r\n                    <Route path=\"/checkout\" component={Checkout}/>\r\n                    <Route exact path=\"/cart\" component={Cart}/>\r\n                    <Route exact path=\"/unsubscribe/:id\" component={Unsubscribe}/>\r\n                    <Route exact path=\"/:category/:subCategory/:furtherSubCategory?/:id(\\d+)\" component={ProductPage}/>\r\n                    <Route exact path=\"/:category/:subCategory?/:furtherSubCategory?\" component={FilteredProductList}/>\r\n                </Switch>\r\n                <Footer/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        windowsStatus: state.login.windowsStatus,\r\n        focus: state.search.focus,\r\n        checkoutWindows: state.cart.windows\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        closeLoginForm: () => {\r\n            dispatch({type: CLOSE_LOGIN_FORM});\r\n        },\r\n        closeLoginDetails: () => {\r\n            dispatch({type: CLOSE_LOGIN_DETAILS});\r\n        },\r\n        closeRegForm: () => {\r\n            dispatch({type: CLOSE_REG_FORM});\r\n        },\r\n        closeRegistrationOk: () => {\r\n            dispatch({type: CLOSE_REG_OK_FORM});\r\n        },\r\n\r\n        blurSearchInput: e => dispatch(blurSearchInput(e)),\r\n        closeSuccessOrder: () => {\r\n            dispatch({type: CLOSE_MODAL_SUCCESS_ORDER});\r\n        },\r\n        closeUnsuccessOrder: () => {\r\n            dispatch({type: CLOSE_MODAL_UNSUCCESS_ORDER});\r\n        },\r\n        setOffsetY: (value) => {\r\n            dispatch({type: SET_OFFSET_Y, payload: {value: value}})\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Dashboard);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Preloader from \"../../Preloader\";\r\n\r\nimport {\r\n  getAdmNavMenuItems,\r\n  changeSelectedItemActiveStatus,\r\n  addNewCategory,\r\n  addNewSubCategory,\r\n  addNewFurtherSubCategory,\r\n  saveUpdatedNavMenu\r\n} from \"../../../actions/adminDashboard/admNavMenuActions\";\r\n\r\nimport \"./admNavMenu.scss\";\r\n\r\nclass AdmNavMenu extends Component {\r\n  // Calling action-creator for getting from server object with Navigation Menu Items\r\n  componentDidMount() {\r\n    this.props.getAdmNavMenuItems();\r\n  }\r\n\r\n  state = {\r\n    chosenCategory: \"\",\r\n    chosenSubCategory: \"\",\r\n    newCategotyName: \"\",\r\n    newSubCategotyName: \"\",\r\n    newFurtherSubCategotyName: \"\",\r\n    errorMsg: {}\r\n  };\r\n\r\n  resetState = e => {\r\n    this.setState({\r\n      newCategotyName: \"\",\r\n      newSubCategotyName: \"\",\r\n      newFurtherSubCategotyName: \"\"\r\n    });\r\n  };\r\n\r\n  handleNewItemsChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n\r\n    let errors = {};\r\n\r\n    if (e.target.value.length < 3) {\r\n      errors[e.target.name] = \"Must be at least 3 characters long\";\r\n    }\r\n\r\n    this.setState({\r\n      errorMsg: errors\r\n    });\r\n  };\r\n\r\n  handleCategoryRadio = e => {\r\n    this.setState({\r\n      chosenCategory: e.target.value,\r\n      chosenSubCategory: \"\"\r\n    });\r\n  };\r\n\r\n  handleSubCategoryRadio = e => {\r\n    this.setState({\r\n      chosenSubCategory: e.target.value\r\n    });\r\n  };\r\n\r\n  render() {\r\n    //Creating our Category list ===========================================================\r\n    let chosenCategory = this.state.chosenCategory;\r\n\r\n    let categories = this.props.navMenuItems.map(category => {\r\n      const isCategoryCurrent = chosenCategory === category.categoryName;\r\n\r\n      return (\r\n        <li className=\"admin-nav-menu-item\" key={category._id}>\r\n          <div className=\"admin-nav-menu-item-left\">\r\n            <label\r\n              className={\r\n                isCategoryCurrent\r\n                  ? \"admin-nav-menu-item-left-label admin-nav-menu-item-left-label--selected\"\r\n                  : \"admin-nav-menu-item-left-label\"\r\n              }\r\n            >\r\n              <input\r\n                className=\"admin-nav-menu-item-left-radio\"\r\n                type=\"radio\"\r\n                name=\"categories\"\r\n                value={category.categoryName}\r\n                onChange={this.handleCategoryRadio}\r\n              />\r\n              {category.categoryName.charAt(0).toUpperCase() +\r\n                category.categoryName.slice(1).toLowerCase()}\r\n            </label>\r\n          </div>\r\n          <div className=\"admin-nav-menu-item-right\">\r\n            <div className=\"onoffswitch\">\r\n              <input\r\n                type=\"checkbox\"\r\n                name=\"onoffswitch\"\r\n                className=\"onoffswitch-checkbox\"\r\n                id={category.categoryName}\r\n                // defaultChecked={category.active}\r\n                checked={category.active}\r\n                onChange={e =>\r\n                  this.props.changeSelectedItemActiveStatus(\r\n                    e,\r\n                    this.props.navMenuItems,\r\n                    category._id\r\n                  )\r\n                }\r\n              />\r\n              <label\r\n                className=\"onoffswitch-label\"\r\n                htmlFor={category.categoryName}\r\n              >\r\n                <span className=\"onoffswitch-inner\" />\r\n                <span className=\"onoffswitch-switch\" />\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </li>\r\n      );\r\n    });\r\n\r\n    // Creating our Sub-category list ===========================================================\r\n    let chosenSubCategory = this.state.chosenSubCategory;\r\n\r\n    let subCategories = this.props.navMenuItems.map(category => {\r\n      if (category.categoryName === this.state.chosenCategory) {\r\n        return category.subCategoryList.map(subCategory => {\r\n          const isSubCategoryCurrent =\r\n            chosenSubCategory === subCategory.subCategoryName;\r\n\r\n          return (\r\n            <li className=\"admin-nav-menu-item\" key={subCategory._id}>\r\n              <div className=\"admin-nav-menu-item-left\">\r\n                <label\r\n                  className={\r\n                    isSubCategoryCurrent\r\n                      ? \"admin-nav-menu-item-left-label admin-nav-menu-item-left-label--selected\"\r\n                      : \"admin-nav-menu-item-left-label\"\r\n                  }\r\n                >\r\n                  <input\r\n                    className=\"admin-nav-menu-item-left-radio\"\r\n                    type=\"radio\"\r\n                    name=\"subCategories\"\r\n                    value={subCategory.subCategoryName}\r\n                    onChange={this.handleSubCategoryRadio}\r\n                  />\r\n                  {subCategory.subCategoryName.charAt(0).toUpperCase() +\r\n                    subCategory.subCategoryName.slice(1).toLowerCase()}\r\n                </label>\r\n              </div>\r\n              <div className=\"admin-nav-menu-item-right\">\r\n                <div className=\"onoffswitch\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"onoffswitch\"\r\n                    className=\"onoffswitch-checkbox\"\r\n                    id={subCategory.subCategoryName}\r\n                    // defaultChecked={subCategory.active}\r\n                    checked={subCategory.active}\r\n                    onChange={e =>\r\n                      this.props.changeSelectedItemActiveStatus(\r\n                        e,\r\n                        this.props.navMenuItems,\r\n                        subCategory._id\r\n                      )\r\n                    }\r\n                  />\r\n                  <label\r\n                    className=\"onoffswitch-label\"\r\n                    htmlFor={subCategory.subCategoryName}\r\n                  >\r\n                    <span className=\"onoffswitch-inner\" />\r\n                    <span className=\"onoffswitch-switch\" />\r\n                  </label>\r\n                </div>\r\n              </div>\r\n            </li>\r\n          );\r\n        });\r\n      }\r\n      return null;\r\n    });\r\n\r\n    // Creating our Further Sub-category list ===========================================================\r\n    let furtherSubCategories = this.props.navMenuItems.map(category => {\r\n      return category.subCategoryList.map(subCategory => {\r\n        if (\r\n          category.categoryName === this.state.chosenCategory &&\r\n          subCategory.subCategoryName === this.state.chosenSubCategory\r\n        ) {\r\n          return subCategory.furtherSubCategoryList.map(furtherSubCategory => {\r\n            return (\r\n              <li className=\"admin-nav-menu-item\" key={furtherSubCategory._id}>\r\n                <div className=\"admin-nav-menu-item-left\">\r\n                  {furtherSubCategory.furtherSubCategoryName\r\n                    .charAt(0)\r\n                    .toUpperCase() +\r\n                    furtherSubCategory.furtherSubCategoryName\r\n                      .slice(1)\r\n                      .toLowerCase()}\r\n                </div>\r\n                <div className=\"admin-nav-menu-item-right\">\r\n                  <div className=\"onoffswitch\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      name=\"onoffswitch\"\r\n                      className=\"onoffswitch-checkbox\"\r\n                      id={furtherSubCategory.furtherSubCategoryName}\r\n                      // defaultChecked={furtherSubCategory.active}\r\n                      checked={furtherSubCategory.active}\r\n                      onChange={e =>\r\n                        this.props.changeSelectedItemActiveStatus(\r\n                          e,\r\n                          this.props.navMenuItems,\r\n                          furtherSubCategory._id\r\n                        )\r\n                      }\r\n                    />\r\n                    <label\r\n                      className=\"onoffswitch-label\"\r\n                      htmlFor={furtherSubCategory.furtherSubCategoryName}\r\n                    >\r\n                      <span className=\"onoffswitch-inner\" />\r\n                      <span className=\"onoffswitch-switch\" />\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </li>\r\n            );\r\n          });\r\n        }\r\n        return null;\r\n      });\r\n    });\r\n\r\n    return (\r\n      <>\r\n        {this.props.isMenuFetching ? (\r\n          <Preloader />\r\n        ) : (\r\n          <>\r\n            <div className=\"admin-nav-menu-wrapper\">\r\n              <div className=\"admin-nav-menu-block\">\r\n                <div className=\"admin-nav-menu-block-heading\">Category</div>\r\n                <div className=\"admin-nav-menu-block-content admin-nav-menu-categories\">\r\n                  <ul className=\"admin-nav-menu-list\">{categories}</ul>\r\n                  <div className=\"add-new-item-wrapper\">\r\n                    <input\r\n                      className=\"add-new-item-input\"\r\n                      type=\"text\"\r\n                      name=\"newCategotyName\"\r\n                      placeholder=\"Add new category\"\r\n                      value={this.state.newCategotyName}\r\n                      onChange={this.handleNewItemsChange}\r\n                    />\r\n                    <input\r\n                      className=\"add-new-item-save\"\r\n                      type=\"button\"\r\n                      value=\"Save\"\r\n                      onClick={() => {\r\n                        this.props.addNewCategory(\r\n                          this.state.newCategotyName.toLowerCase(),\r\n                          this.props.navMenuItems\r\n                        );\r\n                        this.resetState();\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  {/* {validationText} */}\r\n                  <div className=\"error-message\">\r\n                    {this.state.errorMsg.newCategotyName}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"admin-nav-menu-block\">\r\n                <div className=\"admin-nav-menu-block-heading\">Sub-category</div>\r\n                <div className=\"admin-nav-menu-block-content admin-nav-menu-subcategories\">\r\n                  <ul className=\"admin-nav-menu-list\">{subCategories}</ul>\r\n                  {this.state.chosenCategory ? (\r\n                    <div className=\"add-new-item-wrapper\">\r\n                      <input\r\n                        className=\"add-new-item-input\"\r\n                        type=\"text\"\r\n                        name=\"newSubCategotyName\"\r\n                        placeholder=\"Add new sub-category\"\r\n                        value={this.state.newSubCategotyName}\r\n                        onChange={this.handleNewItemsChange}\r\n                      />\r\n                      <input\r\n                        className=\"add-new-item-save\"\r\n                        type=\"button\"\r\n                        value=\"Save\"\r\n                        onClick={() => {\r\n                          this.props.addNewSubCategory(\r\n                            this.state.chosenCategory.toLowerCase(),\r\n                            this.state.newSubCategotyName.toLowerCase(),\r\n                            this.props.navMenuItems\r\n                          );\r\n                          this.resetState();\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  ) : null}\r\n                  {/* {validationText} */}\r\n                  <div className=\"error-message\">\r\n                    {this.state.errorMsg.newSubCategotyName}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"admin-nav-menu-block\">\r\n                <div className=\"admin-nav-menu-block-heading\">\r\n                  Further Sub-category\r\n                </div>\r\n                <div className=\"admin-nav-menu-block-content admin-nav-menu-furthersubcategories\">\r\n                  <ul className=\"admin-nav-menu-list\">\r\n                    {furtherSubCategories}\r\n                  </ul>\r\n                  {this.state.chosenSubCategory ? (\r\n                    <div className=\"add-new-item-wrapper\">\r\n                      <input\r\n                        className=\"add-new-item-input\"\r\n                        type=\"text\"\r\n                        name=\"newFurtherSubCategotyName\"\r\n                        placeholder=\"Add new sub-sub-category\"\r\n                        value={this.state.newFurtherSubCategotyName}\r\n                        onChange={this.handleNewItemsChange}\r\n                      />\r\n                      <input\r\n                        className=\"add-new-item-save\"\r\n                        type=\"button\"\r\n                        value=\"Save\"\r\n                        onClick={() => {\r\n                          this.props.addNewFurtherSubCategory(\r\n                            this.state.chosenCategory.toLowerCase(),\r\n                            this.state.chosenSubCategory.toLowerCase(),\r\n                            this.state.newFurtherSubCategotyName.toLowerCase(),\r\n                            this.props.navMenuItems\r\n                          );\r\n                          this.resetState();\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  ) : null}\r\n                  {/* {validationText} */}\r\n                  <div className=\"error-message\">\r\n                    {this.state.errorMsg.newFurtherSubCategotyName}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"admin-nav-menu-actions\">\r\n              <input\r\n                type=\"button\"\r\n                className=\"admin-nav-menu-button admin-nav-menu-reset\"\r\n                value=\"Reset\"\r\n                onClick={() => {\r\n                  this.props.getAdmNavMenuItems();\r\n                }}\r\n              />\r\n              <input\r\n                type=\"button\"\r\n                className=\"admin-nav-menu-button admin-nav-menu-submit\"\r\n                value=\"Save Changes\"\r\n                onClick={event =>\r\n                  this.props.saveUpdatedNavMenu(\r\n                    event,\r\n                    this.props.navMenuItems,\r\n                    this.props.getAdmNavMenuItems,\r\n                    this.state.errorMsg\r\n                  )\r\n                }\r\n              />\r\n            </div>\r\n          </>\r\n        )}\r\n        {this.props.resultMessage ? (\r\n          <div className=\"nav-menu-result-message\">\r\n            <p>{this.props.resultMessage}</p>\r\n          </div>\r\n        ) : null}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    state: state,\r\n    navMenuItems: state.admNavMenu.navMenuItems,\r\n    isMenuFetching: state.admNavMenu.isMenuFetching,\r\n    resultMessage: state.admNavMenu.resultMessage\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    getAdmNavMenuItems,\r\n    changeSelectedItemActiveStatus,\r\n    addNewCategory,\r\n    addNewSubCategory,\r\n    addNewFurtherSubCategory,\r\n    saveUpdatedNavMenu\r\n  }\r\n)(AdmNavMenu);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Select from \"react-select\";\r\nimport Dropzone from \"react-dropzone\";\r\n\r\nimport Preloader from \"../../Preloader\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faImages } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport \"./admProducts.scss\";\r\n\r\nimport {\r\n  getCategory,\r\n  getSubCategory,\r\n  getFurtherSubCategory,\r\n  getProductModelName,\r\n  getwithdrawnStatus,\r\n  getActiveStatus,\r\n  getCurrentPrice,\r\n  getPreviousPrice,\r\n  getProductFeatures,\r\n  handleProductColors,\r\n  addColor,\r\n  addSize,\r\n  getImages,\r\n  onFilesRejected,\r\n  deleteDropzoneImage,\r\n  deleteSize,\r\n  deleteColor,\r\n  handleProductSizes,\r\n  handleProductQuantity,\r\n  resetModal,\r\n  resetForm,\r\n  generateNewItemNo,\r\n  sendNewProductToServer\r\n} from \"../../../actions/adminDashboard/admProductsActions\";\r\nimport { getAdmNavMenuItems } from \"../../../actions/adminDashboard/admNavMenuActions\";\r\n\r\nclass AdmProducts extends Component {\r\n  // Calling action-creator for getting from server object with Navigation Menu Items\r\n  componentDidMount() {\r\n    this.props.getAdmNavMenuItems();\r\n    this.props.getProductFeatures();\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      category,\r\n      subCategory,\r\n      furtherSubCategory,\r\n      navMenuItems,\r\n      subCategoryOptions,\r\n      furtherSubCategoryOptions,\r\n      getCategory,\r\n      getSubCategory,\r\n      getFurtherSubCategory,\r\n      getProductModelName,\r\n      productModelName,\r\n      active,\r\n      withdrawnFromSale,\r\n      getwithdrawnStatus,\r\n      getActiveStatus,\r\n      currentPrice,\r\n      previousPrice,\r\n      getCurrentPrice,\r\n      getPreviousPrice,\r\n      productFeatures,\r\n      colorOptions,\r\n      colorStyles,\r\n      sizeOptions,\r\n      handleProductColors,\r\n      addColor,\r\n      addSize,\r\n      getImages,\r\n      onFilesRejected,\r\n      deleteDropzoneImage,\r\n      deleteSize,\r\n      deleteColor,\r\n      handleProductSizes,\r\n      handleProductQuantity,\r\n      resetModalStatus,\r\n      resetModal,\r\n      resetForm,\r\n      admProducts,\r\n      generateNewItemNo,\r\n      sendNewProductToServer,\r\n      validation,\r\n      fetchingNewProduct,\r\n      productMessage,\r\n      photosMessage,\r\n      itemNo,\r\n      colorCollectionUpdateMessage,\r\n      sizeCollectionUpdateMessage\r\n    } = this.props;\r\n\r\n    //Options for category input-select (men / women)\r\n    let categoryOptions = navMenuItems.map(cat => {\r\n      return {\r\n        value: cat.categoryName,\r\n        label: cat.categoryName\r\n      };\r\n    });\r\n\r\n    let productFeaturesList = productFeatures.map((color, colorIndex) => {\r\n      //Detecting the css-code of the color, chosen in input-select to show this color to user\r\n      let currentColor = colorStyles.filter(item => {\r\n        return item.colorName === color.colorName.value;\r\n      });\r\n\r\n      let currentColorCssHexCode = \"#ffffff\";\r\n\r\n      if (currentColor.length > 0) {\r\n        currentColorCssHexCode = currentColor[0][\"cssHexCode\"];\r\n      }\r\n\r\n      let dublicates = [\r\n        ...new Set(\r\n          color.previewImages\r\n            .map((img, i) => {\r\n              return img.name;\r\n            })\r\n            .sort()\r\n            .filter((imgName, i, imgNamesArr) => {\r\n              return imgNamesArr[i + 1] === imgNamesArr[i];\r\n            })\r\n        )\r\n      ];\r\n\r\n      //Creating image-preview component for react-dropzone\r\n      let previewImagesContent = color.previewImages.map((image, i, arr) => {\r\n        return (\r\n          <li className=\"image-preview-item\" key={image.preview}>\r\n            <img\r\n              src={image.preview}\r\n              alt=\"Files Preview\"\r\n              className={\r\n                dublicates.includes(image.name)\r\n                  ? \"image-preview-image image-preview-image-dublicate\"\r\n                  : \"image-preview-image\"\r\n              }\r\n              data-index={i}\r\n            />\r\n            <input\r\n              type=\"button\"\r\n              className={\r\n                dublicates.includes(image.name)\r\n                  ? \"delete-image delete-image-dublicate\"\r\n                  : \"delete-image\"\r\n              }\r\n              data-action=\"delete-image\"\r\n              value=\"Delete image\"\r\n            />\r\n          </li>\r\n        );\r\n      });\r\n\r\n      // Rendering product size block\r\n      let sizeItemList = color.sizes.map((size, sizeIndex) => {\r\n        return (\r\n          <li className=\"admin-products-sizes-item\" key={sizeIndex}>\r\n            <Select\r\n              className=\"admin-products-sizes-select\"\r\n              placeholder=\"Chose size\"\r\n              options={sizeOptions}\r\n              value={productFeatures[colorIndex].sizes[sizeIndex].size}\r\n              onChange={option =>\r\n                handleProductSizes(\r\n                  option,\r\n                  productFeatures,\r\n                  colorIndex,\r\n                  sizeIndex,\r\n                  validation\r\n                )\r\n              }\r\n            />\r\n            <input\r\n              type=\"number\"\r\n              placeholder=\"Fill quantity\"\r\n              className=\"admin-products-sizes-quantity\"\r\n              value={productFeatures[colorIndex].sizes[sizeIndex].quantity}\r\n              onChange={e =>\r\n                handleProductQuantity(\r\n                  e.target.value,\r\n                  productFeatures,\r\n                  colorIndex,\r\n                  sizeIndex\r\n                )\r\n              }\r\n            />\r\n            {sizeIndex > 0 ? (\r\n              <input\r\n                type=\"button\"\r\n                className=\"admin-products-sizes-delete\"\r\n                value=\"Delete Size\"\r\n                onClick={() =>\r\n                  deleteSize(productFeatures, colorIndex, sizeIndex, validation)\r\n                }\r\n              />\r\n            ) : null}\r\n            <div className=\"error-message\">\r\n              {validation.productFeatures[colorIndex].sizes[sizeIndex].size\r\n                ? validation.productFeatures[colorIndex].sizes[sizeIndex].size\r\n                : null}\r\n            </div>\r\n          </li>\r\n        );\r\n      });\r\n\r\n      return (\r\n        <div className=\"admin-products-productfeatures\" key={colorIndex}>\r\n          {colorIndex > 0 ? (\r\n            <input\r\n              type=\"button\"\r\n              className=\"delete-color\"\r\n              value=\"Delete Color\"\r\n              onClick={() =>\r\n                deleteColor(productFeatures, colorIndex, validation)\r\n              }\r\n            />\r\n          ) : null}\r\n          <div className=\"admin-products-color-item\">\r\n            <div className=\"admin-products-color-text\">\r\n              <label className=\"admin-products-input-label\">\r\n                Product Color #{colorIndex + 1}\r\n              </label>\r\n              <Select\r\n                value={productFeatures[colorIndex].colorName}\r\n                onChange={option =>\r\n                  handleProductColors(\r\n                    option,\r\n                    productFeatures,\r\n                    colorIndex,\r\n                    colorStyles,\r\n                    validation\r\n                  )\r\n                }\r\n                options={colorOptions}\r\n                placeholder=\"Chose color\"\r\n              />\r\n              <div className=\"error-message\">\r\n                {validation.productFeatures[colorIndex].colorName\r\n                  ? validation.productFeatures[colorIndex].colorName\r\n                  : null}\r\n              </div>\r\n            </div>\r\n            <div\r\n              className=\"admin-products-color-styled\"\r\n              style={{\r\n                backgroundColor: currentColorCssHexCode\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"admin-products-photos\">\r\n            <p className=\"admin-products-input-label\">\r\n              Drop images or click to select a file to upload\r\n            </p>\r\n            <Dropzone\r\n              multiple\r\n              onDrop={files => {\r\n                getImages(files, productFeatures, colorIndex, validation);\r\n              }}\r\n              onDropRejected={() =>\r\n                onFilesRejected(productFeatures, colorIndex)\r\n              }\r\n              onClick={e =>\r\n                deleteDropzoneImage(e, productFeatures, colorIndex, validation)\r\n              }\r\n              accept={[\"image/png\", \"image/jpg\", \"image/jpeg\"]}\r\n              className=\"image-dropzone\"\r\n              activeClassName=\"image-dropzone-active\"\r\n              acceptClassName=\"image-dropzone-accepted\"\r\n              rejectClassName=\"image-dropzone-rejected\"\r\n              maxSize={5000000}\r\n            >\r\n              {color.previewImages.length < 1 ? (\r\n                <FontAwesomeIcon\r\n                  icon={faImages}\r\n                  className=\"dropzone-placeholder\"\r\n                />\r\n              ) : (\r\n                <div className=\"image-preview\">\r\n                  <ul className=\"image-preview-list\">{previewImagesContent}</ul>\r\n                </div>\r\n              )}\r\n            </Dropzone>\r\n            {color.filesRejected ? (\r\n              <div className=\"error-message\">\r\n                Files upload are rejected. Please, check that files extension\r\n                are .png / .jpg / .jpeg and there size does not exceed 1MB{\" \"}\r\n              </div>\r\n            ) : (\r\n              <div className=\"stansart-message\">\r\n                Max-size: 1MB, allowed extensions: .png / .jpg / .jpeg{\" \"}\r\n              </div>\r\n            )}\r\n            <div className=\"error-message\">\r\n              {validation.productFeatures[colorIndex].previewImages\r\n                ? validation.productFeatures[colorIndex].previewImages\r\n                : validation.productFeatures[colorIndex].imageNamesDuplicate\r\n                ? validation.productFeatures[colorIndex].imageNamesDuplicate\r\n                : null}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"admin-products-sizes\">\r\n            <ul className=\"admin-products-sizes-list\">{sizeItemList}</ul>\r\n          </div>\r\n          <div className=\"error-message\">\r\n            {validation.productFeatures[colorIndex].sizeDublicate\r\n              ? validation.productFeatures[colorIndex].sizeDublicate\r\n              : null}\r\n          </div>\r\n          <input\r\n            type=\"button\"\r\n            value=\"Add Size\"\r\n            className=\"add-size-btn\"\r\n            onClick={() => addSize(productFeatures, colorIndex, validation)}\r\n          />\r\n        </div>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <>\r\n        <div className=\"itemNo-wrapper\">\r\n          <input\r\n            type=\"button\"\r\n            className=\"generate-new-itemNo\"\r\n            value=\"Generate New ItemNo (ProductId)\"\r\n            onClick={generateNewItemNo}\r\n          />\r\n          <span className=\"itemNo-value\">\r\n            {itemNo ? itemNo : \"ItemNo is not generated\"}\r\n          </span>\r\n        </div>\r\n        <div className=\"admin-products-wrapper\">\r\n          <form\r\n            className=\"admin-products-form\"\r\n            encType=\"multipart/form-data\"\r\n            method=\"post\"\r\n          >\r\n            <div className=\"admin-products-category-wrapper\">\r\n              <div className=\"admin-products-categories\">\r\n                <div className=\"admin-products-categories-item\">\r\n                  <label className=\"admin-products-input-label\">Category</label>\r\n                  <Select\r\n                    value={category}\r\n                    onChange={option =>\r\n                      getCategory(option, navMenuItems, validation)\r\n                    }\r\n                    options={categoryOptions}\r\n                    placeholder=\"Chose category\"\r\n                    required\r\n                    // isClearable\r\n                  />\r\n                  <div className=\"error-message\">\r\n                    {validation.category ? validation.category : null}\r\n                  </div>\r\n                </div>\r\n                <div className=\"admin-products-categories-item\">\r\n                  <label className=\"admin-products-input-label\">\r\n                    Sub-Category\r\n                  </label>\r\n                  <Select\r\n                    value={subCategory}\r\n                    onChange={option =>\r\n                      getSubCategory(option, navMenuItems, category, validation)\r\n                    }\r\n                    options={subCategoryOptions}\r\n                    placeholder={category.value ? \"Chose sub-category\" : null}\r\n                    isDisabled={category.value ? false : true}\r\n                  />\r\n                  <div className=\"error-message\">\r\n                    {validation.subCategory ? validation.subCategory : null}\r\n                  </div>\r\n                </div>\r\n                <div className=\"admin-products-categories-item\">\r\n                  <label className=\"admin-products-input-label\">\r\n                    Sub-Sub-Category\r\n                  </label>\r\n                  <Select\r\n                    value={furtherSubCategory}\r\n                    onChange={option =>\r\n                      getFurtherSubCategory(option, validation)\r\n                    }\r\n                    options={furtherSubCategoryOptions}\r\n                    placeholder={\r\n                      subCategory.value ? \"Chose sub-sub-category\" : null\r\n                    }\r\n                    isDisabled={\r\n                      furtherSubCategoryOptions.length < 1\r\n                        ? true\r\n                        : subCategory.value\r\n                        ? false\r\n                        : true\r\n                    }\r\n                  />\r\n                  <div className=\"error-message\">\r\n                    {validation.furtherSubCategory\r\n                      ? validation.furtherSubCategory\r\n                      : null}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"admin-products-model\">\r\n                <label className=\"admin-products-input-label\">\r\n                  Product Model Name\r\n                </label>\r\n                <input\r\n                  className=\"admin-products-model-input\"\r\n                  type=\"text\"\r\n                  placeholder=\"Enter product model name\"\r\n                  value={productModelName}\r\n                  onChange={e =>\r\n                    getProductModelName(e.target.value, validation)\r\n                  }\r\n                />\r\n                <div className=\"error-message\">\r\n                  {validation.productModelName\r\n                    ? validation.productModelName\r\n                    : null}\r\n                </div>\r\n              </div>\r\n              <div className=\"admin-products-status\">\r\n                <label className=\"admin-products-status-label\">\r\n                  <input\r\n                    className=\"admin-products-checkbox\"\r\n                    name=\"isWithdrawn\"\r\n                    type=\"checkbox\"\r\n                    checked={withdrawnFromSale}\r\n                    onChange={e => getwithdrawnStatus(e.target.checked)}\r\n                  />\r\n                  <p className=\"admin-products-status-label-text\">\r\n                    Mark if withdrawn from sale\r\n                  </p>\r\n                </label>\r\n                <label className=\"admin-products-status-label\">\r\n                  <input\r\n                    className=\"admin-products-checkbox\"\r\n                    name=\"isActive\"\r\n                    type=\"checkbox\"\r\n                    checked={active}\r\n                    onChange={e => getActiveStatus(e.target.checked)}\r\n                  />\r\n                  <p className=\"admin-products-status-label-text\">\r\n                    Mark to not show in product lists\r\n                  </p>\r\n                </label>\r\n              </div>\r\n              <div className=\"admin-products-prices\">\r\n                <div className=\"admin-products-price\">\r\n                  <label className=\"admin-products-input-label\">\r\n                    Current Price:\r\n                  </label>\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"admin-products-price-input\"\r\n                    placeholder=\"Enter current price\"\r\n                    value={currentPrice}\r\n                    onChange={e =>\r\n                      getCurrentPrice(e.target.value, validation, previousPrice)\r\n                    }\r\n                  />\r\n                  <span className=\"dollar\">$</span>\r\n                  <div className=\"error-message\">\r\n                    {validation.currentPrice ? validation.currentPrice : null}\r\n                  </div>\r\n                </div>\r\n                <div className=\"admin-products-price\">\r\n                  <label className=\"admin-products-input-label\">\r\n                    Previous Price:\r\n                  </label>\r\n                  <input\r\n                    className=\"admin-products-price-input\"\r\n                    type=\"number\"\r\n                    placeholder=\"Enter previous price\"\r\n                    value={previousPrice}\r\n                    onChange={e =>\r\n                      getPreviousPrice(e.target.value, validation, currentPrice)\r\n                    }\r\n                  />\r\n                  <span className=\"dollar\">$</span>\r\n                  <div className=\"error-message\">\r\n                    {validation.previousPrice ? validation.previousPrice : null}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {productFeaturesList}\r\n            <div className=\"error-message\">\r\n              {validation.colorDublicate ? validation.colorDublicate : null}\r\n            </div>\r\n            <input\r\n              type=\"button\"\r\n              value=\"Add Color\"\r\n              className=\"add-color-btn\"\r\n              onClick={() => addColor(productFeatures, validation)}\r\n            />\r\n            <div className=\"admin-products-final-actions\">\r\n              <input\r\n                type=\"button\"\r\n                className=\"admin-products-reset\"\r\n                value=\"Reset\"\r\n                onClick={() => resetModal(true)}\r\n              />\r\n              <input\r\n                type=\"button\"\r\n                className=\"admin-products-submit\"\r\n                value=\"Save New Product To Database\"\r\n                onClick={() => {\r\n                  sendNewProductToServer(\r\n                    admProducts,\r\n                    validation,\r\n                    furtherSubCategoryOptions\r\n                  );\r\n                }}\r\n              />\r\n            </div>\r\n          </form>\r\n          <div\r\n            className={resetModalStatus ? \"reset-modal\" : \"reset-modal-hide\"}\r\n          >\r\n            <span className=\"reset-modal-text\">\r\n              Are you sure you want to reset all filled information??? After\r\n              clearing the filled fields, they will need to be filled again to\r\n              add a new product to the database.\r\n            </span>\r\n            <div className=\"reset-modal-actions\">\r\n              <input\r\n                type=\"button\"\r\n                className=\"reset-modal-btn reset-modal-cansel\"\r\n                value=\"Cancel\"\r\n                onClick={() => resetModal(false)}\r\n              />\r\n              <input\r\n                type=\"button\"\r\n                className=\"reset-modal-btn reset-modal-confirm\"\r\n                value=\"Confirm\"\r\n                onClick={() => resetForm(admProducts)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"server-message\">\r\n          {fetchingNewProduct ? <Preloader /> : null}\r\n          {productMessage ? (\r\n            <div className=\"server-message-product\">{productMessage}</div>\r\n          ) : null}\r\n          {photosMessage ? (\r\n            <div className=\"server-message-images\"> {photosMessage}</div>\r\n          ) : null}\r\n          {colorCollectionUpdateMessage ? (\r\n            <div className=\"server-message-images\">\r\n              {\" \"}\r\n              {colorCollectionUpdateMessage}\r\n            </div>\r\n          ) : null}\r\n          {sizeCollectionUpdateMessage ? (\r\n            <div className=\"server-message-images\">\r\n              {\" \"}\r\n              {sizeCollectionUpdateMessage}\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    admProducts: state.admProducts,\r\n    navMenuItems: state.navMenu.navMenuItems,\r\n    category: state.admProducts.category,\r\n    subCategory: state.admProducts.subCategory,\r\n    furtherSubCategory: state.admProducts.furtherSubCategory,\r\n    subCategoryOptions: state.admProducts.subCategoryOptions,\r\n    furtherSubCategoryOptions: state.admProducts.furtherSubCategoryOptions,\r\n    productModelName: state.admProducts.productModelName,\r\n    active: state.admProducts.active,\r\n    withdrawnFromSale: state.admProducts.withdrawnFromSale,\r\n    currentPrice: state.admProducts.currentPrice,\r\n    previousPrice: state.admProducts.previousPrice,\r\n    productFeatures: state.admProducts.productFeatures,\r\n    colorOptions: state.admProducts.colorOptions,\r\n    sizeOptions: state.admProducts.sizeOptions,\r\n    colorStyles: state.admProducts.colorStyles,\r\n    itemNo: state.admProducts.itemNo,\r\n    resetModalStatus: state.admProducts.resetModalStatus,\r\n    validation: state.admProducts.validation,\r\n    fetchingNewProduct: state.admProducts.fetchingNewProduct,\r\n    productMessage: state.admProducts.productMessage,\r\n    photosMessage: state.admProducts.photosMessage,\r\n    colorCollectionUpdateMessage:\r\n      state.admProducts.colorCollectionUpdateMessage,\r\n    sizeCollectionUpdateMessage: state.admProducts.sizeCollectionUpdateMessage,\r\n    existingColors: state.admColors.existingColors\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    getCategory,\r\n    getSubCategory,\r\n    getFurtherSubCategory,\r\n    getAdmNavMenuItems,\r\n    getProductModelName,\r\n    getwithdrawnStatus,\r\n    getActiveStatus,\r\n    getCurrentPrice,\r\n    getPreviousPrice,\r\n    getProductFeatures,\r\n    handleProductColors,\r\n    addColor,\r\n    addSize,\r\n    getImages,\r\n    onFilesRejected,\r\n    deleteDropzoneImage,\r\n    deleteSize,\r\n    deleteColor,\r\n    handleProductSizes,\r\n    handleProductQuantity,\r\n    resetModal,\r\n    resetForm,\r\n    generateNewItemNo,\r\n    sendNewProductToServer\r\n  }\r\n)(AdmProducts);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { SketchPicker } from \"react-color\";\r\nimport Preloader from \"../../Preloader\";\r\n\r\nimport {\r\n  getNewColorHex,\r\n  getNewColorName,\r\n  checkNewColorInDb,\r\n  handleNewColorModal,\r\n  addOrUpdateColorInDb,\r\n  getExistingColorsFromDb,\r\n  updateColorsInAllProducts\r\n} from \"../../../actions/adminDashboard/admColorActions\";\r\n\r\nimport { getProductFeatures } from \"../../../actions/adminDashboard/admProductsActions\";\r\n\r\nimport \"./admColors.scss\";\r\n\r\nclass AdmColors extends Component {\r\n  componentDidMount() {\r\n    this.props.getExistingColorsFromDb();\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      // state\r\n      newColorName,\r\n      newCssHexCode,\r\n      newColorModalStatus,\r\n      isExistingColorsFetching,\r\n      newColorMessage,\r\n      existingColorObject,\r\n      finalMessage,\r\n      newColorObject,\r\n      isAllColorsFetching,\r\n      existingColors,\r\n\r\n      // actions\r\n      getNewColorName,\r\n      getNewColorHex,\r\n      checkNewColorInDb,\r\n      handleNewColorModal,\r\n      addOrUpdateColorInDb,\r\n      getExistingColorsFromDb,\r\n      updateColorsInAllProducts\r\n    } = this.props;\r\n\r\n    let existingColorsList = existingColors.map(color => {\r\n      return (\r\n        <li className=\"existing-colors-item\" key={color._id}>\r\n          <div\r\n            className=\"existing-colors-style\"\r\n            style={{ backgroundColor: color.cssHexCode }}\r\n          />\r\n          <div className=\"existing-colors-text\">\r\n            <p>{color.colorName}</p>\r\n          </div>\r\n          <div className=\"existing-colors-text\">\r\n            <p>{color.cssHexCode}</p>\r\n          </div>\r\n        </li>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <>\r\n        <div className=\"admin-color-wrapper\">\r\n          <p className=\"admin-color-title\">Add New Color</p>\r\n          <div className=\"add-color\">\r\n            <SketchPicker\r\n              className=\"add-color-picker\"\r\n              color={newCssHexCode}\r\n              onChangeComplete={getNewColorHex}\r\n            />\r\n            <div className=\"add-color-actions\">\r\n              <div className=\"add-color-item\">\r\n                <label className=\"add-color-label\" htmlFor=\"color-name\">\r\n                  Enter color name:{\" \"}\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"add-color-input\"\r\n                  id=\"color-name\"\r\n                  value={newColorName}\r\n                  onChange={e => getNewColorName(e.target.value)}\r\n                />\r\n              </div>\r\n              <div className=\"add-color-item\">\r\n                <label className=\"add-color-label\" htmlFor=\"color-hexcode\">\r\n                  cssHexCode:{\" \"}\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"add-color-input\"\r\n                  id=\"color-hexcode\"\r\n                  value={newCssHexCode}\r\n                  disabled\r\n                />\r\n              </div>\r\n              <input\r\n                type=\"button\"\r\n                className=\"add-color-save\"\r\n                value=\"Save new color\"\r\n                onClick={() => {\r\n                  checkNewColorInDb(newColorName, newCssHexCode);\r\n                  handleNewColorModal(true);\r\n                }}\r\n                disabled={newColorName && newCssHexCode ? false : true}\r\n              />\r\n            </div>\r\n          </div>\r\n          {newColorModalStatus ? (\r\n            <div className=\"color-alert-modal\">\r\n              {isExistingColorsFetching ? (\r\n                <Preloader />\r\n              ) : (\r\n                <>\r\n                  <div className=\"color-alert-message-1\">\r\n                    {newColorMessage\r\n                      ? \"Color with the next parameters is found in DB:\"\r\n                      : \"Color with the next parameters is not found in DB:\"}{\" \"}\r\n                  </div>\r\n                  <div className=\"color-alert-params\">\r\n                    <p className=\"color-alert-param\">\r\n                      Name of color:{\" \"}\r\n                      {newColorMessage\r\n                        ? existingColorObject.colorName\r\n                        : newColorName}\r\n                    </p>\r\n                    <p className=\"color-alert-param\">\r\n                      Color hex code:{\" \"}\r\n                      {newColorMessage\r\n                        ? existingColorObject.cssHexCode\r\n                        : newCssHexCode}\r\n                    </p>\r\n                  </div>\r\n                  <span\r\n                    className=\"color-alert-style\"\r\n                    style={\r\n                      newColorMessage\r\n                        ? { backgroundColor: existingColorObject.cssHexCode }\r\n                        : { backgroundColor: newCssHexCode }\r\n                    }\r\n                  >\r\n                    How color looks\r\n                  </span>\r\n                  <div className=\"color-alert-message-2\">\r\n                    {newColorMessage\r\n                      ? `If you want to update this color to DB (rewrite color parameters), click 'Update Color', othervise - click 'Cancel'. \r\n\t\t\t\t\t\t\t\tAttention: color will be updated in every product, where it is present.`\r\n                      : \"If you want to add new color to DB, click 'Add Color', othervise - click 'Cancel'\"}\r\n                  </div>\r\n                  <div className=\"color-alert-actions\">\r\n                    <input\r\n                      type=\"button\"\r\n                      className=\"color-alert-action cancel\"\r\n                      value=\"Cancel\"\r\n                      onClick={() => handleNewColorModal(false)}\r\n                    />\r\n                    <input\r\n                      type=\"button\"\r\n                      className=\"color-alert-action accept\"\r\n                      value={newColorMessage ? \"Update Color\" : \"Add Color\"}\r\n                      onClick={() => {\r\n                        addOrUpdateColorInDb(\r\n                          newColorName,\r\n                          newCssHexCode,\r\n                          getExistingColorsFromDb,\r\n                          this.props.getProductFeatures,\r\n                          updateColorsInAllProducts\r\n                        );\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </>\r\n              )}\r\n            </div>\r\n          ) : null}\r\n          {finalMessage ? (\r\n            <div className=\"final-message\">\r\n              <p>{finalMessage}</p>\r\n              {Object.keys(newColorObject).length > 0 ? (\r\n                <>\r\n                  <div className=\"color-alert-params\">\r\n                    <p className=\"color-alert-param\">\r\n                      Name of color: {newColorObject.colorName}\r\n                    </p>\r\n                    <p className=\"color-alert-param\">\r\n                      Color hex code: {newColorObject.cssHexCode}\r\n                    </p>\r\n                  </div>\r\n                  <span\r\n                    className=\"color-alert-style\"\r\n                    style={{ backgroundColor: newColorObject.cssHexCode }}\r\n                  >\r\n                    How color looks\r\n                  </span>\r\n                </>\r\n              ) : null}\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n        <div className=\"existing-colors\">\r\n          <p className=\"admin-color-title\">See Existing Colors</p>\r\n          <ul className=\"existing-colors-list\">\r\n            {isAllColorsFetching ? <Preloader /> : existingColorsList}\r\n          </ul>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    newColorName: state.admColors.newColorName,\r\n    newCssHexCode: state.admColors.newCssHexCode,\r\n    newColorMessage: state.admColors.newColorMessage,\r\n    existingColorObject: state.admColors.existingColorObject,\r\n    newColorModalStatus: state.admColors.newColorModalStatus,\r\n    isExistingColorsFetching: state.admColors.isExistingColorsFetching,\r\n    finalMessage: state.admColors.finalMessage,\r\n    newColorObject: state.admColors.newColorObject,\r\n    isAllColorsFetching: state.admColors.isAllColorsFetching,\r\n    existingColors: state.admColors.existingColors\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    getNewColorHex,\r\n    getNewColorName,\r\n    checkNewColorInDb,\r\n    handleNewColorModal,\r\n    addOrUpdateColorInDb,\r\n    getExistingColorsFromDb,\r\n    getProductFeatures,\r\n    updateColorsInAllProducts\r\n  }\r\n)(AdmColors);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Preloader from \"../../Preloader\";\r\n\r\nimport {\r\n  getNewSizeName,\r\n  saveNewSizeInDb,\r\n  getExistingSizes,\r\n  getUpdatedSize,\r\n  updateSizeInDb,\r\n  updateSizesInAllProducts\r\n} from \"../../../actions/adminDashboard/admSizeActions\";\r\n\r\nimport \"./admSizes.scss\";\r\n\r\nclass AdmSizes extends Component {\r\n  componentDidMount() {\r\n    this.props.getExistingSizes();\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      //state\r\n      newSizeName,\r\n      isNewSizeFetching,\r\n      checkNewSizeResult,\r\n      isExistingSizesFetching,\r\n      existingSizes,\r\n      updatingSizes,\r\n      sizeUpdateResults,\r\n      isSizeUpdating,\r\n      preUpdateValue,\r\n      updatedSizeValue,\r\n      errorMsg,\r\n      fetchExistingSizesMessage,\r\n\r\n      // actions\r\n      getNewSizeName,\r\n      saveNewSizeInDb,\r\n      getUpdatedSize,\r\n      updateSizeInDb,\r\n      getExistingSizes,\r\n      updateSizesInAllProducts\r\n    } = this.props;\r\n\r\n    let existingSizeValues = existingSizes.map(size => {\r\n      return (\r\n        <li className=\"admin-size-item\" key={size._id}>\r\n          {size.value}\r\n        </li>\r\n      );\r\n    });\r\n\r\n    let updatingSizeInputs = updatingSizes.map(size => {\r\n      return (\r\n        <li className=\"admin-size-item admin-size-item-multi\" key={size._id}>\r\n          <div className=\"admin-size-cell\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"admin-size-input\"\r\n              value={size.value}\r\n              onChange={e =>\r\n                getUpdatedSize(updatingSizes, size._id, e.target.value)\r\n              }\r\n            />\r\n            <input\r\n              type=\"button\"\r\n              className=\"admin-size-save\"\r\n              value=\"Save changes\"\r\n              disabled={size.value ? false : true}\r\n              onClick={() =>\r\n                updateSizeInDb(\r\n                  size._id,\r\n                  size.value,\r\n                  existingSizes,\r\n                  getExistingSizes,\r\n                  updateSizesInAllProducts\r\n                )\r\n              }\r\n            />\r\n            {preUpdateValue === size.value && isSizeUpdating ? (\r\n              <div className=\"admin-size-minipreloader\" />\r\n            ) : null}\r\n          </div>\r\n          {updatedSizeValue === size.value && sizeUpdateResults ? (\r\n            <span className=\"admin-size-msg\">{sizeUpdateResults}</span>\r\n          ) : null}\r\n        </li>\r\n      );\r\n    });\r\n\r\n    let categoriesInSizes = existingSizes.map(size => {\r\n      let multiArr = size.categories.map(cat => {\r\n        let sizeCat = cat.split(\"-\");\r\n        return (\r\n          sizeCat[sizeCat.length - 1].charAt(0).toUpperCase() +\r\n          sizeCat[sizeCat.length - 1].slice(1)\r\n        );\r\n      });\r\n\r\n      let uniqueCats = [...new Set(multiArr)];\r\n\r\n      let uniqueCatsString = uniqueCats.join(\", \");\r\n\r\n      return (\r\n        <li key={size._id} className=\"admin-size-item\">\r\n          {uniqueCatsString}\r\n        </li>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div className=\"admin-size\">\r\n        <p className=\"admin-size-title\"> Add New Size</p>\r\n        <div className=\"admin-size-new\">\r\n          <div className=\"admin-size-add\">\r\n            <label htmlFor=\"add-size\" className=\"admin-size-label\">\r\n              Fill size value:{\" \"}\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"admin-size-input\"\r\n              id=\"add-size\"\r\n              value={newSizeName}\r\n              onChange={e => getNewSizeName(e.target.value)}\r\n            />\r\n            <input\r\n              type=\"button\"\r\n              className=\"admin-size-save admin-size-save-new\"\r\n              value=\"Save\"\r\n              disabled={newSizeName ? false : true}\r\n              onClick={() => saveNewSizeInDb(newSizeName, getExistingSizes)}\r\n            />\r\n            <span className=\"admin-size-result\">\r\n              {isNewSizeFetching ? (\r\n                <div className=\"admin-size-minipreloader\" />\r\n              ) : (\r\n                checkNewSizeResult\r\n              )}\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <p className=\"admin-size-title\"> See / Update Existing Sizes</p>\r\n\r\n        {fetchExistingSizesMessage ? (\r\n          <span className=\"admin-size-error\">{fetchExistingSizesMessage}</span>\r\n        ) : null}\r\n\r\n        {errorMsg ? <p className=\"error-msg\">{errorMsg}</p> : null}\r\n        <div className=\"admin-size-existing\">\r\n          {isExistingSizesFetching ? (\r\n            <Preloader />\r\n          ) : (\r\n            <div className=\"admin-size-table\">\r\n              <div className=\"admin-size-row\">\r\n                <div className=\"admin-size-heading\">Current size</div>\r\n                <div className=\"admin-size-content\">\r\n                  <ul className=\"admin-size-list\">{existingSizeValues}</ul>\r\n                </div>\r\n              </div>\r\n              <div className=\"admin-size-row\">\r\n                <div className=\"admin-size-heading\">New size (update)</div>\r\n                <div className=\"admin-size-content\">\r\n                  <ul className=\"admin-size-list\">{updatingSizeInputs}</ul>\r\n                </div>\r\n              </div>\r\n              <div className=\"admin-size-row\">\r\n                <div className=\"admin-size-heading\">\r\n                  Categories sizes are in\r\n                </div>\r\n                <div className=\"admin-size-content\">\r\n                  <ul className=\"admin-size-list\">{categoriesInSizes}</ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    newSizeName: state.admSizes.newSizeName,\r\n    isNewSizeFetching: state.admSizes.isNewSizeFetching,\r\n    checkNewSizeResult: state.admSizes.checkNewSizeResult,\r\n    isExistingSizesFetching: state.admSizes.isExistingSizesFetching,\r\n    existingSizes: state.admSizes.existingSizes,\r\n    updatingSizes: state.admSizes.updatingSizes,\r\n    sizeUpdateResults: state.admSizes.sizeUpdateResults,\r\n    isSizeUpdating: state.admSizes.isSizeUpdating,\r\n    preUpdateValue: state.admSizes.preUpdateValue,\r\n    updatedSizeValue: state.admSizes.updatedSizeValue,\r\n    errorMsg: state.admSizes.errorMsg,\r\n    fetchExistingSizesMessage: state.admSizes.fetchExistingSizesMessage\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    getNewSizeName,\r\n    saveNewSizeInDb,\r\n    getExistingSizes,\r\n    getUpdatedSize,\r\n    updateSizeInDb,\r\n    updateSizesInAllProducts\r\n  }\r\n)(AdmSizes);\r\n","import React, { Component } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Route, withRouter } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\n//Components\r\nimport AdmNavMenu from \"./AdmNavMenu\";\r\nimport AdmProducts from \"./AdmProducts\";\r\nimport AdmColors from \"./AdmColors\";\r\nimport AdmSizes from \"./AdmSizes\";\r\n\r\n// import AdmCarousel from \"./AdmCarousel\";\r\n// import AdmUsers from \"./AdmUsers\";\r\n// import AdmFooter from \"./AdmFooter\";\r\n\r\nimport logo from \"../../img/matter.svg\";\r\n\r\nimport \"../../scss/resources/resources.scss\";\r\nimport \"./adminDashboard.scss\";\r\n\r\nclass AdminDashboard extends Component {\r\n\r\n  componentDidMount () {\r\n    axios.get(\"/users/admin\")\r\n        .then(res => res.data)\r\n        .then(data => {\r\n          if (data.success) {\r\n              this.props.history.push(\"/admin/dashboard\")\r\n          } else {\r\n              this.props.history.push(\"/error-access\")\r\n          }\r\n        })\r\n        .catch(() => {\r\n            this.props.history.push(\"/error-access\")\r\n        })\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <header className=\"main-header\">\r\n          <div className=\"container\">\r\n            <div className=\"header-content\">\r\n              <NavLink to=\"/\" className=\"logo\">\r\n                <img src={logo} alt=\"Matter\" />\r\n              </NavLink>\r\n            </div>\r\n          </div>\r\n        </header>\r\n        <div className=\"admin-dashboard-wrapper\">\r\n          <div className=\"admin-dashboard\">\r\n            <ul className=\"admin-dashboard-list\">\r\n              <li className=\"admin-dashboard-item\">\r\n                <NavLink\r\n                  className=\"admin-dashboard-link\"\r\n                  activeClassName=\"admin-dashboard-link-active\"\r\n                  to=\"/admin/dashboard/navigation-menu\"\r\n                >\r\n                  Navigation menu\r\n                </NavLink>\r\n              </li>\r\n              <li className=\"admin-dashboard-item\">\r\n                <NavLink\r\n                  className=\"admin-dashboard-link\"\r\n                  activeClassName=\"admin-dashboard-link-active\"\r\n                  to=\"/admin/dashboard/products\"\r\n                >\r\n                  New Products\r\n                </NavLink>\r\n              </li>\r\n              <li className=\"admin-dashboard-item\">\r\n                <NavLink\r\n                  className=\"admin-dashboard-link\"\r\n                  activeClassName=\"admin-dashboard-link-active\"\r\n                  to=\"/admin/dashboard/colors\"\r\n                >\r\n                  Colors\r\n                </NavLink>\r\n              </li>\r\n              <li className=\"admin-dashboard-item\">\r\n                <NavLink\r\n                  className=\"admin-dashboard-link\"\r\n                  activeClassName=\"admin-dashboard-link-active\"\r\n                  to=\"/admin/dashboard/sizes\"\r\n                >\r\n                  Sizes\r\n                </NavLink>\r\n              </li>\r\n              {/* <li className=\"admin-dashboard-item\">\r\n              <NavLink\r\n                className=\"admin-dashboard-link\"\r\n                activeClassName=\"admin-dashboard-link-active\"\r\n                to=\"/admin/dashboard/carousel\"\r\n              >\r\n                Carousel\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"admin-dashboard-item\">\r\n              <NavLink\r\n                className=\"admin-dashboard-link\"\r\n                activeClassName=\"admin-dashboard-link-active\"\r\n                to=\"/admin/dashboard/users\"\r\n              >\r\n                Users\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"admin-dashboard-item\">\r\n              <NavLink\r\n                className=\"admin-dashboard-link\"\r\n                activeClassName=\"admin-dashboard-link-active\"\r\n                to=\"/admin/dashboard/footer\"\r\n              >\r\n                Footer\r\n              </NavLink>\r\n            </li> */}\r\n            </ul>\r\n          </div>\r\n\r\n          <div className=\"admin-dashboard-content\">\r\n            <Route\r\n              exact\r\n              path=\"/admin/dashboard/navigation-menu\"\r\n              component={AdmNavMenu}\r\n            />\r\n            <Route\r\n              exact\r\n              path=\"/admin/dashboard/products\"\r\n              component={AdmProducts}\r\n            />\r\n            <Route exact path=\"/admin/dashboard/colors\" component={AdmColors} />\r\n            <Route exact path=\"/admin/dashboard/sizes\" component={AdmSizes} />\r\n            {/* <Route\r\n            exact\r\n            path=\"/admin/dashboard/carousel\"\r\n            component={AdmCarousel}\r\n          />\r\n          <Route exact path=\"/admin/dashboard/users\" component={AdmUsers} />\r\n          <Route exact path=\"/admin/dashboard/footer\" component={AdmFooter} /> */}\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(AdminDashboard);\r\n","import React, {Component, Fragment} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport FormLogin from '../LoginForm/FormLogin'\r\n\r\nimport './RedirectLogin.scss';\r\nimport {checkRedirectLogin} from \"../../../actions/login\";\r\n\r\nclass RedirectLogin extends Component {\r\n\r\n\r\n    handleSubmit = (values) => {\r\n        let historyLink = this.props.login.historyPath;\r\n\r\n        let sendLogin = {\r\n            email: values.email,\r\n            password: values.password\r\n        };\r\n\r\n        this.props.checkRedirectLogin(sendLogin, this.props.history, historyLink);\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        let classCheckEmail = (this.props.windowsStatus.invalidLogin) ? null : 'd-none';\r\n\r\n        return (\r\n            <Fragment>\r\n                <NavLink\r\n                    to=\"/\"\r\n                    // onClick={() => this.props.goToProfile(this.props.history)}\r\n                >\r\n                    Back to main page\r\n                </NavLink>\r\n                <div className='redirect-login'>\r\n                    <h2 className='login-menu_header'>Log in</h2>\r\n                    <p className='login-menu_par'>Please enter your account details to log in</p>\r\n\r\n\r\n                    <div className={classCheckEmail}>\r\n                        Invalid Email or password\r\n                    </div>\r\n                    <FormLogin onSubmit={this.handleSubmit}/>\r\n\r\n\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    };\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        windowsStatus: state.login.windowsStatus,\r\n        login: state.login\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        checkRedirectLogin: (loginForm, history, link) => dispatch(checkRedirectLogin(loginForm, history, link)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(RedirectLogin))","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\n\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nimport \"./verify-login.scss\"\r\n\r\nclass VerifyLogin extends Component {\r\n\r\n    state = {\r\n        success: false,\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        axios.post(\"/users/verify\", {id: this.props.match.params.id})\r\n            .then(res => res.data)\r\n            .then(data => {\r\n                if (data.success) {\r\n                    this.setState({\r\n                        success: true\r\n                    })\r\n                }\r\n            })\r\n            .catch()\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <>\r\n                {\r\n                    (!this.state.success) ?\r\n                        (<div className=\"verify-block\">\r\n\r\n                            <p className=\"verify-title\">\r\n                                Unsuccessfull verifying of email\r\n                            </p>\r\n\r\n                            <p className=\"verify-text\">\r\n                                You try to verify incorrect email\r\n                            </p>\r\n                            <p className=\"verify-text\">\r\n                                Please open our mail and click on link\r\n                            </p>\r\n\r\n                            <NavLink className=\"verify-link\" to=\"/\">\r\n                                Go to main page\r\n                            </NavLink>\r\n                        </div>) :\r\n                        (<div className=\"verify-block\">\r\n\r\n                            <p className=\"verify-title\">\r\n                                Successfull verifying of email\r\n                            </p>\r\n\r\n                            <p className=\"verify-text\">\r\n                                You account was successfully verified.\r\n                            </p>\r\n                            <p className=\"verify-text\">\r\n                                You can go to main page and log in\r\n                            </p>\r\n\r\n                            <NavLink className=\"verify-link\" to=\"/\">\r\n                                Go to main page\r\n                            </NavLink>\r\n                        </div>)\r\n                }\r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default VerifyLogin","import React, {Component} from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nimport \"./ErrorAccess.scss\"\r\n\r\n\r\nclass ErrorAccess extends Component {\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"section-error-success\">\r\n                <p className=\"section-error-success-title\">\r\n                    Oooops. Something went wrong\r\n                </p>\r\n                <NavLink to=\"/\" className=\"section-error-success-link\">\r\n                    Back to Main Page\r\n                </NavLink>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default ErrorAccess","import React, {Component} from \"react\";\r\nimport {Switch, Route} from \"react-router-dom\";\r\n\r\nimport Dashboard from \"./components/Dashboard\";\r\nimport AdminDashboard from \"./components/AdminDashboard\";\r\nimport RedirectLogin from \"./components/TopBlockAuth/RedirectLogin\";\r\nimport VerifyLogin from \"./components/VerifyLogin\";\r\nimport ErrorAccess from \"./components/ErrorAccess\";\r\n\r\nimport {checkLoginCartOnStart} from \"./actions/login\";\r\n\r\nimport \"./scss/style.scss\";\r\n\r\nclass App extends Component {\r\n    render() {\r\n        checkLoginCartOnStart();\r\n\r\n        return (\r\n            <Switch>\r\n                <Route exact path=\"/login\" component={RedirectLogin}/>\r\n                <Route exact path=\"/error-access\" component={ErrorAccess}/>\r\n                <Route exact path=\"/verify/:id\" component={VerifyLogin}/>\r\n                <Route path=\"/admin/dashboard\" component={AdminDashboard}/>\r\n                <Route path=\"/\" component={Dashboard}/>\r\n            </Switch>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/matter.c6c8e627.svg\";"],"sourceRoot":""}