// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Header component Header component render 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Header />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="container"
      >
        <div
          className="header-content"
        >
          <div
            className="header-burger-menu"
          />
          <NavLink
            activeClassName="active"
            aria-current="page"
            className="logo"
            to="/"
          >
            <img
              alt="Matter"
              src="matter.svg"
            />
          </NavLink>
          <Connect(NavMenu) />
          <Connect(withRouter(TopBlockAuth)) />
        </div>
      </div>,
      "className": "main-header",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="header-content"
        >
          <div
            className="header-burger-menu"
          />
          <NavLink
            activeClassName="active"
            aria-current="page"
            className="logo"
            to="/"
          >
            <img
              alt="Matter"
              src="matter.svg"
            />
          </NavLink>
          <Connect(NavMenu) />
          <Connect(withRouter(TopBlockAuth)) />
        </div>,
        "className": "container",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="header-burger-menu"
            />,
            <NavLink
              activeClassName="active"
              aria-current="page"
              className="logo"
              to="/"
            >
              <img
                alt="Matter"
                src="matter.svg"
              />
            </NavLink>,
            <Connect(NavMenu) />,
            <Connect(withRouter(TopBlockAuth)) />,
          ],
          "className": "header-content",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "header-burger-menu",
            },
            "ref": null,
            "rendered": null,
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "activeClassName": "active",
              "aria-current": "page",
              "children": <img
                alt="Matter"
                src="matter.svg"
              />,
              "className": "logo",
              "to": "/",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "alt": "Matter",
                "src": "matter.svg",
              },
              "ref": null,
              "rendered": null,
              "type": "img",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "div",
      },
      "type": "div",
    },
    "type": "header",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="container"
        >
          <div
            className="header-content"
          >
            <div
              className="header-burger-menu"
            />
            <NavLink
              activeClassName="active"
              aria-current="page"
              className="logo"
              to="/"
            >
              <img
                alt="Matter"
                src="matter.svg"
              />
            </NavLink>
            <Connect(NavMenu) />
            <Connect(withRouter(TopBlockAuth)) />
          </div>
        </div>,
        "className": "main-header",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="header-content"
          >
            <div
              className="header-burger-menu"
            />
            <NavLink
              activeClassName="active"
              aria-current="page"
              className="logo"
              to="/"
            >
              <img
                alt="Matter"
                src="matter.svg"
              />
            </NavLink>
            <Connect(NavMenu) />
            <Connect(withRouter(TopBlockAuth)) />
          </div>,
          "className": "container",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="header-burger-menu"
              />,
              <NavLink
                activeClassName="active"
                aria-current="page"
                className="logo"
                to="/"
              >
                <img
                  alt="Matter"
                  src="matter.svg"
                />
              </NavLink>,
              <Connect(NavMenu) />,
              <Connect(withRouter(TopBlockAuth)) />,
            ],
            "className": "header-content",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "header-burger-menu",
              },
              "ref": null,
              "rendered": null,
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "activeClassName": "active",
                "aria-current": "page",
                "children": <img
                  alt="Matter"
                  src="matter.svg"
                />,
                "className": "logo",
                "to": "/",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "alt": "Matter",
                  "src": "matter.svg",
                },
                "ref": null,
                "rendered": null,
                "type": "img",
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "div",
        },
        "type": "div",
      },
      "type": "header",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
