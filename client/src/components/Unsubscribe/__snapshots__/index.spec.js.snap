// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Unsubscribe component Unsubscribe component render 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Unsubscribe />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": <section
        className="section-unsubscribe"
      >
        <div
          className="container"
        >
          <div
            className="unsubscribe"
          >
            <form
              className="unsubscribe-form"
              onSubmit={[Function]}
            >
              <input
                className="unsubscribe-form-btn"
                id="unsubscribe-btn"
                type="submit"
                value="UNSUBSCRIBE"
              />
            </form>
          </div>
        </div>
      </section>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="container"
        >
          <div
            className="unsubscribe"
          >
            <form
              className="unsubscribe-form"
              onSubmit={[Function]}
            >
              <input
                className="unsubscribe-form-btn"
                id="unsubscribe-btn"
                type="submit"
                value="UNSUBSCRIBE"
              />
            </form>
          </div>
        </div>,
        "className": "section-unsubscribe",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="unsubscribe"
          >
            <form
              className="unsubscribe-form"
              onSubmit={[Function]}
            >
              <input
                className="unsubscribe-form-btn"
                id="unsubscribe-btn"
                type="submit"
                value="UNSUBSCRIBE"
              />
            </form>
          </div>,
          "className": "container",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <form
              className="unsubscribe-form"
              onSubmit={[Function]}
            >
              <input
                className="unsubscribe-form-btn"
                id="unsubscribe-btn"
                type="submit"
                value="UNSUBSCRIBE"
              />
            </form>,
            "className": "unsubscribe",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <input
                className="unsubscribe-form-btn"
                id="unsubscribe-btn"
                type="submit"
                value="UNSUBSCRIBE"
              />,
              "className": "unsubscribe-form",
              "onSubmit": [Function],
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "unsubscribe-form-btn",
                "id": "unsubscribe-btn",
                "type": "submit",
                "value": "UNSUBSCRIBE",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            "type": "form",
          },
          "type": "div",
        },
        "type": "div",
      },
      "type": "section",
    },
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <section
          className="section-unsubscribe"
        >
          <div
            className="container"
          >
            <div
              className="unsubscribe"
            >
              <form
                className="unsubscribe-form"
                onSubmit={[Function]}
              >
                <input
                  className="unsubscribe-form-btn"
                  id="unsubscribe-btn"
                  type="submit"
                  value="UNSUBSCRIBE"
                />
              </form>
            </div>
          </div>
        </section>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="container"
          >
            <div
              className="unsubscribe"
            >
              <form
                className="unsubscribe-form"
                onSubmit={[Function]}
              >
                <input
                  className="unsubscribe-form-btn"
                  id="unsubscribe-btn"
                  type="submit"
                  value="UNSUBSCRIBE"
                />
              </form>
            </div>
          </div>,
          "className": "section-unsubscribe",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="unsubscribe"
            >
              <form
                className="unsubscribe-form"
                onSubmit={[Function]}
              >
                <input
                  className="unsubscribe-form-btn"
                  id="unsubscribe-btn"
                  type="submit"
                  value="UNSUBSCRIBE"
                />
              </form>
            </div>,
            "className": "container",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <form
                className="unsubscribe-form"
                onSubmit={[Function]}
              >
                <input
                  className="unsubscribe-form-btn"
                  id="unsubscribe-btn"
                  type="submit"
                  value="UNSUBSCRIBE"
                />
              </form>,
              "className": "unsubscribe",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <input
                  className="unsubscribe-form-btn"
                  id="unsubscribe-btn"
                  type="submit"
                  value="UNSUBSCRIBE"
                />,
                "className": "unsubscribe-form",
                "onSubmit": [Function],
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "unsubscribe-form-btn",
                  "id": "unsubscribe-btn",
                  "type": "submit",
                  "value": "UNSUBSCRIBE",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
              "type": "form",
            },
            "type": "div",
          },
          "type": "div",
        },
        "type": "section",
      },
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
